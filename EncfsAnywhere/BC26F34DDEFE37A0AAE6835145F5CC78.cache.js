EncfsAnywhere.onScriptDownloaded(["var $wnd = $wnd || window.parent;\nvar __gwtModuleFunction = $wnd.EncfsAnywhere;\nvar $sendStats = __gwtModuleFunction.__sendStats;\n$sendStats('moduleStartup', 'moduleEvalStart');\nvar $gwt_version = \"2.6.0\";\nvar $strongName = 'BC26F34DDEFE37A0AAE6835145F5CC78';\nvar $doc = $wnd.document;function __gwtStartLoadingFragment(frag) {\nvar fragFile = 'deferredjs/' + $strongName + '/' + frag + '.cache.js';\nreturn __gwtModuleFunction.__startLoadingFragment(fragFile);\n}\nfunction __gwtInstallCode(code) {return __gwtModuleFunction.__installRunAsyncCode(code);}\nvar $stats = $wnd.__gwtStatsEvent ? function(a) {return $wnd.__gwtStatsEvent(a);} : null;\nvar $sessionId = $wnd.__gwtStatsSessionId ? $wnd.__gwtStatsSessionId : null;\nvar _, N100000000_longLit = {l:0, m:4193280, h:1048575}, N1_longLit = {l:4194303, m:4194303, h:1048575}, P0_longLit = {l:0, m:0, h:0}, P1_longLit = {l:1, m:0, h:0}, P8_longLit = {l:8, m:0, h:0}, Pa_longLit = {l:10, m:0, h:0}, P3f_longLit = {l:63, m:0, h:0}, Pff_longLit = {l:255, m:0, h:0}, P1dcd6500_longLit = {l:877824, m:119, h:0}, P3b9aca00_longLit = {l:1755648, m:238, h:0}, Pffffffff_longLit = {l:4194303, m:1023, h:0}, seedTable = {}, Q$Object = 0, Q$String = 1, Q$JavaScriptException = 2, Q$SerializableThrowable = 3, Q$Style$HasCssName = 4, Q$Style$TextAlign = 5, Q$ClickHandler = 6, Q$DomEvent$Type = 7, Q$KeyDownHandler = 8, Q$CloseHandler = 9, Q$HasAttachHandlers = 10, Q$ValueChangeHandler = 11, Q$EventHandler = 12, Q$HasHandlers = 13, Q$HasDirection$Direction = 14, Q$LongLibBase$LongEmul = 15, Q$HtmlLogFormatter = 16, Q$SafeHtml = 17, Q$EventListener = 18, Q$HasVisibility = 19, Q$HasWidgets = 20, Q$IsWidget = 21, Q$RootPanel = 22, Q$UIObject = 23, Q$ValueBoxBase$TextAlignment = 24, Q$Widget = 25, Q$Document = 26, Q$DOMItem = 27, Q$SimpleEventBus$Command = 28, Q$UmbrellaException = 29, Q$ProgressCallback = 30, Q$Controller = 31, Q$AlertEventHandler = 32, Q$AsyncCallFinishedEventHandler = 33, Q$AsyncCallStartedEventHandler = 34, Q$DropboxConnectedEventHandler = 35, Q$DownloadStatus = 36, Q$Files$PathInfo = 37, Q$Path = 38, Q$Path_$1 = 39, Q$InputStream = 40, Q$InvalidKeyException = 41, Q$NoSuchAlgorithmException = 42, Q$SecretKey = 43, Q$EncFSChecksumException = 44, Q$EncFSConfig = 45, Q$EncFSCorruptDataException = 46, Q$EncFSFile = 47, Q$EncFSFileInfo = 48, Q$EncFSFile_$1 = 49, Q$EncFSFilenameEncryptionAlgorithm = 50, Q$EncFSInputStream = 51, Q$EncFSUnsupportedException = 52, Q$EncFSVolume = 53, Q$EncFSVolumeBuilder$ConfigBuilder = 54, Q$EncFSVolumeBuilder$PasswordBuilder = 55, Q$EncFSVolumeBuilder$Pbkdf2ProviderBuilder = 56, Q$IOException = 57, Q$Serializable = 58, Q$UnsupportedEncodingException = 59, Q$Boolean = 60, Q$CharSequence = 61, Q$Comparable = 62, Q$Enum = 63, Q$Exception = 64, Q$IllegalArgumentException = 65, Q$Number = 66, Q$Object_$1 = 67, Q$StackTraceElement = 68, Q$Throwable = 69, Q$BigInteger = 70, Q$Date = 71, Q$List = 72, Q$Map = 73, Q$Map$Entry = 74, Q$NoSuchElementException = 75, Q$RandomAccess = 76, Q$Set = 77, Q$Handler = 78, Q$Handler_$1 = 79, Q$Logger = 80, CM$ = {};\nfunction newSeed(id_0){\n  return new seedTable[id_0];\n}\n\nfunction defineSeed(id_0, superSeed, castableTypeMap){\n  var seed = seedTable[id_0];\n  if (seed && !seed.___clazz$) {\n    _ = seed.prototype;\n  }\n   else {\n    !seed && (seed = seedTable[id_0] = function(){\n    }\n    );\n    _ = seed.prototype = superSeed < 0?{}:newSeed(superSeed);\n    _.castableTypeMap$ = castableTypeMap;\n  }\n  for (var i = 3; i < arguments.length; ++i) {\n    arguments[i].prototype = _;\n  }\n  if (seed.___clazz$) {\n    _.___clazz$ = seed.___clazz$;\n    seed.___clazz$ = null;\n  }\n}\n\nfunction makeCastMap(a){\n  var result = {};\n  for (var i = 0, c = a.length; i < c; ++i) {\n    result[a[i]] = 1;\n  }\n  return result;\n}\n\nfunction nullMethod(){\n}\n\nfunction Object_1(){\n}\n\ndefineSeed(1, -1, CM$, Object_1);\n_.equals$ = function equals(other){\n  return this === other;\n}\n;\n_.getClass$ = function getClass_0(){\n  return this.___clazz$;\n}\n;\n_.hashCode$ = function hashCode_0(){\n  return getHashCode(this);\n}\n;\n_.toString$ = function toString_0(){\n  return this.___clazz$.typeName + '@' + toPowerOfTwoString(this.hashCode$());\n}\n;\n_.toString = function(){\n  return this.toString$();\n}\n;\n_.typeMarker$ = nullMethod;\nfunction setUncaughtExceptionHandler(handler){\n  uncaughtExceptionHandler = handler;\n}\n\nvar uncaughtExceptionHandler = null;\nfunction $getStackTrace(this$static){\n  if (this$static.stackTrace == null) {\n    return initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$StackTraceElement, 0, 0);\n  }\n  return this$static.stackTrace;\n}\n\nfunction $initCause(this$static, cause){\n  if (this$static.cause) {\n    throw new IllegalStateException_1(\"Can't overwrite cause\");\n  }\n  if (cause == this$static) {\n    throw new IllegalArgumentException_1('Self-causation not permitted');\n  }\n  this$static.cause = cause;\n  return this$static;\n}\n\nfunction $printStackTrace(this$static, out){\n  var element, element$array, element$index, element$max, t;\n  for (t = this$static; t; t = t.cause) {\n    t != this$static && out.print_0('Caused by: ');\n    out.println(t);\n    for (element$array = $getStackTrace(t) , element$index = 0 , element$max = element$array.length; element$index < element$max; ++element$index) {\n      element = element$array[element$index];\n      out.println_0('\\tat ' + element);\n    }\n  }\n}\n\nfunction $setStackTrace(this$static, stackTrace){\n  var c, copy, i;\n  copy = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$StackTraceElement, stackTrace.length, 0);\n  for (i = 0 , c = stackTrace.length; i < c; ++i) {\n    if (!stackTrace[i]) {\n      throw new NullPointerException_0;\n    }\n    copy[i] = stackTrace[i];\n  }\n  this$static.stackTrace = copy;\n}\n\nfunction $toString(this$static){\n  var className, msg;\n  className = this$static.___clazz$.typeName;\n  msg = this$static.getMessage();\n  return msg != null?className + ': ' + msg:className;\n}\n\nfunction Throwable_0(message){\n  this.detailMessage = message;\n  this.fillInStackTrace();\n}\n\ndefineSeed(8, 1, makeCastMap([Q$Serializable, Q$Throwable]));\n_.fillInStackTrace = function fillInStackTrace(){\n  $fillInStackTrace(this);\n  return this;\n}\n;\n_.getMessage = function getMessage(){\n  return this.detailMessage;\n}\n;\n_.toString$ = function toString_1(){\n  return $toString(this);\n}\n;\nfunction Exception_0(){\n  this.fillInStackTrace();\n}\n\nfunction Exception_1(message){\n  Throwable_0.call(this, message);\n}\n\nfunction Exception_2(cause){\n  this.detailMessage = !cause?null:$toString(cause);\n  this.cause = cause;\n  this.fillInStackTrace();\n}\n\ndefineSeed(7, 8, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]));\nfunction RuntimeException_0(){\n  Exception_0.call(this);\n}\n\nfunction RuntimeException_1(message){\n  Exception_1.call(this, message);\n}\n\nfunction RuntimeException_2(message, cause){\n  this.cause = cause;\n  this.detailMessage = message;\n  this.fillInStackTrace();\n}\n\ndefineSeed(6, 7, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), RuntimeException_1);\nfunction $clinit_JavaScriptException(){\n  $clinit_JavaScriptException = nullMethod;\n  NOT_SET = new Object_1;\n}\n\nfunction $ensureInit(this$static){\n  var exception;\n  if (this$static.message_0 == null) {\n    exception = this$static.e === NOT_SET?null:this$static.e;\n    this$static.name_0 = exception == null?'null':instanceOfJso(exception)?getExceptionName0(dynamicCastJso(exception)):instanceOf(exception, Q$String)?'String':getClass__devirtual$(exception).typeName;\n    this$static.description = this$static.description + ': ' + (instanceOfJso(exception)?getExceptionDescription0(dynamicCastJso(exception)):exception + '');\n    this$static.message_0 = '(' + this$static.name_0 + ') ' + (instanceOfJso(exception)?$getProperties(dynamicCastJso(exception)):'') + this$static.description;\n  }\n}\n\nfunction JavaScriptException_0(e){\n  $clinit_JavaScriptException();\n  RuntimeException_0.call(this);\n  this.description = '';\n  this.e = e;\n  this.description = '';\n  $createStackTrace(this);\n}\n\nfunction getExceptionDescription0(e){\n  return e == null?null:e.message;\n}\n\nfunction getExceptionName0(e){\n  return e == null?null:e.name;\n}\n\ndefineSeed(5, 6, makeCastMap([Q$JavaScriptException, Q$Serializable, Q$Exception, Q$Throwable]), JavaScriptException_0);\n_.getMessage = function getMessage_0(){\n  $ensureInit(this);\n  return this.message_0;\n}\n;\n_.getThrown = function getThrown(){\n  return this.e === NOT_SET?null:this.e;\n}\n;\nvar NOT_SET;\nfunction equals__devirtual$(this$static, other){\n  var maybeJsoInvocation;\n  return maybeJsoInvocation = this$static , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.equals$(other):maybeJsoInvocation === other;\n}\n\nfunction getClass__devirtual$(this$static){\n  var maybeJsoInvocation;\n  return maybeJsoInvocation = this$static , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.___clazz$:Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;\n}\n\nfunction hashCode__devirtual$(this$static){\n  var maybeJsoInvocation;\n  return maybeJsoInvocation = this$static , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.hashCode$():getHashCode(maybeJsoInvocation);\n}\n\nfunction $push(this$static, value_0){\n  this$static[this$static.length] = value_0;\n}\n\nfunction $setLength(this$static, newLength){\n  this$static.length = newLength;\n}\n\nfunction create(milliseconds){\n  return new Date(milliseconds);\n}\n\ndefineSeed(14, 1, {});\nfunction apply_0(jsFunction, thisObj, args){\n  return jsFunction.apply(thisObj, args);\n  var __0;\n}\n\nfunction dispose(d){\n  !!d && ($disposeEventSystem() , cleanupDOM(d.this$0));\n}\n\nfunction enter(){\n  var now_0;\n  if (entryDepth != 0) {\n    now_0 = (new Date).getTime();\n    if (now_0 - watchdogEntryDepthLastScheduled > 2000) {\n      watchdogEntryDepthLastScheduled = now_0;\n      watchdogEntryDepthTimerId = watchdogEntryDepthSchedule();\n    }\n  }\n  if (entryDepth++ == 0) {\n    $flushEntryCommands(($clinit_SchedulerImpl() , INSTANCE));\n    return true;\n  }\n  return false;\n}\n\nfunction entry_0(jsFunction){\n  return function(){\n    try {\n      return entry0(jsFunction, this, arguments);\n    }\n     catch (e) {\n      throw e;\n    }\n  }\n  ;\n}\n\nfunction entry0(jsFunction, thisObj, args){\n  var initialEntry, t;\n  initialEntry = enter();\n  try {\n    if (uncaughtExceptionHandler) {\n      try {\n        return apply_0(jsFunction, thisObj, args);\n      }\n       catch ($e0) {\n        $e0 = wrap_0($e0);\n        if (instanceOf($e0, Q$Throwable)) {\n          t = $e0;\n          reportUncaughtException(t);\n          return undefined;\n        }\n         else \n          throw unwrap($e0);\n      }\n    }\n     else {\n      return apply_0(jsFunction, thisObj, args);\n    }\n  }\n   finally {\n    exit(initialEntry);\n  }\n}\n\nfunction exit(initialEntry){\n  initialEntry && $flushFinallyCommands(($clinit_SchedulerImpl() , INSTANCE));\n  --entryDepth;\n  if (initialEntry) {\n    if (watchdogEntryDepthTimerId != -1) {\n      watchdogEntryDepthCancel(watchdogEntryDepthTimerId);\n      watchdogEntryDepthTimerId = -1;\n    }\n  }\n}\n\nfunction getHashCode(o){\n  return o.$H || (o.$H = ++sNextHashId);\n}\n\nfunction registerEntry(){\n  return entry_0;\n}\n\nfunction reportToBrowser(e){\n  $wnd.setTimeout(function(){\n    throw e;\n  }\n  , 0);\n}\n\nfunction reportUncaughtException(e){\n  var handler;\n  handler = uncaughtExceptionHandler;\n  if (handler) {\n    if (handler == uncaughtExceptionHandlerForTest) {\n      return;\n    }\n    $log_2(handler.val$log, ($clinit_Level() , SEVERE), e.getMessage(), e);\n    return;\n  }\n  reportToBrowser(instanceOf(e, Q$JavaScriptException)?dynamicCast(e, Q$JavaScriptException).getThrown():e);\n}\n\nfunction setTimeout_0(func, time){\n  return setTimeout0(func, time, null);\n}\n\nfunction watchdogEntryDepthCancel(timerId){\n  $wnd.clearTimeout(timerId);\n}\n\nfunction watchdogEntryDepthSchedule(){\n  return setTimeout_0(function(){\n    entryDepth != 0 && (entryDepth = 0);\n    watchdogEntryDepthTimerId = -1;\n  }\n  , 10);\n}\n\nvar entryDepth = 0, sNextHashId = 0, uncaughtExceptionHandlerForTest, watchdogEntryDepthLastScheduled = 0, watchdogEntryDepthTimerId = -1;\nfunction $clinit_SchedulerImpl(){\n  $clinit_SchedulerImpl = nullMethod;\n  INSTANCE = new SchedulerImpl_0;\n}\n\nfunction $flushEntryCommands(this$static){\n  var oldQueue, rescheduled;\n  if (this$static.entryCommands) {\n    rescheduled = null;\n    do {\n      oldQueue = this$static.entryCommands;\n      this$static.entryCommands = null;\n      rescheduled = runScheduledTasks(oldQueue, rescheduled);\n    }\n     while (this$static.entryCommands);\n    this$static.entryCommands = rescheduled;\n  }\n}\n\nfunction $flushFinallyCommands(this$static){\n  var oldQueue, rescheduled;\n  if (this$static.finallyCommands) {\n    rescheduled = null;\n    do {\n      oldQueue = this$static.finallyCommands;\n      this$static.finallyCommands = null;\n      rescheduled = runScheduledTasks(oldQueue, rescheduled);\n    }\n     while (this$static.finallyCommands);\n    this$static.finallyCommands = rescheduled;\n  }\n}\n\nfunction $scheduleFinally(this$static, cmd){\n  this$static.finallyCommands = push_0(this$static.finallyCommands, [cmd, false]);\n}\n\nfunction SchedulerImpl_0(){\n}\n\nfunction push_0(queue, task){\n  !queue && (queue = []);\n  queue[queue.length] = task;\n  return queue;\n}\n\nfunction runScheduledTasks(tasks, rescheduled){\n  var e, i, j, t;\n  for (i = 0 , j = tasks.length; i < j; i++) {\n    t = tasks[i];\n    try {\n      t[1]?t[0].nullMethod() && (rescheduled = push_0(rescheduled, t)):($clinit_StyleInjector() , needsInjection) && flush();\n    }\n     catch ($e0) {\n      $e0 = wrap_0($e0);\n      if (instanceOf($e0, Q$Throwable)) {\n        e = $e0;\n        reportUncaughtException(e);\n      }\n       else \n        throw unwrap($e0);\n    }\n  }\n  return rescheduled;\n}\n\ndefineSeed(16, 14, {}, SchedulerImpl_0);\nvar INSTANCE;\nfunction extractNameFromToString(fnToString){\n  var index_0, start_0, toReturn;\n  toReturn = '';\n  fnToString = $trim(fnToString);\n  index_0 = fnToString.indexOf('(');\n  start_0 = fnToString.indexOf('function') == 0?8:0;\n  if (index_0 == -1) {\n    index_0 = $indexOf_0(fnToString, fromCodePoint(64));\n    start_0 = fnToString.indexOf('function ') == 0?9:0;\n  }\n  index_0 != -1 && (toReturn = $trim($substring_0(fnToString, start_0, index_0)));\n  return toReturn.length > 0?toReturn:'anonymous';\n}\n\nfunction splice(arr, length_0){\n  arr.length >= length_0 && arr.splice(0, length_0);\n  return arr;\n}\n\nfunction $createStackTrace(e){\n  var i, j, stack_0, stackTrace;\n  stack_0 = $inferFrom(e.e === ($clinit_JavaScriptException() , NOT_SET)?null:e.e);\n  stackTrace = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$StackTraceElement, stack_0.length, 0);\n  for (i = 0 , j = stackTrace.length; i < j; i++) {\n    stackTrace[i] = new StackTraceElement_0(stack_0[i]);\n  }\n  $setStackTrace(e, stackTrace);\n}\n\nfunction $fillInStackTrace(t){\n  var i, j, stack_0, stackTrace;\n  stack_0 = splice($inferFrom($makeException()), 2);\n  stackTrace = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$StackTraceElement, stack_0.length, 0);\n  for (i = 0 , j = stackTrace.length; i < j; i++) {\n    stackTrace[i] = new StackTraceElement_0(stack_0[i]);\n  }\n  $setStackTrace(t, stackTrace);\n}\n\nfunction $getProperties(e){\n  var result = '';\n  try {\n    for (var prop in e) {\n      if (prop != 'name' && prop != 'message' && prop != 'toString') {\n        try {\n          var propValue = prop != '__gwt$exception'?e[prop]:'<skipped>';\n          result += '\\n ' + prop + ': ' + propValue;\n        }\n         catch (ignored) {\n        }\n      }\n    }\n  }\n   catch (ignored) {\n  }\n  return result;\n}\n\nfunction $makeException(){\n  try {\n    null.a();\n  }\n   catch (e) {\n    return e;\n  }\n}\n\nfunction $inferFrom(e){\n  var i, j, jso, stack_0;\n  jso = instanceOfJso(e)?dynamicCastJso(e):null;\n  stack_0 = jso && jso.stack?jso.stack.split('\\n'):[];\n  for (i = 0 , j = stack_0.length; i < j; i++) {\n    stack_0[i] = extractNameFromToString(stack_0[i]);\n  }\n  return stack_0;\n}\n\ndefineSeed(21, 1, {});\nfunction $append(this$static, x_0){\n  this$static.string += x_0;\n}\n\nfunction $append_0(this$static, x_0){\n  this$static.string += x_0;\n}\n\nfunction $appendNonNull(this$static, x_0){\n  this$static.string += x_0;\n}\n\nfunction $replace(this$static, start_0, end, toInsert){\n  this$static.string = $substring_0(this$static.string, 0, start_0) + toInsert + $substring(this$static.string, end);\n}\n\nfunction StringBufferImplAppend_0(){\n}\n\ndefineSeed(22, 21, {}, StringBufferImplAppend_0);\n_.string = '';\nfunction setTimeout0(func, time, disposeable){\n  var timerId = $wnd.setTimeout(function(){\n    func();\n    disposeable != null && dispose(disposeable);\n  }\n  , time);\n  return timerId;\n}\n\nfunction $initCause_0(this$static, cause){\n  return $initCause(this$static, instanceOf(cause, Q$SerializableThrowable)?dynamicCast(cause, Q$SerializableThrowable):cause?createSerializable(cause):null);\n}\n\nfunction $setDesignatedType(this$static, typeName){\n  this$static.typeName = typeName;\n  this$static.exactTypeKnown = true;\n}\n\nfunction SerializableThrowable_0(message){\n  Throwable_0.call(this, message);\n  this.typeName = null;\n}\n\nfunction createSerializable(t){\n  var throwable;\n  throwable = new SerializableThrowable_0(t.getMessage());\n  $setStackTrace(throwable, $getStackTrace(t));\n  $initCause_0(throwable, t.cause);\n  $setDesignatedType(throwable, t.___clazz$.typeName);\n  return throwable;\n}\n\ndefineSeed(24, 8, makeCastMap([Q$SerializableThrowable, Q$Serializable, Q$Throwable]), SerializableThrowable_0);\n_.fillInStackTrace = function fillInStackTrace_0(){\n  return this;\n}\n;\n_.toString$ = function toString_2(){\n  var msg, type_0;\n  type_0 = this.exactTypeKnown?this.typeName:this.typeName + '(EXACT TYPE UNKNOWN)';\n  msg = this.detailMessage;\n  return msg == null?type_0:type_0 + ': ' + msg;\n}\n;\n_.exactTypeKnown = false;\nfunction $appendChild(this$static, newChild){\n  return this$static.appendChild(newChild);\n}\n\nfunction $insertBefore(this$static, newChild, refChild){\n  return this$static.insertBefore(newChild, refChild);\n}\n\nfunction $removeChild(this$static, oldChild){\n  return this$static.removeChild(oldChild);\n}\n\nfunction $replaceChild(this$static, newChild, oldChild){\n  return this$static.replaceChild(newChild, oldChild);\n}\n\nfunction $getPropertyString(this$static, name_0){\n  return this$static[name_0] == null?null:String(this$static[name_0]);\n}\n\nfunction $setAttribute(this$static, name_0, value_0){\n  this$static.setAttribute(name_0, value_0);\n}\n\nfunction $setClassName(this$static, className){\n  this$static.className = className;\n}\n\nfunction $setInnerHTML(this$static, html){\n  this$static.innerHTML = html || '';\n}\n\nfunction $setPropertyString(this$static, name_0, value_0){\n  this$static[name_0] = value_0;\n}\n\nfunction $setTabIndex(this$static, tabIndex){\n  this$static.tabIndex = tabIndex;\n}\n\nfunction $createInputElement(doc, type_0){\n  var e = doc.createElement('INPUT');\n  e.type = type_0;\n  return e;\n}\n\nfunction $eventGetKeyCode(evt){\n  return evt.keyCode | 0;\n}\n\nfunction $getFirstChildElement(elem){\n  var child = elem.firstChild;\n  while (child && child.nodeType != 1)\n    child = child.nextSibling;\n  return child;\n}\n\nfunction $getNextSiblingElement(elem){\n  var sib = elem.nextSibling;\n  while (sib && sib.nodeType != 1)\n    sib = sib.nextSibling;\n  return sib;\n}\n\nfunction $getParentElement(node){\n  var parent_0 = node.parentNode;\n  (!parent_0 || parent_0.nodeType != 1) && (parent_0 = null);\n  return parent_0;\n}\n\nfunction $eventGetButton(evt){\n  var button = evt.button;\n  if (button == 1) {\n    return 4;\n  }\n   else if (button == 2) {\n    return 2;\n  }\n  return 1;\n}\n\nfunction $eventPreventDefault(evt){\n  evt.preventDefault();\n}\n\nfunction $setInnerText(elem, text_0){\n  elem.textContent = text_0 || '';\n}\n\nfunction $eventGetRelatedTarget(evt){\n  var relatedTarget = evt.relatedTarget;\n  if (!relatedTarget) {\n    return null;\n  }\n  try {\n    var nodeName = relatedTarget.nodeName;\n    return relatedTarget;\n  }\n   catch (e) {\n    return null;\n  }\n}\n\nfunction $isOrHasChild(parent_0, child){\n  return parent_0 === child || !!(parent_0.compareDocumentPosition(child) & 16);\n}\n\nfunction $toString_0(elem){\n  var doc = elem.ownerDocument;\n  var temp = elem.cloneNode(true);\n  var tempDiv = doc.createElement('DIV');\n  tempDiv.appendChild(temp);\n  outer = tempDiv.innerHTML;\n  temp.innerHTML = '';\n  return outer;\n}\n\nfunction $createUniqueId(this$static){\n  !this$static.gwt_uid && (this$static.gwt_uid = 1);\n  return 'gwt-uid-' + this$static.gwt_uid++;\n}\n\nfunction $getElementById(this$static, elementId){\n  return this$static.getElementById(elementId);\n}\n\nfunction $isChecked(this$static){\n  return !!this$static.checked;\n}\n\nfunction $isDefaultChecked(this$static){\n  return !!this$static.defaultChecked;\n}\n\nfunction $setChecked(this$static, checked){\n  this$static.checked = checked;\n}\n\nfunction $setDefaultChecked(this$static, defaultChecked){\n  this$static.defaultChecked = defaultChecked;\n}\n\nfunction $setHtmlFor(this$static, htmlFor){\n  this$static.htmlFor = htmlFor;\n}\n\nfunction $setPropertyImpl(this$static, name_0, value_0){\n  this$static[name_0] = value_0;\n}\n\nfunction $compareTo(this$static, other){\n  return this$static.ordinal - other.ordinal;\n}\n\nfunction Enum_0(name_0, ordinal){\n  this.name_0 = name_0;\n  this.ordinal = ordinal;\n}\n\ndefineSeed(39, 1, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum]));\n_.compareTo$ = function compareTo(other){\n  return $compareTo(this, dynamicCast(other, Q$Enum));\n}\n;\n_.equals$ = function equals_0(other){\n  return this === other;\n}\n;\n_.hashCode$ = function hashCode_1(){\n  return getHashCode(this);\n}\n;\n_.toString$ = function toString_3(){\n  return this.name_0;\n}\n;\n_.ordinal = 0;\nfunction $clinit_Style$TextAlign(){\n  $clinit_Style$TextAlign = nullMethod;\n  CENTER = new Style$TextAlign$1_0;\n  JUSTIFY = new Style$TextAlign$2_0;\n  LEFT = new Style$TextAlign$3_0;\n  RIGHT = new Style$TextAlign$4_0;\n  $VALUES = initValues(_3Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$Style$TextAlign, [CENTER, JUSTIFY, LEFT, RIGHT]);\n}\n\nfunction Style$TextAlign_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_0(){\n  $clinit_Style$TextAlign();\n  return $VALUES;\n}\n\ndefineSeed(38, 39, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES, CENTER, JUSTIFY, LEFT, RIGHT;\nfunction Style$TextAlign$1_0(){\n  Style$TextAlign_0.call(this, 'CENTER', 0);\n}\n\ndefineSeed(40, 38, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$1_0);\nfunction Style$TextAlign$2_0(){\n  Style$TextAlign_0.call(this, 'JUSTIFY', 1);\n}\n\ndefineSeed(41, 38, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$2_0);\nfunction Style$TextAlign$3_0(){\n  Style$TextAlign_0.call(this, 'LEFT', 2);\n}\n\ndefineSeed(42, 38, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$3_0);\nfunction Style$TextAlign$4_0(){\n  Style$TextAlign_0.call(this, 'RIGHT', 3);\n}\n\ndefineSeed(43, 38, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$4_0);\nfunction $clinit_StyleInjector(){\n  $clinit_StyleInjector = nullMethod;\n  toInject = [];\n  toInjectAtEnd = [];\n  toInjectAtStart = [];\n  flusher = new StyleInjector$1_0;\n}\n\nfunction flush(){\n  $clinit_StyleInjector();\n  var css, maybeReturn, toReturn;\n  toReturn = null;\n  if (toInjectAtStart.length != 0) {\n    css = toInjectAtStart.join('');\n    maybeReturn = $injectStyleSheetAtStart(($clinit_StyleInjector$StyleInjectorImpl() , IMPL), css);\n    !toInjectAtStart && (toReturn = maybeReturn);\n    $setLength(toInjectAtStart, 0);\n  }\n  if (toInject.length != 0) {\n    css = toInject.join('');\n    maybeReturn = $injectStyleSheet(($clinit_StyleInjector$StyleInjectorImpl() , IMPL), css);\n    !toInject && (toReturn = maybeReturn);\n    $setLength(toInject, 0);\n  }\n  if (toInjectAtEnd.length != 0) {\n    css = toInjectAtEnd.join('');\n    maybeReturn = $injectStyleSheet(($clinit_StyleInjector$StyleInjectorImpl() , IMPL), css);\n    !toInjectAtEnd && (toReturn = maybeReturn);\n    $setLength(toInjectAtEnd, 0);\n  }\n  needsInjection = false;\n  return toReturn;\n}\n\nfunction schedule(){\n  $clinit_StyleInjector();\n  if (!needsInjection) {\n    needsInjection = true;\n    $scheduleFinally(($clinit_SchedulerImpl() , INSTANCE), flusher);\n  }\n}\n\nvar flusher, needsInjection = false, toInject, toInjectAtEnd, toInjectAtStart;\nfunction StyleInjector$1_0(){\n}\n\ndefineSeed(45, 1, {}, StyleInjector$1_0);\nfunction $clinit_StyleInjector$StyleInjectorImpl(){\n  $clinit_StyleInjector$StyleInjectorImpl = nullMethod;\n  IMPL = new StyleInjector$StyleInjectorImpl_0;\n}\n\nfunction $createElement(contents){\n  var style;\n  style = $doc.createElement('style');\n  $setPropertyString(style, 'language', 'text/css');\n  $setInnerText(style, contents);\n  return style;\n}\n\nfunction $getHead(this$static){\n  var elt;\n  if (!this$static.head) {\n    elt = $doc.getElementsByTagName('head')[0];\n    this$static.head = elt;\n  }\n  return this$static.head;\n}\n\nfunction $injectStyleSheet(this$static, contents){\n  var style;\n  style = $createElement(contents);\n  $appendChild($getHead(this$static), style);\n  return style;\n}\n\nfunction $injectStyleSheetAtStart(this$static, contents){\n  var style;\n  style = $createElement(contents);\n  $insertBefore($getHead(this$static), style, this$static.head.firstChild);\n  return style;\n}\n\nfunction StyleInjector$StyleInjectorImpl_0(){\n}\n\ndefineSeed(46, 1, {}, StyleInjector$StyleInjectorImpl_0);\nvar IMPL;\ndefineSeed(54, 1, {});\n_.toString$ = function toString_4(){\n  return 'An event type';\n}\n;\nfunction $overrideSource(this$static, source){\n  this$static.source = source;\n}\n\ndefineSeed(53, 54, {});\n_.dead = false;\nfunction $setNativeEvent(this$static, nativeEvent){\n  this$static.nativeEvent = nativeEvent;\n}\n\nfunction $setRelativeElement(this$static, relativeElem){\n  this$static.relativeElem = relativeElem;\n}\n\nfunction fireNativeEvent(nativeEvent, handlerSource, relativeElem){\n  var currentNative, currentRelativeElem, type_0, type$iterator, types;\n  if (registered) {\n    types = dynamicCast($unsafeGet(registered, nativeEvent.type), Q$List);\n    if (types) {\n      for (type$iterator = types.iterator(); type$iterator.hasNext();) {\n        type_0 = dynamicCast(type$iterator.next_0(), Q$DomEvent$Type);\n        currentNative = type_0.flyweight.nativeEvent;\n        currentRelativeElem = type_0.flyweight.relativeElem;\n        $setNativeEvent(type_0.flyweight, nativeEvent);\n        $setRelativeElement(type_0.flyweight, relativeElem);\n        $fireEvent_0(handlerSource, type_0.flyweight);\n        $setNativeEvent(type_0.flyweight, currentNative);\n        $setRelativeElement(type_0.flyweight, currentRelativeElem);\n      }\n    }\n  }\n}\n\ndefineSeed(52, 53, {});\n_.getAssociatedType = function getAssociatedType(){\n  return this.getAssociatedType_0();\n}\n;\nvar registered;\ndefineSeed(51, 52, {});\ndefineSeed(50, 51, {});\nfunction $clinit_ClickEvent(){\n  $clinit_ClickEvent = nullMethod;\n  TYPE = new DomEvent$Type_0('click', new ClickEvent_0);\n}\n\nfunction ClickEvent_0(){\n}\n\ndefineSeed(49, 50, {}, ClickEvent_0);\n_.dispatch = function dispatch(handler){\n  dynamicCast(handler, Q$ClickHandler).onClick(this);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_0(){\n  return TYPE;\n}\n;\nvar TYPE;\ndefineSeed(57, 1, {});\n_.hashCode$ = function hashCode_2(){\n  return this.index_0;\n}\n;\n_.toString$ = function toString_5(){\n  return 'Event type';\n}\n;\n_.index_0 = 0;\nvar nextHashCode = 0;\nfunction GwtEvent$Type_0(){\n  this.index_0 = ++nextHashCode;\n}\n\ndefineSeed(56, 57, {}, GwtEvent$Type_0);\nfunction DomEvent$Type_0(eventName, flyweight){\n  var types;\n  GwtEvent$Type_0.call(this);\n  this.flyweight = flyweight;\n  !registered && (registered = new PrivateMap_0);\n  types = dynamicCast($unsafeGet(registered, eventName), Q$List);\n  if (!types) {\n    types = new ArrayList_0;\n    $unsafePut(registered, eventName, types);\n  }\n  types.add_1(this);\n  this.name_0 = eventName;\n}\n\ndefineSeed(55, 56, makeCastMap([Q$DomEvent$Type]), DomEvent$Type_0);\ndefineSeed(59, 52, {});\ndefineSeed(58, 59, {});\nfunction $clinit_KeyDownEvent(){\n  $clinit_KeyDownEvent = nullMethod;\n  TYPE_0 = new DomEvent$Type_0('keydown', new KeyDownEvent_0);\n}\n\nfunction $dispatch(this$static, handler){\n  $eventGetKeyCode(this$static.nativeEvent) == 13?$loginClicked(handler.this$0):$eventGetKeyCode(this$static.nativeEvent) == 27 && $cancelClicked(handler.this$0);\n}\n\nfunction KeyDownEvent_0(){\n}\n\ndefineSeed(60, 58, {}, KeyDownEvent_0);\n_.dispatch = function dispatch_0(handler){\n  $dispatch(this, dynamicCast(handler, Q$KeyDownHandler));\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_1(){\n  return TYPE_0;\n}\n;\nvar TYPE_0;\nfunction $unsafeGet(this$static, key){\n  return this$static.map_0[key];\n}\n\nfunction $unsafePut(this$static, key, value_0){\n  this$static.map_0[key] = value_0;\n}\n\nfunction PrivateMap_0(){\n  this.map_0 = {};\n}\n\ndefineSeed(61, 1, {}, PrivateMap_0);\nfunction CloseEvent_1(){\n}\n\nfunction fire(source){\n  var event_0;\n  if (TYPE_1) {\n    event_0 = new CloseEvent_1;\n    $fireEvent(source, event_0);\n  }\n}\n\ndefineSeed(63, 53, {}, CloseEvent_1);\n_.dispatch = function dispatch_1(handler){\n  dynamicCast(handler, Q$CloseHandler);\n  detachWidgets();\n}\n;\n_.getAssociatedType = function getAssociatedType_2(){\n  return TYPE_1;\n}\n;\nvar TYPE_1;\nfunction ValueChangeEvent_0(value_0){\n  this.value_0 = value_0;\n}\n\nfunction fire_0(source, value_0){\n  var event_0;\n  if (TYPE_2) {\n    event_0 = new ValueChangeEvent_0(value_0);\n    source.fireEvent(event_0);\n  }\n}\n\ndefineSeed(64, 53, {}, ValueChangeEvent_0);\n_.dispatch = function dispatch_2(handler){\n  dynamicCast(handler, Q$ValueChangeHandler).onValueChange(this);\n}\n;\n_.getAssociatedType = function getAssociatedType_3(){\n  return TYPE_2;\n}\n;\nvar TYPE_2;\nfunction $addHandler(this$static, type_0, handler){\n  return new LegacyHandlerWrapper_0($doAdd(this$static.eventBus, type_0, handler));\n}\n\nfunction $fireEvent(this$static, event_0){\n  var e, oldSource;\n  !event_0.dead || (event_0.dead = false , event_0.source = null);\n  oldSource = event_0.source;\n  $overrideSource(event_0, this$static.source);\n  try {\n    $doFire(this$static.eventBus, event_0);\n  }\n   catch ($e0) {\n    $e0 = wrap_0($e0);\n    if (instanceOf($e0, Q$UmbrellaException)) {\n      e = $e0;\n      throw new UmbrellaException_2(e.causes);\n    }\n     else \n      throw unwrap($e0);\n  }\n   finally {\n    oldSource == null?(event_0.dead = true , event_0.source = null):(event_0.source = oldSource);\n  }\n}\n\n",
"function HandlerManager_0(source){\n  this.eventBus = new HandlerManager$Bus_0;\n  this.source = source;\n}\n\ndefineSeed(65, 1, makeCastMap([Q$HasHandlers]), HandlerManager_0);\n_.fireEvent = function fireEvent(event_0){\n  $fireEvent(this, event_0);\n}\n;\ndefineSeed(68, 1, {});\nfunction $defer(this$static, command){\n  !this$static.deferredDeltas && (this$static.deferredDeltas = new ArrayList_0);\n  $add_2(this$static.deferredDeltas, command);\n}\n\nfunction $doAdd(this$static, type_0, handler){\n  if (!type_0) {\n    throw new NullPointerException_1('Cannot add a handler with a null type');\n  }\n  if (!handler) {\n    throw new NullPointerException_1('Cannot add a null handler');\n  }\n  this$static.firingDepth > 0?$defer(this$static, new SimpleEventBus$2_0(this$static, type_0, handler)):$doAddNow(this$static, type_0, null, handler);\n  return new SimpleEventBus$1_0;\n}\n\nfunction $doAddNow(this$static, type_0, source, handler){\n  var l_0;\n  l_0 = $ensureHandlerList(this$static, type_0, source);\n  l_0.add_1(handler);\n}\n\nfunction $doFire(this$static, event_0){\n  var causes, e, handler, handlers, it;\n  if (!event_0) {\n    throw new NullPointerException_1('Cannot fire null event');\n  }\n  try {\n    ++this$static.firingDepth;\n    handlers = $getDispatchList(this$static, event_0.getAssociatedType());\n    causes = null;\n    it = this$static.isReverseOrder?handlers.listIterator_0(handlers.size_1()):handlers.listIterator();\n    while (this$static.isReverseOrder?it.hasPrevious():it.hasNext()) {\n      handler = this$static.isReverseOrder?it.previous():it.next_0();\n      try {\n        event_0.dispatch(dynamicCast(handler, Q$EventHandler));\n      }\n       catch ($e0) {\n        $e0 = wrap_0($e0);\n        if (instanceOf($e0, Q$Throwable)) {\n          e = $e0;\n          !causes && (causes = new HashSet_0);\n          $add_3(causes, e);\n        }\n         else \n          throw unwrap($e0);\n      }\n    }\n    if (causes) {\n      throw new UmbrellaException_1(causes);\n    }\n  }\n   finally {\n    --this$static.firingDepth;\n    this$static.firingDepth == 0 && $handleQueuedAddsAndRemoves(this$static);\n  }\n}\n\nfunction $ensureHandlerList(this$static, type_0, source){\n  var handlers, sourceMap;\n  sourceMap = dynamicCast($get_1(this$static.map_0, type_0), Q$Map);\n  if (!sourceMap) {\n    sourceMap = new HashMap_0;\n    $put_0(this$static.map_0, type_0, sourceMap);\n  }\n  handlers = dynamicCast(sourceMap.get_0(source), Q$List);\n  if (!handlers) {\n    handlers = new ArrayList_0;\n    sourceMap.put(source, handlers);\n  }\n  return handlers;\n}\n\nfunction $getDispatchList(this$static, type_0){\n  var directHandlers;\n  directHandlers = $getHandlerList(this$static, type_0);\n  return directHandlers;\n}\n\nfunction $getHandlerList(this$static, type_0){\n  var handlers, sourceMap;\n  sourceMap = dynamicCast($get_1(this$static.map_0, type_0), Q$Map);\n  if (!sourceMap) {\n    return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;\n  }\n  handlers = dynamicCast(sourceMap.get_0(null), Q$List);\n  if (!handlers) {\n    return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;\n  }\n  return handlers;\n}\n\nfunction $handleQueuedAddsAndRemoves(this$static){\n  var c, c$iterator;\n  if (this$static.deferredDeltas) {\n    try {\n      for (c$iterator = new AbstractList$IteratorImpl_0(this$static.deferredDeltas); c$iterator.i < c$iterator.this$0_0.size_1();) {\n        c = dynamicCast($next_2(c$iterator), Q$SimpleEventBus$Command);\n        $doAddNow(c.this$0, c.val$type, c.val$source, c.val$handler);\n      }\n    }\n     finally {\n      this$static.deferredDeltas = null;\n    }\n  }\n}\n\ndefineSeed(67, 68, {});\n_.firingDepth = 0;\n_.isReverseOrder = false;\nfunction HandlerManager$Bus_0(){\n  this.map_0 = new HashMap_0;\n  this.isReverseOrder = false;\n}\n\ndefineSeed(66, 67, {}, HandlerManager$Bus_0);\nfunction LegacyHandlerWrapper_0(){\n}\n\ndefineSeed(69, 1, {}, LegacyHandlerWrapper_0);\nfunction UmbrellaException_1(causes){\n  RuntimeException_2.call(this, makeMessage(causes), makeCause(causes));\n  this.causes = causes;\n}\n\nfunction makeCause(causes){\n  var iterator;\n  iterator = causes.iterator();\n  if (!iterator.hasNext()) {\n    return null;\n  }\n  return dynamicCast(iterator.next_0(), Q$Throwable);\n}\n\nfunction makeMessage(causes){\n  var b, count, first, t, t$iterator;\n  count = causes.size_1();\n  if (count == 0) {\n    return null;\n  }\n  b = new StringBuilder_2(count == 1?'Exception caught: ':count + ' exceptions caught: ');\n  first = true;\n  for (t$iterator = causes.iterator(); t$iterator.hasNext();) {\n    t = dynamicCast(t$iterator.next_0(), Q$Throwable);\n    first?(first = false):($append_0(b.impl, '; ') , b);\n    $append_3(b, t.getMessage());\n  }\n  return b.impl.string;\n}\n\ndefineSeed(71, 6, makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Exception, Q$Throwable]), UmbrellaException_1);\nfunction UmbrellaException_2(causes){\n  UmbrellaException_1.call(this, causes);\n}\n\ndefineSeed(70, 71, makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Exception, Q$Throwable]), UmbrellaException_2);\nfunction throwIfNull(value_0){\n  if (null == value_0) {\n    throw new NullPointerException_1('encodedURLComponent cannot be null');\n  }\n}\n\nfunction AutoDirectionHandler_0(){\n}\n\nfunction addTo(){\n  var autoDirHandler;\n  autoDirHandler = new AutoDirectionHandler_0;\n  return autoDirHandler;\n}\n\ndefineSeed(74, 1, makeCastMap([Q$EventHandler]), AutoDirectionHandler_0);\nfunction getDirectionOnElement(elem){\n  var dirPropertyValue;\n  dirPropertyValue = $getPropertyString(elem, 'dir');\n  if ($equalsIgnoreCase('rtl', dirPropertyValue)) {\n    return $clinit_HasDirection$Direction() , RTL;\n  }\n   else if ($equalsIgnoreCase('ltr', dirPropertyValue)) {\n    return $clinit_HasDirection$Direction() , LTR;\n  }\n  return $clinit_HasDirection$Direction() , DEFAULT;\n}\n\nfunction setDirectionOnElement(elem, direction){\n  switch (direction.ordinal) {\n    case 0:\n      {\n        $setPropertyString(elem, 'dir', 'rtl');\n        break;\n      }\n\n    case 1:\n      {\n        $setPropertyString(elem, 'dir', 'ltr');\n        break;\n      }\n\n    case 2:\n      {\n        getDirectionOnElement(elem) != ($clinit_HasDirection$Direction() , DEFAULT) && $setPropertyString(elem, 'dir', '');\n        break;\n      }\n\n  }\n}\n\nfunction $clinit_HasDirection$Direction(){\n  $clinit_HasDirection$Direction = nullMethod;\n  RTL = new HasDirection$Direction_0('RTL', 0);\n  LTR = new HasDirection$Direction_0('LTR', 1);\n  DEFAULT = new HasDirection$Direction_0('DEFAULT', 2);\n  $VALUES_0 = initValues(_3Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$HasDirection$Direction, [RTL, LTR, DEFAULT]);\n}\n\nfunction HasDirection$Direction_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_1(){\n  $clinit_HasDirection$Direction();\n  return $VALUES_0;\n}\n\ndefineSeed(78, 39, makeCastMap([Q$HasDirection$Direction, Q$Serializable, Q$Comparable, Q$Enum]), HasDirection$Direction_0);\nvar $VALUES_0, DEFAULT, LTR, RTL;\nfunction $clinit_LocaleInfo(){\n  $clinit_LocaleInfo = nullMethod;\n  instance = new LocaleInfo_0;\n}\n\nfunction $getNumberConstants(this$static){\n  !this$static.numberConstants && (this$static.numberConstants = new NumberConstantsImpl__0);\n  return this$static.numberConstants;\n}\n\nfunction LocaleInfo_0(){\n}\n\ndefineSeed(79, 1, {}, LocaleInfo_0);\nvar instance;\nfunction $clinit_NumberFormat(){\n  $clinit_NumberFormat = nullMethod;\n  $getNumberConstants(($clinit_LocaleInfo() , $clinit_LocaleInfo() , instance));\n}\n\nfunction $addExponent(this$static, digits){\n  var exponentDigits, i;\n  $append_0(digits.impl, 'E');\n  if (this$static.exponent < 0) {\n    this$static.exponent = -this$static.exponent;\n    $append_0(digits.impl, '-');\n  }\n  exponentDigits = '' + this$static.exponent;\n  for (i = exponentDigits.length; i < this$static.minExponentDigits; ++i) {\n    $appendNonNull(digits.impl, '0');\n  }\n  $append_0(digits.impl, exponentDigits);\n}\n\nfunction $addZeroAndDecimal(this$static, digits){\n  if (this$static.digitsLength == 0) {\n    $replace(digits.impl, 0, 0, '0');\n    ++this$static.decimalPosition;\n    ++this$static.digitsLength;\n  }\n  if (this$static.decimalPosition < this$static.digitsLength || this$static.decimalSeparatorAlwaysShown) {\n    $insert_0(digits, this$static.decimalPosition, '.');\n    ++this$static.digitsLength;\n  }\n}\n\nfunction $adjustFractionDigits(this$static, digits){\n  var requiredDigits, toRemove;\n  requiredDigits = this$static.decimalPosition + this$static.minimumFractionDigits;\n  if (this$static.digitsLength < requiredDigits) {\n    while (this$static.digitsLength < requiredDigits) {\n      $appendNonNull(digits.impl, '0');\n      ++this$static.digitsLength;\n    }\n  }\n   else {\n    toRemove = this$static.decimalPosition + this$static.maximumFractionDigits;\n    toRemove > this$static.digitsLength && (toRemove = this$static.digitsLength);\n    while (toRemove > requiredDigits && $charAt(digits.impl.string, toRemove - 1) == 48) {\n      --toRemove;\n    }\n    if (toRemove < this$static.digitsLength) {\n      $delete_0(digits, toRemove, this$static.digitsLength);\n      this$static.digitsLength = toRemove;\n    }\n  }\n}\n\nfunction $computeExponent(this$static, digits){\n  var remainder, strip;\n  strip = 0;\n  while (strip < this$static.digitsLength - 1 && $charAt(digits.impl.string, strip) == 48) {\n    ++strip;\n  }\n  if (strip > 0) {\n    $replace(digits.impl, 0, strip, '');\n    this$static.digitsLength -= strip;\n    this$static.exponent -= strip;\n  }\n  if (this$static.maximumIntegerDigits > this$static.minimumIntegerDigits && this$static.maximumIntegerDigits > 0) {\n    this$static.exponent += this$static.decimalPosition - 1;\n    remainder = this$static.exponent % this$static.maximumIntegerDigits;\n    remainder < 0 && (remainder += this$static.maximumIntegerDigits);\n    this$static.decimalPosition = remainder + 1;\n    this$static.exponent -= remainder;\n  }\n   else {\n    this$static.exponent += this$static.decimalPosition - this$static.minimumIntegerDigits;\n    this$static.decimalPosition = this$static.minimumIntegerDigits;\n  }\n  if (this$static.digitsLength == 1 && digits.impl.string.charCodeAt(0) == 48) {\n    this$static.exponent = 0;\n    this$static.decimalPosition = this$static.minimumIntegerDigits;\n  }\n}\n\nfunction $format(this$static, number){\n  var buf, isNegative, preRound, scale, useExponent, currentGroupingSize;\n  if (isNaN(number)) {\n    return 'NaN';\n  }\n  isNegative = number < 0 || number == 0 && 1 / number < 0;\n  isNegative && (number = -number);\n  buf = new StringBuilder_0;\n  if (!isFinite(number) && !isNaN(number)) {\n    $append_3(buf, isNegative?this$static.negativePrefix:this$static.positivePrefix);\n    $append_0(buf.impl, '\\u221E');\n    $append_3(buf, isNegative?this$static.negativeSuffix:this$static.positiveSuffix);\n    return buf.impl.string;\n  }\n  number *= this$static.multiplier;\n  scale = toScaledString(buf, number);\n  preRound = buf.impl.string.length + scale + this$static.maximumFractionDigits + 3;\n  if (preRound > 0 && preRound < buf.impl.string.length && $charAt(buf.impl.string, preRound) == 57) {\n    $propagateCarry(this$static, buf, preRound - 1);\n    scale += buf.impl.string.length - preRound;\n    $delete_0(buf, preRound, buf.impl.string.length);\n  }\n  this$static.exponent = 0;\n  this$static.digitsLength = buf.impl.string.length;\n  this$static.decimalPosition = this$static.digitsLength + scale;\n  useExponent = this$static.useExponentialNotation;\n  currentGroupingSize = this$static.groupingSize;\n  this$static.decimalPosition > 1024 && (useExponent = true);\n  useExponent && $computeExponent(this$static, buf);\n  $processLeadingZeros(this$static, buf);\n  $roundValue(this$static, buf);\n  $insertGroupingSeparators(this$static, buf, currentGroupingSize);\n  $adjustFractionDigits(this$static, buf);\n  $addZeroAndDecimal(this$static, buf);\n  useExponent && $addExponent(this$static, buf);\n  $insert_0(buf, 0, isNegative?this$static.negativePrefix:this$static.positivePrefix);\n  $append_3(buf, isNegative?this$static.negativeSuffix:this$static.positiveSuffix);\n  return buf.impl.string;\n}\n\nfunction $insertGroupingSeparators(this$static, digits, g){\n  var i;\n  if (g > 0) {\n    for (i = g; i < this$static.decimalPosition; i += g + 1) {\n      $insert_0(digits, this$static.decimalPosition - i, ',');\n      ++this$static.decimalPosition;\n      ++this$static.digitsLength;\n    }\n  }\n}\n\nfunction $parseAffix(this$static, pattern, start_0, affix, inNegativePattern){\n  var ch_0, inQuote, len, pos;\n  $delete(affix, affix.impl.string.length);\n  inQuote = false;\n  len = pattern.length;\n  for (pos = start_0; pos < len; ++pos) {\n    ch_0 = pattern.charCodeAt(pos);\n    if (ch_0 == 39) {\n      if (pos + 1 < len && pattern.charCodeAt(pos + 1) == 39) {\n        ++pos;\n        $append_0(affix.impl, \"'\");\n      }\n       else {\n        inQuote = !inQuote;\n      }\n      continue;\n    }\n    if (inQuote) {\n      $appendNonNull(affix.impl, valueOf(ch_0));\n    }\n     else {\n      switch (ch_0) {\n        case 35:\n        case 48:\n        case 44:\n        case 46:\n        case 59:\n          return pos - start_0;\n        case 164:\n          this$static.isCurrencyFormat = true;\n          if (pos + 1 < len && pattern.charCodeAt(pos + 1) == 164) {\n            ++pos;\n            if (pos < len - 2 && pattern.charCodeAt(pos + 1) == 164 && pattern.charCodeAt(pos + 2) == 164) {\n              pos += 2;\n              $append_2(affix, $getSimpleCurrencySymbol(this$static.currencyData));\n            }\n             else {\n              $append_2(affix, this$static.currencyData[0]);\n            }\n          }\n           else {\n            $append_2(affix, this$static.currencyData[1]);\n          }\n\n          break;\n        case 37:\n          if (!inNegativePattern) {\n            if (this$static.multiplier != 1) {\n              throw new IllegalArgumentException_1('Too many percent/per mille characters in pattern \"' + pattern + '\"');\n            }\n            this$static.multiplier = 100;\n          }\n\n          $append_0(affix.impl, '%');\n          break;\n        case 8240:\n          if (!inNegativePattern) {\n            if (this$static.multiplier != 1) {\n              throw new IllegalArgumentException_1('Too many percent/per mille characters in pattern \"' + pattern + '\"');\n            }\n            this$static.multiplier = 1000;\n          }\n\n          $append_0(affix.impl, '\\u2030');\n          break;\n        case 45:\n          $append_0(affix.impl, '-');\n          break;\n        default:$appendNonNull(affix.impl, valueOf(ch_0));\n      }\n    }\n  }\n  return len - start_0;\n}\n\nfunction $parsePattern(this$static, pattern){\n  var affix, pos;\n  pos = 0;\n  affix = new StringBuffer_0;\n  pos += $parseAffix(this$static, pattern, 0, affix, false);\n  this$static.positivePrefix = affix.impl.string;\n  pos += $parseTrunk(this$static, pattern, pos, false);\n  pos += $parseAffix(this$static, pattern, pos, affix, false);\n  this$static.positiveSuffix = affix.impl.string;\n  if (pos < pattern.length && pattern.charCodeAt(pos) == 59) {\n    ++pos;\n    pos += $parseAffix(this$static, pattern, pos, affix, true);\n    this$static.negativePrefix = affix.impl.string;\n    pos += $parseTrunk(this$static, pattern, pos, true);\n    pos += $parseAffix(this$static, pattern, pos, affix, true);\n    this$static.negativeSuffix = affix.impl.string;\n  }\n   else {\n    this$static.negativePrefix = '-' + this$static.positivePrefix;\n    this$static.negativeSuffix = this$static.positiveSuffix;\n  }\n}\n\nfunction $parseTrunk(this$static, pattern, start_0, ignorePattern){\n  var ch_0, decimalPos, digitLeftCount, digitRightCount, effectiveDecimalPos, groupingCount, len, loop, n, pos, totalDigits, zeroDigitCount;\n  decimalPos = -1;\n  digitLeftCount = 0;\n  zeroDigitCount = 0;\n  digitRightCount = 0;\n  groupingCount = -1;\n  len = pattern.length;\n  pos = start_0;\n  loop = true;\n  for (; pos < len && loop; ++pos) {\n    ch_0 = pattern.charCodeAt(pos);\n    switch (ch_0) {\n      case 35:\n        zeroDigitCount > 0?++digitRightCount:++digitLeftCount;\n        groupingCount >= 0 && decimalPos < 0 && ++groupingCount;\n        break;\n      case 48:\n        if (digitRightCount > 0) {\n          throw new IllegalArgumentException_1(\"Unexpected '0' in pattern \\\"\" + pattern + '\"');\n        }\n\n        ++zeroDigitCount;\n        groupingCount >= 0 && decimalPos < 0 && ++groupingCount;\n        break;\n      case 44:\n        groupingCount = 0;\n        break;\n      case 46:\n        if (decimalPos >= 0) {\n          throw new IllegalArgumentException_1('Multiple decimal separators in pattern \"' + pattern + '\"');\n        }\n\n        decimalPos = digitLeftCount + zeroDigitCount + digitRightCount;\n        break;\n      case 69:\n        if (!ignorePattern) {\n          if (this$static.useExponentialNotation) {\n            throw new IllegalArgumentException_1('Multiple exponential symbols in pattern \"' + pattern + '\"');\n          }\n          this$static.useExponentialNotation = true;\n          this$static.minExponentDigits = 0;\n        }\n\n        while (pos + 1 < len && pattern.charCodeAt(pos + 1) == 48) {\n          ++pos;\n          ignorePattern || ++this$static.minExponentDigits;\n        }\n\n        if (!ignorePattern && digitLeftCount + zeroDigitCount < 1 || this$static.minExponentDigits < 1) {\n          throw new IllegalArgumentException_1('Malformed exponential pattern \"' + pattern + '\"');\n        }\n\n        loop = false;\n        break;\n      default:--pos;\n        loop = false;\n    }\n  }\n  if (zeroDigitCount == 0 && digitLeftCount > 0 && decimalPos >= 0) {\n    n = decimalPos;\n    decimalPos == 0 && ++n;\n    digitRightCount = digitLeftCount - n;\n    digitLeftCount = n - 1;\n    zeroDigitCount = 1;\n  }\n  if (decimalPos < 0 && digitRightCount > 0 || decimalPos >= 0 && (decimalPos < digitLeftCount || decimalPos > digitLeftCount + zeroDigitCount) || groupingCount == 0) {\n    throw new IllegalArgumentException_1('Malformed pattern \"' + pattern + '\"');\n  }\n  if (ignorePattern) {\n    return pos - start_0;\n  }\n  totalDigits = digitLeftCount + zeroDigitCount + digitRightCount;\n  this$static.maximumFractionDigits = decimalPos >= 0?totalDigits - decimalPos:0;\n  if (decimalPos >= 0) {\n    this$static.minimumFractionDigits = digitLeftCount + zeroDigitCount - decimalPos;\n    this$static.minimumFractionDigits < 0 && (this$static.minimumFractionDigits = 0);\n  }\n  effectiveDecimalPos = decimalPos >= 0?decimalPos:totalDigits;\n  this$static.minimumIntegerDigits = effectiveDecimalPos - digitLeftCount;\n  if (this$static.useExponentialNotation) {\n    this$static.maximumIntegerDigits = digitLeftCount + this$static.minimumIntegerDigits;\n    this$static.maximumFractionDigits == 0 && this$static.minimumIntegerDigits == 0 && (this$static.minimumIntegerDigits = 1);\n  }\n  this$static.groupingSize = groupingCount > 0?groupingCount:0;\n  this$static.decimalSeparatorAlwaysShown = decimalPos == 0 || decimalPos == totalDigits;\n  return pos - start_0;\n}\n\nfunction $processLeadingZeros(this$static, digits){\n  var i, prefix, strip;\n  if (this$static.decimalPosition > this$static.digitsLength) {\n    while (this$static.digitsLength < this$static.decimalPosition) {\n      $appendNonNull(digits.impl, '0');\n      ++this$static.digitsLength;\n    }\n  }\n  if (!this$static.useExponentialNotation) {\n    if (this$static.decimalPosition < this$static.minimumIntegerDigits) {\n      prefix = new StringBuilder_0;\n      while (this$static.decimalPosition < this$static.minimumIntegerDigits) {\n        $appendNonNull(prefix.impl, '0');\n        ++this$static.decimalPosition;\n        ++this$static.digitsLength;\n      }\n      $insert_0(digits, 0, prefix.impl.string);\n    }\n     else if (this$static.decimalPosition > this$static.minimumIntegerDigits) {\n      strip = this$static.decimalPosition - this$static.minimumIntegerDigits;\n      for (i = 0; i < strip; ++i) {\n        if ($charAt(digits.impl.string, i) != 48) {\n          strip = i;\n          break;\n        }\n      }\n      if (strip > 0) {\n        $replace(digits.impl, 0, strip, '');\n        this$static.digitsLength -= strip;\n        this$static.decimalPosition -= strip;\n      }\n    }\n  }\n}\n\nfunction $propagateCarry(this$static, digits, i){\n  var carry, digit;\n  carry = true;\n  while (carry && i >= 0) {\n    digit = $charAt(digits.impl.string, i);\n    if (digit == 57) {\n      $setCharAt(digits, i--, 48);\n    }\n     else {\n      $setCharAt(digits, i, digit + 1 & 65535);\n      carry = false;\n    }\n  }\n  if (carry) {\n    $replace(digits.impl, 0, 0, '1');\n    ++this$static.decimalPosition;\n    ++this$static.digitsLength;\n  }\n}\n\nfunction $roundValue(this$static, digits){\n  var i;\n  if (this$static.digitsLength > this$static.decimalPosition + this$static.maximumFractionDigits && $charAt_0(digits, this$static.decimalPosition + this$static.maximumFractionDigits) >= 53) {\n    i = this$static.decimalPosition + this$static.maximumFractionDigits - 1;\n    $propagateCarry(this$static, digits, i);\n  }\n}\n\nfunction NumberFormat_0(cdata, userSuppliedPattern){\n  if (!cdata) {\n    throw new IllegalArgumentException_1('Unknown currency code');\n  }\n  this.pattern = '#,##0%';\n  this.currencyData = cdata;\n  $parsePattern(this, this.pattern);\n  if (!userSuppliedPattern && this.isCurrencyFormat) {\n    this.minimumFractionDigits = this.currencyData[2] & 7;\n    this.maximumFractionDigits = this.minimumFractionDigits;\n  }\n}\n\nfunction NumberFormat_1(cdata){\n  $clinit_NumberFormat();\n  NumberFormat_0.call(this, cdata, false);\n}\n\nfunction toScaledString(buf, val){\n  var dot, expDigits, expIdx, scale, startLen;\n  startLen = buf.impl.string.length;\n  $append_3(buf, val.toPrecision(20));\n  scale = 0;\n  expIdx = $indexOf_1(buf.impl.string, 'e', startLen);\n  expIdx < 0 && (expIdx = $indexOf_1(buf.impl.string, 'E', startLen));\n  if (expIdx >= 0) {\n    expDigits = expIdx + 1;\n    expDigits < buf.impl.string.length && $charAt(buf.impl.string, expDigits) == 43 && ++expDigits;\n    expDigits < buf.impl.string.length && (scale = __parseAndValidateInt($substring(buf.impl.string, expDigits)));\n    $delete_0(buf, expIdx, buf.impl.string.length);\n  }\n  dot = $indexOf_1(buf.impl.string, '.', startLen);\n  if (dot >= 0) {\n    $replace(buf.impl, dot, dot + 1, '');\n    scale -= buf.impl.string.length - dot;\n  }\n  return scale;\n}\n\ndefineSeed(80, 1, {}, NumberFormat_1);\n_.decimalPosition = 0;\n_.decimalSeparatorAlwaysShown = false;\n_.digitsLength = 0;\n_.exponent = 0;\n_.groupingSize = 3;\n_.isCurrencyFormat = false;\n_.maximumFractionDigits = 3;\n_.maximumIntegerDigits = 40;\n_.minExponentDigits = 0;\n_.minimumFractionDigits = 0;\n_.minimumIntegerDigits = 1;\n_.multiplier = 1;\n_.negativePrefix = '-';\n_.negativeSuffix = '';\n_.positivePrefix = '';\n_.positiveSuffix = '';\n_.useExponentialNotation = false;\nvar cachedPercentFormat;\nfunction NumberConstantsImpl__0(){\n}\n\ndefineSeed(81, 1, {}, NumberConstantsImpl__0);\nfunction $getSimpleCurrencySymbol(this$static){\n  return this$static[4] || this$static[1];\n}\n\nfunction Array_0(){\n}\n\nfunction cloneSubrange(array, fromIndex, toIndex){\n  var a, result;\n  a = array;\n  result = a.slice(fromIndex, toIndex);\n  initValues(a.___clazz$, a.castableTypeMap$, a.queryId$, result);\n  return result;\n}\n\nfunction createFrom(array, length_0){\n  var a, result;\n  a = array;\n  result = createFromSeed(0, length_0);\n  initValues(a.___clazz$, a.castableTypeMap$, a.queryId$, result);\n  return result;\n}\n\nfunction createFromSeed(seedType, length_0){\n  var array = new Array(length_0);\n  if (seedType == 3) {\n    for (var i = 0; i < length_0; ++i) {\n      array[i] = {l:0, m:0, h:0};\n    }\n  }\n   else if (seedType > 0 && seedType < 3) {\n    var value_0 = seedType == 1?0:false;\n    for (var i = 0; i < length_0; ++i) {\n      array[i] = value_0;\n    }\n  }\n  return array;\n}\n\nfunction initDim(arrayClass, castableTypeMap, queryId, length_0, seedType){\n  var result;\n  result = createFromSeed(seedType, length_0);\n  initValues(arrayClass, castableTypeMap, queryId, result);\n  return result;\n}\n\nfunction initValues(arrayClass, castableTypeMap, queryId, array){\n  $clinit_Array$ExpandoWrapper();\n  wrapArray(array, expandoNames_0, expandoValues_0);\n  array.___clazz$ = arrayClass;\n  array.castableTypeMap$ = castableTypeMap;\n  array.queryId$ = queryId;\n  return array;\n}\n\nfunction setCheck(array, index_0, value_0){\n  if (value_0 != null) {\n    if (array.queryId$ > 0 && !canCastUnsafe(value_0, array.queryId$)) {\n      throw new ArrayStoreException_0;\n    }\n     else if (array.queryId$ == -1 && (value_0.typeMarker$ == nullMethod || canCast(value_0, 1))) {\n      throw new ArrayStoreException_0;\n    }\n     else if (array.queryId$ < -1 && !(value_0.typeMarker$ != nullMethod && !canCast(value_0, 1)) && !canCastUnsafe(value_0, -array.queryId$)) {\n      throw new ArrayStoreException_0;\n    }\n  }\n  return array[index_0] = value_0;\n}\n\ndefineSeed(83, 1, {}, Array_0);\n_.queryId$ = 0;\nfunction $clinit_Array$ExpandoWrapper(){\n  $clinit_Array$ExpandoWrapper = nullMethod;\n  expandoNames_0 = [];\n  expandoValues_0 = [];\n  initExpandos(new Array_0, expandoNames_0, expandoValues_0);\n}\n\nfunction initExpandos(protoType, expandoNames, expandoValues){\n  var i = 0, value_0;\n  for (var name_0 in protoType) {\n    if (value_0 = protoType[name_0]) {\n      expandoNames[i] = name_0;\n      expandoValues[i] = value_0;\n      ++i;\n    }\n  }\n}\n\nfunction wrapArray(array, expandoNames, expandoValues){\n  $clinit_Array$ExpandoWrapper();\n  for (var i = 0, c = expandoNames.length; i < c; ++i) {\n    array[expandoNames[i]] = expandoValues[i];\n  }\n}\n\nvar expandoNames_0, expandoValues_0;\nfunction canCast(src_0, dstId){\n  return src_0.castableTypeMap$ && !!src_0.castableTypeMap$[dstId];\n}\n\nfunction canCastUnsafe(src_0, dstId){\n  return src_0.castableTypeMap$ && src_0.castableTypeMap$[dstId];\n}\n\nfunction dynamicCast(src_0, dstId){\n  if (src_0 != null && !canCastUnsafe(src_0, dstId)) {\n    throw new ClassCastException_0;\n  }\n  return src_0;\n}\n\nfunction dynamicCastJso(src_0){\n  if (src_0 != null && (src_0.typeMarker$ == nullMethod || canCast(src_0, 1))) {\n    throw new ClassCastException_0;\n  }\n  return src_0;\n}\n\nfunction instanceOf(src_0, dstId){\n  return src_0 != null && canCast(src_0, dstId);\n}\n\nfunction instanceOfJso(src_0){\n  return src_0 != null && src_0.typeMarker$ != nullMethod && !canCast(src_0, 1);\n}\n\nfunction isJavaObject(src_0){\n  return src_0.typeMarker$ == nullMethod || canCast(src_0, 1);\n}\n\nfunction maskUndefined(src_0){\n  return src_0 == null?null:src_0;\n}\n\nfunction narrow_byte(x_0){\n  return x_0 << 24 >> 24;\n}\n\nfunction round_int(x_0){\n  return ~~Math.max(Math.min(x_0, 2147483647), -2147483648);\n}\n\nfunction throwClassCastExceptionUnlessNull(o){\n  if (o != null) {\n    throw new ClassCastException_0;\n  }\n  return null;\n}\n\nfunction init(){\n  var runtimeValue;\n  isStatsAvailable() && onModuleStart('com.google.gwt.useragent.client.UserAgentAsserter');\n  runtimeValue = $getRuntimeValue();\n  $equals('gecko1_8', runtimeValue) || ($wnd.alert('ERROR: Possible problem with your *.gwt.xml module file.\\nThe compile time user.agent value (gecko1_8) does not match the runtime user.agent value (' + runtimeValue + '). Expect more errors.\\n') , undefined);\n  isStatsAvailable() && onModuleStart('com.google.gwt.user.client.DocumentModeAsserter');\n  $onModuleLoad_0();\n  isStatsAvailable() && onModuleStart('com.google.gwt.logging.client.LogConfiguration');\n  $onModuleLoad($clinit_LogConfiguration());\n  isStatsAvailable() && onModuleStart('de.voot.encfsanywhere.client.EncfsAnywhere');\n  $onModuleLoad_1($clinit_EncfsAnywhere());\n}\n\nfunction getCachableJavaScriptException(e_0){\n  var jse = e_0.__gwt$exception;\n  if (!jse) {\n    jse = new JavaScriptException_0(e_0);\n    try {\n      e_0.__gwt$exception = jse;\n    }\n     catch (e) {\n    }\n  }\n  return jse;\n}\n\nfunction unwrap(e){\n  var jse;\n  if (instanceOf(e, Q$JavaScriptException)) {\n    jse = dynamicCast(e, Q$JavaScriptException);\n    if (jse.e !== ($clinit_JavaScriptException() , NOT_SET)) {\n      return jse.e === NOT_SET?null:jse.e;\n    }\n  }\n  return e;\n}\n\nfunction wrap_0(e){\n  if (instanceOf(e, Q$Throwable)) {\n    return e;\n  }\n  return e == null?new JavaScriptException_0(null):getCachableJavaScriptException(e);\n}\n\nfunction create_0(value_0){\n  var a0, a1, a2;\n  a0 = value_0 & 4194303;\n  a1 = value_0 >> 22 & 4194303;\n  a2 = value_0 < 0?1048575:0;\n  return create0(a0, a1, a2);\n}\n\nfunction create_1(a){\n  return create0(a.l, a.m, a.h);\n}\n\nfunction create0(l_0, m_0, h_0){\n  return {l:l_0, m:m_0, h:h_0};\n}\n\nfunction divMod(a, b, computeRemainder){\n  var aIsCopy, aIsMinValue, aIsNegative, bpower, c, negative;\n  if (b.l == 0 && b.m == 0 && b.h == 0) {\n    throw new ArithmeticException_0;\n  }\n  if (a.l == 0 && a.m == 0 && a.h == 0) {\n    computeRemainder && (remainder_0 = create0(0, 0, 0));\n    return create0(0, 0, 0);\n  }\n  if (b.h == 524288 && b.m == 0 && b.l == 0) {\n    return divModByMinValue(a, computeRemainder);\n  }\n  negative = false;\n  if (b.h >> 19 != 0) {\n    b = neg(b);\n    negative = true;\n  }\n  bpower = powerOfTwo(b);\n  aIsNegative = false;\n  aIsMinValue = false;\n  aIsCopy = false;\n  if (a.h == 524288 && a.m == 0 && a.l == 0) {\n    aIsMinValue = true;\n    aIsNegative = true;\n    if (bpower == -1) {\n      a = create_1(($clinit_LongLib$Const() , MAX_VALUE));\n      aIsCopy = true;\n      negative = !negative;\n    }\n     else {\n      c = shr(a, bpower);\n      negative && negate(c);\n      computeRemainder && (remainder_0 = create0(0, 0, 0));\n      return c;\n    }\n  }\n   else if (a.h >> 19 != 0) {\n    aIsNegative = true;\n    a = neg(a);\n    aIsCopy = true;\n    negative = !negative;\n  }\n  if (bpower != -1) {\n    return divModByShift(a, bpower, negative, aIsNegative, computeRemainder);\n  }\n  if (!gte_0(a, b)) {\n    computeRemainder && (aIsNegative?(remainder_0 = neg(a)):(remainder_0 = create0(a.l, a.m, a.h)));\n    return create0(0, 0, 0);\n  }\n  return divModHelper(aIsCopy?a:create0(a.l, a.m, a.h), b, negative, aIsNegative, aIsMinValue, computeRemainder);\n}\n\n",
"function divModByMinValue(a, computeRemainder){\n  if (a.h == 524288 && a.m == 0 && a.l == 0) {\n    computeRemainder && (remainder_0 = create0(0, 0, 0));\n    return create_1(($clinit_LongLib$Const() , ONE));\n  }\n  computeRemainder && (remainder_0 = create0(a.l, a.m, a.h));\n  return create0(0, 0, 0);\n}\n\nfunction divModByShift(a, bpower, negative, aIsNegative, computeRemainder){\n  var c;\n  c = shr(a, bpower);\n  negative && negate(c);\n  if (computeRemainder) {\n    a = maskRight(a, bpower);\n    aIsNegative?(remainder_0 = neg(a)):(remainder_0 = create0(a.l, a.m, a.h));\n  }\n  return c;\n}\n\nfunction divModHelper(a, b, negative, aIsNegative, aIsMinValue, computeRemainder){\n  var bshift, gte, quotient, shift_0, a1, a2, a0;\n  shift_0 = numberOfLeadingZeros(b) - numberOfLeadingZeros(a);\n  bshift = shl(b, shift_0);\n  quotient = create0(0, 0, 0);\n  while (shift_0 >= 0) {\n    gte = trialSubtract(a, bshift);\n    if (gte) {\n      shift_0 < 22?(quotient.l |= 1 << shift_0 , undefined):shift_0 < 44?(quotient.m |= 1 << shift_0 - 22 , undefined):(quotient.h |= 1 << shift_0 - 44 , undefined);\n      if (a.l == 0 && a.m == 0 && a.h == 0) {\n        break;\n      }\n    }\n    a1 = bshift.m;\n    a2 = bshift.h;\n    a0 = bshift.l;\n    setH(bshift, a2 >>> 1);\n    bshift.m = a1 >>> 1 | (a2 & 1) << 21;\n    bshift.l = a0 >>> 1 | (a1 & 1) << 21;\n    --shift_0;\n  }\n  negative && negate(quotient);\n  if (computeRemainder) {\n    if (aIsNegative) {\n      remainder_0 = neg(a);\n      aIsMinValue && (remainder_0 = sub_0(remainder_0, ($clinit_LongLib$Const() , ONE)));\n    }\n     else {\n      remainder_0 = create0(a.l, a.m, a.h);\n    }\n  }\n  return quotient;\n}\n\nfunction maskRight(a, bits){\n  var b0, b1, b2;\n  if (bits <= 22) {\n    b0 = a.l & (1 << bits) - 1;\n    b1 = b2 = 0;\n  }\n   else if (bits <= 44) {\n    b0 = a.l;\n    b1 = a.m & (1 << bits - 22) - 1;\n    b2 = 0;\n  }\n   else {\n    b0 = a.l;\n    b1 = a.m;\n    b2 = a.h & (1 << bits - 44) - 1;\n  }\n  return create0(b0, b1, b2);\n}\n\nfunction negate(a){\n  var neg0, neg1, neg2;\n  neg0 = ~a.l + 1 & 4194303;\n  neg1 = ~a.m + (neg0 == 0?1:0) & 4194303;\n  neg2 = ~a.h + (neg0 == 0 && neg1 == 0?1:0) & 1048575;\n  setL(a, neg0);\n  setM(a, neg1);\n  setH(a, neg2);\n}\n\nfunction numberOfLeadingZeros(a){\n  var b1, b2;\n  b2 = numberOfLeadingZeros_0(a.h);\n  if (b2 == 32) {\n    b1 = numberOfLeadingZeros_0(a.m);\n    return b1 == 32?numberOfLeadingZeros_0(a.l) + 32:b1 + 20 - 10;\n  }\n   else {\n    return b2 - 12;\n  }\n}\n\nfunction powerOfTwo(a){\n  var h_0, l_0, m_0;\n  l_0 = a.l;\n  if ((l_0 & l_0 - 1) != 0) {\n    return -1;\n  }\n  m_0 = a.m;\n  if ((m_0 & m_0 - 1) != 0) {\n    return -1;\n  }\n  h_0 = a.h;\n  if ((h_0 & h_0 - 1) != 0) {\n    return -1;\n  }\n  if (h_0 == 0 && m_0 == 0 && l_0 == 0) {\n    return -1;\n  }\n  if (h_0 == 0 && m_0 == 0 && l_0 != 0) {\n    return numberOfTrailingZeros(l_0);\n  }\n  if (h_0 == 0 && m_0 != 0 && l_0 == 0) {\n    return numberOfTrailingZeros(m_0) + 22;\n  }\n  if (h_0 != 0 && m_0 == 0 && l_0 == 0) {\n    return numberOfTrailingZeros(h_0) + 44;\n  }\n  return -1;\n}\n\nfunction setH(a, x_0){\n  a.h = x_0;\n}\n\nfunction setL(a, x_0){\n  a.l = x_0;\n}\n\nfunction setM(a, x_0){\n  a.m = x_0;\n}\n\nfunction toDoubleHelper(a){\n  return a.l + a.m * 4194304 + a.h * 17592186044416;\n}\n\nfunction trialSubtract(a, b){\n  var sum0, sum1, sum2;\n  sum2 = a.h - b.h;\n  if (sum2 < 0) {\n    return false;\n  }\n  sum0 = a.l - b.l;\n  sum1 = a.m - b.m + (sum0 >> 22);\n  sum2 += sum1 >> 22;\n  if (sum2 < 0) {\n    return false;\n  }\n  setL(a, sum0 & 4194303);\n  setM(a, sum1 & 4194303);\n  setH(a, sum2 & 1048575);\n  return true;\n}\n\nvar remainder_0;\nfunction add_0(a, b){\n  var sum0, sum1, sum2;\n  sum0 = a.l + b.l;\n  sum1 = a.m + b.m + (sum0 >> 22);\n  sum2 = a.h + b.h + (sum1 >> 22);\n  return {l:sum0 & 4194303, m:sum1 & 4194303, h:sum2 & 1048575};\n}\n\nfunction and(a, b){\n  return {l:a.l & b.l, m:a.m & b.m, h:a.h & b.h};\n}\n\nfunction div(a, b){\n  return divMod(a, b, false);\n}\n\nfunction eq(a, b){\n  return a.l == b.l && a.m == b.m && a.h == b.h;\n}\n\nfunction fromDouble(value_0){\n  var a0, a1, a2, negative, result;\n  if (isNaN(value_0)) {\n    return $clinit_LongLib$Const() , ZERO;\n  }\n  if (value_0 < -9223372036854775808) {\n    return $clinit_LongLib$Const() , MIN_VALUE;\n  }\n  if (value_0 >= 9223372036854775807) {\n    return $clinit_LongLib$Const() , MAX_VALUE;\n  }\n  negative = false;\n  if (value_0 < 0) {\n    negative = true;\n    value_0 = -value_0;\n  }\n  a2 = 0;\n  if (value_0 >= 17592186044416) {\n    a2 = round_int(value_0 / 17592186044416);\n    value_0 -= a2 * 17592186044416;\n  }\n  a1 = 0;\n  if (value_0 >= 4194304) {\n    a1 = round_int(value_0 / 4194304);\n    value_0 -= a1 * 4194304;\n  }\n  a0 = round_int(value_0);\n  result = create0(a0, a1, a2);\n  negative && negate(result);\n  return result;\n}\n\nfunction fromInt(value_0){\n  var rebase, result;\n  if (value_0 > -129 && value_0 < 128) {\n    rebase = value_0 + 128;\n    boxedValues == null && (boxedValues = initDim(_3Lcom_google_gwt_lang_LongLibBase$LongEmul_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$LongLibBase$LongEmul, 256, 0));\n    result = boxedValues[rebase];\n    !result && (result = boxedValues[rebase] = create_0(value_0));\n    return result;\n  }\n  return create_0(value_0);\n}\n\nfunction gt(a, b){\n  var signa, signb;\n  signa = a.h >> 19;\n  signb = b.h >> 19;\n  return signa == 0?signb != 0 || a.h > b.h || a.h == b.h && a.m > b.m || a.h == b.h && a.m == b.m && a.l > b.l:!(signb == 0 || a.h < b.h || a.h == b.h && a.m < b.m || a.h == b.h && a.m == b.m && a.l <= b.l);\n}\n\nfunction gte_0(a, b){\n  var signa, signb;\n  signa = a.h >> 19;\n  signb = b.h >> 19;\n  return signa == 0?signb != 0 || a.h > b.h || a.h == b.h && a.m > b.m || a.h == b.h && a.m == b.m && a.l >= b.l:!(signb == 0 || a.h < b.h || a.h == b.h && a.m < b.m || a.h == b.h && a.m == b.m && a.l < b.l);\n}\n\nfunction lt(a, b){\n  return !gte_0(a, b);\n}\n\nfunction lte(a, b){\n  return !gt(a, b);\n}\n\nfunction mod(a, b){\n  divMod(a, b, true);\n  return remainder_0;\n}\n\nfunction mul(a, b){\n  var a0, a1, a2, a3, a4, b0, b1, b2, b3, b4, c0, c00, c01, c1, c10, c11, c12, c13, c2, c22, c23, c24, p0, p1, p2, p3, p4;\n  a0 = a.l & 8191;\n  a1 = a.l >> 13 | (a.m & 15) << 9;\n  a2 = a.m >> 4 & 8191;\n  a3 = a.m >> 17 | (a.h & 255) << 5;\n  a4 = (a.h & 1048320) >> 8;\n  b0 = b.l & 8191;\n  b1 = b.l >> 13 | (b.m & 15) << 9;\n  b2 = b.m >> 4 & 8191;\n  b3 = b.m >> 17 | (b.h & 255) << 5;\n  b4 = (b.h & 1048320) >> 8;\n  p0 = a0 * b0;\n  p1 = a1 * b0;\n  p2 = a2 * b0;\n  p3 = a3 * b0;\n  p4 = a4 * b0;\n  if (b1 != 0) {\n    p1 += a0 * b1;\n    p2 += a1 * b1;\n    p3 += a2 * b1;\n    p4 += a3 * b1;\n  }\n  if (b2 != 0) {\n    p2 += a0 * b2;\n    p3 += a1 * b2;\n    p4 += a2 * b2;\n  }\n  if (b3 != 0) {\n    p3 += a0 * b3;\n    p4 += a1 * b3;\n  }\n  b4 != 0 && (p4 += a0 * b4);\n  c00 = p0 & 4194303;\n  c01 = (p1 & 511) << 13;\n  c0 = c00 + c01;\n  c10 = p0 >> 22;\n  c11 = p1 >> 9;\n  c12 = (p2 & 262143) << 4;\n  c13 = (p3 & 31) << 17;\n  c1 = c10 + c11 + c12 + c13;\n  c22 = p2 >> 18;\n  c23 = p3 >> 5;\n  c24 = (p4 & 4095) << 8;\n  c2 = c22 + c23 + c24;\n  c1 += c0 >> 22;\n  c0 &= 4194303;\n  c2 += c1 >> 22;\n  c1 &= 4194303;\n  c2 &= 1048575;\n  return create0(c0, c1, c2);\n}\n\nfunction neg(a){\n  var neg0, neg1, neg2;\n  neg0 = ~a.l + 1 & 4194303;\n  neg1 = ~a.m + (neg0 == 0?1:0) & 4194303;\n  neg2 = ~a.h + (neg0 == 0 && neg1 == 0?1:0) & 1048575;\n  return create0(neg0, neg1, neg2);\n}\n\nfunction neq(a, b){\n  return a.l != b.l || a.m != b.m || a.h != b.h;\n}\n\nfunction or(a, b){\n  return {l:a.l | b.l, m:a.m | b.m, h:a.h | b.h};\n}\n\nfunction shl(a, n){\n  var res0, res1, res2;\n  n &= 63;\n  if (n < 22) {\n    res0 = a.l << n;\n    res1 = a.m << n | a.l >> 22 - n;\n    res2 = a.h << n | a.m >> 22 - n;\n  }\n   else if (n < 44) {\n    res0 = 0;\n    res1 = a.l << n - 22;\n    res2 = a.m << n - 22 | a.l >> 44 - n;\n  }\n   else {\n    res0 = 0;\n    res1 = 0;\n    res2 = a.l << n - 44;\n  }\n  return {l:res0 & 4194303, m:res1 & 4194303, h:res2 & 1048575};\n}\n\nfunction shr(a, n){\n  var a2, negative, res0, res1, res2;\n  n &= 63;\n  a2 = a.h;\n  negative = (a2 & 524288) != 0;\n  negative && (a2 |= -1048576);\n  if (n < 22) {\n    res2 = a2 >> n;\n    res1 = a.m >> n | a2 << 22 - n;\n    res0 = a.l >> n | a.m << 22 - n;\n  }\n   else if (n < 44) {\n    res2 = negative?1048575:0;\n    res1 = a2 >> n - 22;\n    res0 = a.m >> n - 22 | a2 << 44 - n;\n  }\n   else {\n    res2 = negative?1048575:0;\n    res1 = negative?4194303:0;\n    res0 = a2 >> n - 44;\n  }\n  return {l:res0 & 4194303, m:res1 & 4194303, h:res2 & 1048575};\n}\n\nfunction shru(a, n){\n  var a2, res0, res1, res2;\n  n &= 63;\n  a2 = a.h & 1048575;\n  if (n < 22) {\n    res2 = a2 >>> n;\n    res1 = a.m >> n | a2 << 22 - n;\n    res0 = a.l >> n | a.m << 22 - n;\n  }\n   else if (n < 44) {\n    res2 = 0;\n    res1 = a2 >>> n - 22;\n    res0 = a.m >> n - 22 | a.h << 44 - n;\n  }\n   else {\n    res2 = 0;\n    res1 = 0;\n    res0 = a2 >>> n - 44;\n  }\n  return {l:res0 & 4194303, m:res1 & 4194303, h:res2 & 1048575};\n}\n\nfunction sub_0(a, b){\n  var sum0, sum1, sum2;\n  sum0 = a.l - b.l;\n  sum1 = a.m - b.m + (sum0 >> 22);\n  sum2 = a.h - b.h + (sum1 >> 22);\n  return {l:sum0 & 4194303, m:sum1 & 4194303, h:sum2 & 1048575};\n}\n\nfunction toDouble(a){\n  if (eq(a, ($clinit_LongLib$Const() , MIN_VALUE))) {\n    return -9223372036854775808;\n  }\n  if (!gte_0(a, ZERO)) {\n    return -toDoubleHelper(neg(a));\n  }\n  return a.l + a.m * 4194304 + a.h * 17592186044416;\n}\n\nfunction toInt(a){\n  return a.l | a.m << 22;\n}\n\nfunction xor(a, b){\n  return {l:a.l ^ b.l, m:a.m ^ b.m, h:a.h ^ b.h};\n}\n\nvar boxedValues;\nfunction $clinit_LongLib$Const(){\n  $clinit_LongLib$Const = nullMethod;\n  MAX_VALUE = create0(4194303, 4194303, 524287);\n  MIN_VALUE = create0(0, 0, 524288);\n  ONE = fromInt(1);\n  fromInt(2);\n  ZERO = fromInt(0);\n}\n\nvar MAX_VALUE, MIN_VALUE, ONE, ZERO;\nfunction isStatsAvailable(){\n  return !!$stats;\n}\n\nfunction onModuleStart(mainClassName){\n  return $stats({moduleName:$moduleName, sessionId:$sessionId, subSystem:'startup', evtGroup:'moduleStartup', millis:(new Date).getTime(), type:'onModuleLoadStart', className:mainClassName});\n}\n\nfunction $getLevel(this$static){\n  if (this$static.level) {\n    return this$static.level;\n  }\n  return $clinit_Level() , ALL;\n}\n\nfunction $setFormatter(this$static, newFormatter){\n  this$static.formatter = newFormatter;\n}\n\nfunction $setLevel(this$static, newLevel){\n  this$static.level = newLevel;\n}\n\ndefineSeed(96, 1, makeCastMap([Q$Handler]));\nfunction ConsoleLogHandler_0(){\n  $setFormatter(this, new TextLogFormatter_0(true));\n  $setLevel(this, ($clinit_Level() , ALL));\n}\n\ndefineSeed(95, 96, makeCastMap([Q$Handler]), ConsoleLogHandler_0);\n_.publish = function publish(record){\n  var msg, val;\n  if (!(window.console != null && window.console.firebug == null) || ($getLevel(this) , -2147483648) > record.level.intValue()) {\n    return;\n  }\n  msg = this.formatter.format(record);\n  val = record.level.intValue();\n  val >= ($clinit_Level() , 1000)?(window.console.error(msg) , undefined):val >= 900?(window.console.warn(msg) , undefined):val >= 800?(window.console.info(msg) , undefined):(window.console.log(msg) , undefined);\n}\n;\nfunction DevelopmentModeLogHandler_0(){\n  $setFormatter(this, new TextLogFormatter_0(false));\n  $setLevel(this, ($clinit_Level() , ALL));\n}\n\ndefineSeed(97, 96, makeCastMap([Q$Handler]), DevelopmentModeLogHandler_0);\n_.publish = function publish_0(record){\n  return;\n}\n;\nfunction $isSupported(){\n  return !!(window.console && window.console.firebug);\n}\n\nfunction $warn(message){\n  window.console.warn(message);\n}\n\nfunction FirebugLogHandler_0(){\n  $isSupported() && $warn('FirebugLogHandler is deprecated, use the ConsoleLogHandler instead.');\n  $setFormatter(this, new TextLogFormatter_0(true));\n  $setLevel(this, ($clinit_Level() , ALL));\n}\n\ndefineSeed(98, 96, makeCastMap([Q$Handler]), FirebugLogHandler_0);\n_.publish = function publish_1(record){\n  var msg, val;\n  if (!$isSupported() || ($getLevel(this) , -2147483648) > record.level.intValue()) {\n    return;\n  }\n  msg = this.formatter.format(record);\n  val = record.level.intValue();\n  val <= ($clinit_Level() , 500)?(window.console.debug(msg) , undefined):val < 900?(window.console.info(msg) , undefined):val < 1000?$warn(msg):(window.console.error(msg) , undefined);\n}\n;\nfunction HasWidgetsLogHandler_0(){\n  $setFormatter(this, new HtmlLogFormatter_0);\n  $setLevel(this, ($clinit_Level() , ALL));\n}\n\ndefineSeed(99, 96, makeCastMap([Q$Handler]), HasWidgetsLogHandler_0);\n_.publish = function publish_2(record){\n  var formatter, msg;\n  if (($getLevel(this) , -2147483648) > record.level.intValue()) {\n    return;\n  }\n  formatter = this.formatter;\n  msg = formatter.format(record);\n  instanceOf(formatter, Q$HtmlLogFormatter)?(new HTML_2(msg) , undefined):(new Label_1(msg) , undefined);\n}\n;\ndefineSeed(102, 1, {});\nfunction $getRecordInfo(event_0, newline){\n  var date, s;\n  date = new Date_2(event_0.millis);\n  s = new StringBuilder_0;\n  $append_3(s, $toString_2(date));\n  $append_0(s.impl, ' ');\n  $append_3(s, event_0.loggerName);\n  $append_0(s.impl, newline);\n  $append_3(s, event_0.level.getName());\n  $append_0(s.impl, ': ');\n  return s.impl.string;\n}\n\ndefineSeed(101, 102, {});\nfunction $getColor(logLevel){\n  if (logLevel == ($clinit_Level() , 2147483647)) {\n    return '#000';\n  }\n  if (logLevel >= 1000) {\n    return '#F00';\n  }\n  if (logLevel >= 900) {\n    return '#E56717';\n  }\n  if (logLevel >= 800) {\n    return '#20b000';\n  }\n  if (logLevel >= 700) {\n    return '#2B60DE';\n  }\n  if (logLevel >= 500) {\n    return '#F0F';\n  }\n  if (logLevel >= 400) {\n    return '#F0F';\n  }\n  if (logLevel >= 300) {\n    return '#F0F';\n  }\n  return '#000';\n}\n\nfunction $getEscaped(text_0){\n  text_0 = $replaceAll(text_0, '<', '&lt;');\n  text_0 = $replaceAll(text_0, '>', '&gt;');\n  text_0 = $replaceAll(text_0, '\\t', '&nbsp;&nbsp;&nbsp;');\n  return text_0;\n}\n\nfunction HtmlLogFormatter_0(){\n  this.showStackTraces = true;\n}\n\ndefineSeed(100, 101, makeCastMap([Q$HtmlLogFormatter]), HtmlLogFormatter_0);\n_.format = function format_0(event_0){\n  var html, prefix;\n  html = new StringBuilder_0;\n  $append_3(html, (prefix = new StringBuilder_0 , $append_0(prefix.impl, \"<span style='color:\") , $append_3(prefix, $getColor(event_0.level.intValue())) , $append_0(prefix.impl, \"'>\") , $append_0(prefix.impl, '<code>') , prefix.impl.string));\n  $append_3(html, $getRecordInfo(event_0, ' '));\n  $append_3(html, $getEscaped(event_0.msg));\n  this.showStackTraces && !!event_0.thrown && $printStackTrace(event_0.thrown, new HtmlLogFormatter$1_0(html, html));\n  $append_0(html.impl, '<\\/code><\\/span>');\n  return html.impl.string;\n}\n;\n_.showStackTraces = false;\ndefineSeed(107, 1, {});\ndefineSeed(106, 107, {});\nfunction PrintStream_0(){\n}\n\ndefineSeed(105, 106, {}, PrintStream_0);\n_.print_0 = function print_0(s){\n}\n;\n_.println = function println(x_0){\n}\n;\n_.println_0 = function println_0(s){\n}\n;\nfunction StackTracePrintStream_0(builder){\n  this.builder = builder;\n}\n\ndefineSeed(104, 105, {}, StackTracePrintStream_0);\n_.append_0 = function append(text_0){\n  $append_3(this.builder, text_0);\n}\n;\n_.newLine = function newLine(){\n  $append_3(this.builder, '\\n');\n}\n;\n_.print_0 = function print_1(str){\n  this.append_0(str);\n}\n;\n_.println = function println_1(obj){\n  this.append_0('' + obj);\n  this.newLine();\n}\n;\n_.println_0 = function println_2(str){\n  this.append_0(str);\n  this.newLine();\n}\n;\nfunction HtmlLogFormatter$1_0($anonymous0, val$html){\n  this.val$html = val$html;\n  StackTracePrintStream_0.call(this, $anonymous0);\n}\n\ndefineSeed(103, 104, {}, HtmlLogFormatter$1_0);\n_.append_0 = function append_0(str){\n  $append_3(this.val$html, $getEscaped(str));\n}\n;\n_.newLine = function newLine_0(){\n  $append_3(this.val$html, '<br>');\n}\n;\nfunction $clinit_LogConfiguration(){\n  $clinit_LogConfiguration = nullMethod;\n  impl = new LogConfiguration$LogConfigurationImplRegular_0;\n}\n\nfunction $onModuleLoad(){\n  var log_0;\n  $configureClientSideLogging(impl);\n  if (!uncaughtExceptionHandler) {\n    log_0 = ($clinit_Logger() , $getLoggerHelper(Lcom_google_gwt_logging_client_LogConfiguration_2_classLit.typeName));\n    setUncaughtExceptionHandler(new LogConfiguration$1_0(log_0));\n  }\n}\n\nvar impl;\nfunction LogConfiguration$1_0(val$log){\n  this.val$log = val$log;\n}\n\ndefineSeed(109, 1, {}, LogConfiguration$1_0);\nfunction $addHandlerIfNotNull(l_0, h_0){\n  $addHandler_0(l_0.impl, h_0);\n}\n\nfunction $configureClientSideLogging(this$static){\n  this$static.root = ($clinit_Logger() , $getLoggerHelper(''));\n  this$static.root.impl.useParentHandlers = false;\n  $setLevels(this$static.root);\n  $setDefaultHandlers(this$static.root);\n}\n\nfunction $parseLevel(s){\n  if (s == null) {\n    return null;\n  }\n  if ($equals(s, ($clinit_Level() , 'OFF'))) {\n    return OFF;\n  }\n   else if ($equals(s, 'SEVERE')) {\n    return SEVERE;\n  }\n   else if ($equals(s, 'WARNING')) {\n    return WARNING;\n  }\n   else if ($equals(s, 'INFO')) {\n    return INFO;\n  }\n   else if ($equals(s, 'CONFIG')) {\n    return CONFIG;\n  }\n   else if ($equals(s, 'FINE')) {\n    return FINE;\n  }\n   else if ($equals(s, 'FINER')) {\n    return FINER;\n  }\n   else if ($equals(s, 'FINEST')) {\n    return FINEST;\n  }\n   else if ($equals(s, 'ALL')) {\n    return ALL;\n  }\n  return null;\n}\n\nfunction $setDefaultHandlers(l_0){\n  var console_0, dev, firebug, loggingWidget, remote, system;\n  console_0 = new ConsoleLogHandler_0;\n  $addHandler_0(l_0.impl, console_0);\n  dev = new DevelopmentModeLogHandler_0;\n  $addHandler_0(l_0.impl, dev);\n  firebug = new FirebugLogHandler_0;\n  $addHandler_0(l_0.impl, firebug);\n  system = new SystemLogHandler_0;\n  $addHandler_0(l_0.impl, system);\n  remote = new NullLogHandler_0;\n  !!remote || $addHandler_0(l_0.impl, null);\n  loggingWidget = new NullLoggingPopup_0;\n  !!loggingWidget || $addHandlerIfNotNull(l_0, new HasWidgetsLogHandler_0);\n}\n\nfunction $setLevels(l_0){\n  var paramLevel, paramsForName;\n  paramLevel = $parseLevel((ensureListParameterMap() , paramsForName = dynamicCast(listParamMap.get_0('logLevel'), Q$List) , !paramsForName?null:dynamicCast(paramsForName.get_1(paramsForName.size_1() - 1), Q$String)));\n  paramLevel?$setLevel_0(l_0.impl, paramLevel):$setLevel_1(l_0, ($clinit_Level() , INFO));\n}\n\nfunction LogConfiguration$LogConfigurationImplRegular_0(){\n}\n\ndefineSeed(110, 1, {}, LogConfiguration$LogConfigurationImplRegular_0);\nfunction NullLogHandler_0(){\n}\n\ndefineSeed(111, 96, makeCastMap([Q$Handler]), NullLogHandler_0);\n_.publish = function publish_3(record){\n}\n;\nfunction NullLoggingPopup_0(){\n}\n\ndefineSeed(112, 1, {}, NullLoggingPopup_0);\n_.add_0 = function add_1(w){\n}\n;\n_.clear_0 = function clear_0(){\n}\n;\n_.iterator = function iterator_0(){\n  return null;\n}\n;\n_.remove_0 = function remove(w){\n  return false;\n}\n;\nfunction SystemLogHandler_0(){\n  $setFormatter(this, new TextLogFormatter_0(true));\n  $setLevel(this, ($clinit_Level() , ALL));\n}\n\ndefineSeed(113, 96, makeCastMap([Q$Handler]), SystemLogHandler_0);\n_.publish = function publish_4(record){\n  return;\n}\n;\nfunction TextLogFormatter_0(showStackTraces){\n  this.showStackTraces = showStackTraces;\n}\n\ndefineSeed(114, 101, {}, TextLogFormatter_0);\n_.format = function format_1(event_0){\n  var message;\n  message = new StringBuilder_0;\n  $append_3(message, $getRecordInfo(event_0, '\\n'));\n  $append_3(message, event_0.msg);\n  this.showStackTraces && !!event_0.thrown && $printStackTrace(event_0.thrown, new StackTracePrintStream_0(message));\n  return message.impl.string;\n}\n;\n_.showStackTraces = false;\nfunction $addHandler_0(this$static, handler){\n  $add_2(this$static.handlers, handler);\n}\n\nfunction $getEffectiveLevel(this$static){\n  var effectiveLevel, logger;\n  if (this$static.level) {\n    return this$static.level;\n  }\n  logger = this$static.parent_0;\n  while (logger) {\n    effectiveLevel = logger.impl.level;\n    if (effectiveLevel) {\n      return effectiveLevel;\n    }\n    logger = logger.impl.parent_0;\n  }\n  return $clinit_Level() , INFO;\n}\n\nfunction $getHandlers(this$static){\n  return dynamicCast($toArray(this$static.handlers, initDim(_3Ljava_util_logging_Handler_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1, Q$Handler_$1]), Q$Handler, this$static.handlers.size_0, 0)), Q$Handler_$1);\n}\n\nfunction $getLoggerHelper(name_0){\n  var logger, manager, newLogger;\n  manager = (!singleton && (singleton = new LogManager_0) , singleton);\n  logger = dynamicCast($get_1(manager.loggerList, name_0), Q$Logger);\n  if (!logger) {\n    newLogger = new LoggerWithExposedConstructor_0(name_0);\n    $addLogger(manager, newLogger);\n    return newLogger;\n  }\n  return logger;\n}\n\nfunction $info(this$static, msg){\n  $log(this$static, ($clinit_Level() , INFO), msg, null);\n}\n\nfunction $isLoggable(this$static, messageLevel){\n  return $getEffectiveLevel(this$static).intValue() <= messageLevel.intValue();\n}\n\nfunction $log(this$static, level, msg, thrown){\n  var record;\n  if ($getEffectiveLevel(this$static).intValue() <= level.intValue()) {\n    record = new LogRecord_0(level, msg);\n    record.thrown = instanceOf(thrown, Q$SerializableThrowable)?dynamicCast(thrown, Q$SerializableThrowable):thrown?createSerializable(thrown):null;\n    $setLoggerName(record, this$static.name_0);\n    $log_0(this$static, record);\n  }\n}\n\nfunction $log_0(this$static, record){\n  var handler, handler$array, handler$array0, handler$index, handler$index0, handler$max, handler$max0, logger;\n  if ($isLoggable(this$static, record.level)) {\n    for (handler$array = dynamicCast($toArray(this$static.handlers, initDim(_3Ljava_util_logging_Handler_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1, Q$Handler_$1]), Q$Handler, this$static.handlers.size_0, 0)), Q$Handler_$1) , handler$index = 0 , handler$max = handler$array.length; handler$index < handler$max; ++handler$index) {\n      handler = handler$array[handler$index];\n      handler.publish(record);\n    }\n    logger = this$static.useParentHandlers?this$static.parent_0:null;\n    while (logger) {\n      for (handler$array0 = $getHandlers(logger.impl) , handler$index0 = 0 , handler$max0 = handler$array0.length; handler$index0 < handler$max0; ++handler$index0) {\n        handler = handler$array0[handler$index0];\n        handler.publish(record);\n      }\n      logger = logger.impl.useParentHandlers?logger.impl.parent_0:null;\n    }\n  }\n}\n\nfunction $setLevel_0(this$static, newLevel){\n  this$static.level = newLevel;\n}\n\nfunction $setName(this$static, newName){\n  this$static.name_0 = newName;\n}\n\nfunction $setParent(this$static, newParent){\n  !!newParent && (this$static.parent_0 = newParent);\n}\n\nfunction LoggerImplRegular_0(){\n  this.useParentHandlers = true;\n  this.handlers = new ArrayList_0;\n}\n\ndefineSeed(115, 1, {}, LoggerImplRegular_0);\n_.level = null;\n_.useParentHandlers = false;\nfunction $clinit_Logger(){\n  $clinit_Logger = nullMethod;\n  new LoggerImplRegular_0;\n}\n\nfunction $addHandler_1(this$static, handler){\n  $addHandler_0(this$static.impl, handler);\n}\n\nfunction $info_0(this$static, msg){\n  $info(this$static.impl, msg);\n}\n\nfunction $log_1(this$static, level, msg){\n  $log(this$static.impl, level, msg, null);\n}\n\nfunction $log_2(this$static, level, msg, thrown){\n  $log(this$static.impl, level, msg, thrown);\n}\n\nfunction $setLevel_1(this$static, newLevel){\n  $setLevel_0(this$static.impl, newLevel);\n}\n\nfunction Logger_0(name_0){\n  $clinit_Logger();\n  this.impl = new LoggerImplRegular_0;\n  $setName(this.impl, name_0);\n}\n\ndefineSeed(117, 1, makeCastMap([Q$Logger]), Logger_0);\nfunction LoggerWithExposedConstructor_0(name_0){\n  $clinit_Logger();\n  Logger_0.call(this, name_0);\n}\n\ndefineSeed(116, 117, makeCastMap([Q$Logger]), LoggerWithExposedConstructor_0);\nfunction $replace_0(this$static, input_0, replacement){\n  return input_0.replace(this$static, replacement);\n}\n\nfunction OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_0(html){\n  if (html == null) {\n    throw new NullPointerException_1('html is null');\n  }\n  this.html = html;\n}\n\ndefineSeed(119, 1, makeCastMap([Q$SafeHtml, Q$Serializable]), OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_0);\n_.asString = function asString(){\n  return this.html;\n}\n;\n_.equals$ = function equals_1(obj){\n  if (!instanceOf(obj, Q$SafeHtml)) {\n    return false;\n  }\n  return $equals(this.html, dynamicCast(obj, Q$SafeHtml).asString());\n}\n;\n_.hashCode$ = function hashCode_3(){\n  return getHashCode_0(this.html);\n}\n;\nfunction $appendEscapedLines(this$static, text_0){\n  $append_3(this$static.sb, $replaceAll(htmlEscape(text_0), '\\n', '<br>'));\n  return this$static;\n}\n\nfunction SafeHtmlBuilder_0(){\n  this.sb = new StringBuilder_0;\n}\n\ndefineSeed(120, 1, {}, SafeHtmlBuilder_0);\nfunction SafeHtmlString_0(html){\n  if (html == null) {\n    throw new NullPointerException_1('html is null');\n  }\n  this.html = html;\n}\n\ndefineSeed(121, 1, makeCastMap([Q$SafeHtml, Q$Serializable]), SafeHtmlString_0);\n_.asString = function asString_0(){\n  return this.html;\n}\n;\n_.equals$ = function equals_2(obj){\n  if (!instanceOf(obj, Q$SafeHtml)) {\n    return false;\n  }\n  return $equals(this.html, dynamicCast(obj, Q$SafeHtml).asString());\n}\n;\n_.hashCode$ = function hashCode_4(){\n  return getHashCode_0(this.html);\n}\n;\n_.toString$ = function toString_6(){\n  return 'safe: \"' + this.html + '\"';\n}\n;\nfunction $clinit_SafeHtmlUtils(){\n  $clinit_SafeHtmlUtils = nullMethod;\n  new SafeHtmlString_0('');\n  AMP_RE = new RegExp('&', 'g');\n  GT_RE = new RegExp('>', 'g');\n  LT_RE = new RegExp('<', 'g');\n  SQUOT_RE = new RegExp(\"'\", 'g');\n  QUOT_RE = new RegExp('\"', 'g');\n}\n\nfunction htmlEscape(s){\n  $clinit_SafeHtmlUtils();\n  s.indexOf('&') != -1 && (s = $replace_0(AMP_RE, s, '&amp;'));\n  s.indexOf('<') != -1 && (s = $replace_0(LT_RE, s, '&lt;'));\n  s.indexOf('>') != -1 && (s = $replace_0(GT_RE, s, '&gt;'));\n  s.indexOf('\"') != -1 && (s = $replace_0(QUOT_RE, s, '&quot;'));\n  s.indexOf(\"'\") != -1 && (s = $replace_0(SQUOT_RE, s, '&#39;'));\n  return s;\n}\n\nvar AMP_RE, GT_RE, LT_RE, QUOT_RE, SQUOT_RE;\nfunction $setItem(this$static, data_0){\n  $setItem_0(this$static.storage, data_0);\n}\n\nfunction Storage_1(){\n  this.storage = 'localStorage';\n}\n\nfunction getLocalStorageIfSupported(){\n  if ((!supportDetectorImpl && (supportDetectorImpl = new Storage$StorageSupportDetector_0) , supportDetectorImpl).isLocalStorageSupported) {\n    !localStorage_0 && (localStorage_0 = new Storage_1);\n    return localStorage_0;\n  }\n  return null;\n}\n\ndefineSeed(123, 1, {}, Storage_1);\nvar localStorage_0, supportDetectorImpl;\nfunction Storage$StorageSupportDetector_0(){\n  this.isLocalStorageSupported = $wnd.localStorage != null;\n  $wnd.sessionStorage != null;\n}\n\ndefineSeed(124, 1, {}, Storage$StorageSupportDetector_0);\n_.isLocalStorageSupported = false;\nfunction $getItem(storage, key){\n  return $wnd[storage].getItem(key);\n}\n\nfunction $removeItem(storage){\n  $getItem(storage, 'dropboxapikey');\n  $wnd[storage].removeItem('dropboxapikey');\n}\n\nfunction $setItem_0(storage, data_0){\n  $getItem(storage, 'dropboxapikey');\n  $wnd[storage].setItem('dropboxapikey', data_0);\n}\n\ndefineSeed(127, 1, {});\nfunction PassthroughParser_0(){\n}\n\ndefineSeed(128, 1, {}, PassthroughParser_0);\nvar INSTANCE_0;\nfunction PassthroughRenderer_0(){\n}\n\ndefineSeed(129, 127, {}, PassthroughRenderer_0);\nvar INSTANCE_1;\nfunction $get(this$static){\n  if (!this$static.element) {\n    this$static.element = $getElementById($doc, this$static.domId);\n    if (!this$static.element) {\n      throw new RuntimeException_1('Cannot find element with id \"' + this$static.domId + '\". Perhaps it is not attached to the document body.');\n    }\n    this$static.element.removeAttribute('id');\n  }\n  return this$static.element;\n}\n\nfunction LazyDomElement_0(domId){\n  this.domId = domId;\n}\n\ndefineSeed(130, 1, {}, LazyDomElement_0);\nfunction attachToDom(element){\n  var origParent, origSibling;\n  ensureHiddenDiv();\n  origParent = $getParentElement(element);\n  origSibling = $getNextSiblingElement(element);\n  $appendChild(hiddenDiv, element);\n  return new UiBinderUtil$TempAttachment_0(origParent, origSibling, element);\n}\n\nfunction ensureHiddenDiv(){\n  if (!hiddenDiv) {\n    hiddenDiv = $doc.createElement('div');\n    setVisible(hiddenDiv, false);\n    $appendChild(getBodyElement(), hiddenDiv);\n  }\n}\n\nfunction orphan(node){\n  $removeChild(node.parentNode, node);\n}\n\nvar hiddenDiv;\nfunction UiBinderUtil$TempAttachment_0(origParent, origSibling, element){\n  this.origParent = origParent;\n  this.origSibling = origSibling;\n  this.element = element;\n}\n\ndefineSeed(132, 1, {}, UiBinderUtil$TempAttachment_0);\nfunction $clinit_DOM(){\n  $clinit_DOM = nullMethod;\n  impl_0 = new DOMImplMozilla_0;\n}\n\nfunction appendChild(parent_0, child){\n  $clinit_DOM();\n  $appendChild(parent_0, ($clinit_PotentialElement() , $resolve(child)));\n}\n\nfunction dispatchEvent_0(evt, elem, listener){\n  $clinit_DOM();\n  var prevCurrentEvent;\n  prevCurrentEvent = currentEvent;\n  currentEvent = evt;\n  elem == sCaptureElem && $eventGetTypeInt(evt.type) == 8192 && (sCaptureElem = null);\n  listener.onBrowserEvent(evt);\n  currentEvent = prevCurrentEvent;\n}\n\nfunction insertChild(parent_0, child, index_0){\n  $clinit_DOM();\n  $insertChild(parent_0, ($clinit_PotentialElement() , $resolve(child)), index_0);\n}\n\nfunction sinkBitlessEvent(elem, eventTypeName){\n  $clinit_DOM();\n  $sinkBitlessEvent(impl_0, elem, eventTypeName);\n}\n\nfunction sinkEvents(elem, eventBits){\n  $clinit_DOM();\n  $sinkEvents(impl_0, elem, eventBits);\n}\n\nvar currentEvent = null, impl_0, sCaptureElem;\n",
"function $onModuleLoad_0(){\n  var allowedModes, currentMode, i;\n  currentMode = $doc.compatMode;\n  allowedModes = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$String, ['CSS1Compat']);\n  for (i = 0; i < allowedModes.length; i++) {\n    if ($equals(allowedModes[i], currentMode)) {\n      return;\n    }\n  }\n  allowedModes.length == 1 && $equals('CSS1Compat', allowedModes[0]) && $equals('BackCompat', currentMode)?\"GWT no longer supports Quirks Mode (document.compatMode=' BackCompat').<br>Make sure your application's host HTML page has a Standards Mode (document.compatMode=' CSS1Compat') doctype,<br>e.g. by using &lt;!doctype html&gt; at the start of your application's HTML page.<br><br>To continue using this unsupported rendering mode and risk layout problems, suppress this message by adding<br>the following line to your*.gwt.xml module file:<br>&nbsp;&nbsp;&lt;extend-configuration-property name=\\\"document.compatMode\\\" value=\\\"\" + currentMode + '\"/&gt;':\"Your *.gwt.xml module configuration prohibits the use of the current doucment rendering mode (document.compatMode=' \" + currentMode + \"').<br>Modify your application's host HTML page doctype, or update your custom 'document.compatMode' configuration property settings.\";\n}\n\nfunction getEventsSunk(elem){\n  return $clinit_DOM() , elem.__eventBits || 0;\n}\n\nfunction getTypeInt(typeName){\n  return $eventGetTypeInt(($clinit_DOM() , typeName));\n}\n\nfunction sinkEvents_0(elem, eventBits){\n  $clinit_DOM();\n  $sinkEvents(impl_0, elem, eventBits);\n}\n\nfunction $clinit_History(){\n  $clinit_History = nullMethod;\n  impl_1 = new HistoryImplMozilla_0;\n  $init(impl_1)?null:(impl_1 = null);\n}\n\nfunction fireCurrentHistoryState(){\n  $clinit_History();\n  var token;\n  if (impl_1) {\n    token = impl_1?token_1 == null?'':token_1:'';\n    fire_0(impl_1, token);\n  }\n}\n\nfunction newItem(historyToken){\n  $clinit_History();\n  !!impl_1 && $newItem(impl_1, historyToken, true);\n}\n\nvar impl_1;\nfunction $clinit_Window(){\n  $clinit_Window = nullMethod;\n  impl_2 = new WindowImplMozilla_0;\n}\n\nfunction addCloseHandler(handler){\n  $clinit_Window();\n  maybeInitializeCloseHandlers();\n  return addHandler(TYPE_1?TYPE_1:(TYPE_1 = new GwtEvent$Type_0), handler);\n}\n\nfunction addHandler(type_0, handler){\n  return $addHandler((!handlers_0 && (handlers_0 = new Window$WindowHandlers_0) , handlers_0), type_0, handler);\n}\n\nfunction maybeInitializeCloseHandlers(){\n  if (!closeHandlersInitialized) {\n    $initWindowCloseHandler(impl_2);\n    closeHandlersInitialized = true;\n  }\n}\n\nfunction onClosing(){\n  $clinit_Window();\n  var event_0;\n  if (closeHandlersInitialized) {\n    event_0 = new Window$ClosingEvent_0;\n    !!handlers_0 && $fireEvent(handlers_0, event_0);\n    return null;\n  }\n  return null;\n}\n\nvar closeHandlersInitialized = false, handlers_0, impl_2;\nfunction $clinit_Window$ClosingEvent(){\n  $clinit_Window$ClosingEvent = nullMethod;\n  TYPE_3 = new GwtEvent$Type_0;\n}\n\nfunction Window$ClosingEvent_0(){\n  $clinit_Window$ClosingEvent();\n}\n\ndefineSeed(139, 53, {}, Window$ClosingEvent_0);\n_.dispatch = function dispatch_3(handler){\n  throwClassCastExceptionUnlessNull(handler);\n  null.nullMethod();\n}\n;\n_.getAssociatedType = function getAssociatedType_4(){\n  return TYPE_3;\n}\n;\nvar TYPE_3;\nfunction buildListParamMap(queryString){\n  var entry, entry$iterator, kv, kvPair, kvPair$array, kvPair$index, kvPair$max, out, qs, values, regexp;\n  out = new HashMap_0;\n  if (queryString != null && queryString.length > 1) {\n    qs = $substring(queryString, 1);\n    for (kvPair$array = $split(qs, '&', 0) , kvPair$index = 0 , kvPair$max = kvPair$array.length; kvPair$index < kvPair$max; ++kvPair$index) {\n      kvPair = kvPair$array[kvPair$index];\n      kv = $split(kvPair, '=', 2);\n      if (kv[0].length == 0) {\n        continue;\n      }\n      values = dynamicCast(out.get_0(kv[0]), Q$List);\n      if (!values) {\n        values = new ArrayList_0;\n        out.put(kv[0], values);\n      }\n      values.add_1(kv.length > 1?(throwIfNull(kv[1]) , regexp = /\\+/g , decodeURIComponent(kv[1].replace(regexp, '%20'))):'');\n    }\n  }\n  for (entry$iterator = out.entrySet_0().iterator(); entry$iterator.hasNext();) {\n    entry = dynamicCast(entry$iterator.next_0(), Q$Map$Entry);\n    entry.setValue(unmodifiableList(dynamicCast(entry.getValue(), Q$List)));\n  }\n  out = ($clinit_Collections() , new Collections$UnmodifiableMap_0(out));\n  return out;\n}\n\nfunction ensureListParameterMap(){\n  var currentQueryString;\n  currentQueryString = $getQueryString($clinit_Window());\n  if (!listParamMap || !$equals(cachedQueryString, currentQueryString)) {\n    listParamMap = buildListParamMap(currentQueryString);\n    cachedQueryString = currentQueryString;\n  }\n}\n\nvar cachedQueryString = '', listParamMap;\nfunction Window$WindowHandlers_0(){\n  HandlerManager_0.call(this, null);\n}\n\ndefineSeed(141, 65, makeCastMap([Q$HasHandlers]), Window$WindowHandlers_0);\nfunction $eventGetTypeInt(eventType){\n  switch (eventType) {\n    case 'blur':\n      return 4096;\n    case 'change':\n      return 1024;\n    case 'click':\n      return 1;\n    case 'dblclick':\n      return 2;\n    case 'focus':\n      return 2048;\n    case 'keydown':\n      return 128;\n    case 'keypress':\n      return 256;\n    case 'keyup':\n      return 512;\n    case 'load':\n      return 32768;\n    case 'losecapture':\n      return 8192;\n    case 'mousedown':\n      return 4;\n    case 'mousemove':\n      return 64;\n    case 'mouseout':\n      return 32;\n    case 'mouseover':\n      return 16;\n    case 'mouseup':\n      return 8;\n    case 'scroll':\n      return 16384;\n    case 'error':\n      return 65536;\n    case 'DOMMouseScroll':\n    case 'mousewheel':\n      return 131072;\n    case 'contextmenu':\n      return 262144;\n    case 'paste':\n      return 524288;\n    case 'touchstart':\n      return 1048576;\n    case 'touchmove':\n      return 2097152;\n    case 'touchend':\n      return 4194304;\n    case 'touchcancel':\n      return 8388608;\n    case 'gesturestart':\n      return 16777216;\n    case 'gesturechange':\n      return 33554432;\n    case 'gestureend':\n      return 67108864;\n    default:return -1;\n  }\n}\n\nfunction $maybeInitializeEventSystem(this$static){\n  if (!eventSystemIsInitialized) {\n    $initEventSystem();\n    $initSyntheticMouseUpEvents();\n    new DOMImpl$1_0(this$static);\n    eventSystemIsInitialized = true;\n  }\n}\n\nfunction cleanupDOM(dom){\n  var allElements, elem, i, listener;\n  allElements = $doc.getElementsByTagName('*');\n  for (i = 0; i < allElements.length; i++) {\n    elem = allElements[i];\n    listener = getEventListener(elem);\n    if (listener) {\n      $sinkEvents(dom, elem, 0);\n      setEventListener(elem, null);\n    }\n    maybeRemoveDisposableEvent(elem);\n  }\n}\n\nfunction getEventListener(elem){\n  var maybeListener = elem.__listener;\n  return !instanceOfJso(maybeListener) && instanceOf(maybeListener, Q$EventListener)?maybeListener:null;\n}\n\nfunction maybeRemoveDisposableEvent(elem){\n  var diEvents = elem.__gwt_disposeEvent;\n  if (diEvents) {\n    for (var i = 0, l_0 = diEvents.length; i < l_0; i++) {\n      var diEvent = diEvents[i];\n      elem.removeEventListener(diEvent.event, diEvent.handler, diEvent.capture);\n      elem.__gwt_disposeEvent = null;\n    }\n  }\n}\n\nfunction setEventListener(elem, listener){\n  elem.__listener = listener;\n}\n\ndefineSeed(142, 1, {});\nvar eventSystemIsInitialized = false;\nfunction DOMImpl$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(143, 1, {}, DOMImpl$1_0);\nfunction $clinit_DOMImplStandard(){\n  $clinit_DOMImplStandard = nullMethod;\n  bitlessEventDispatchers = {_default_:dispatchEvent_2, dragenter:dispatchDragEvent, dragover:dispatchDragEvent};\n  captureEventDispatchers = {click:dispatchCapturedMouseEvent, dblclick:dispatchCapturedMouseEvent, mousedown:dispatchCapturedMouseEvent, mouseup:dispatchCapturedMouseEvent, mousemove:dispatchCapturedMouseEvent, mouseover:dispatchCapturedMouseEvent, mouseout:dispatchCapturedMouseEvent, mousewheel:dispatchCapturedMouseEvent, keydown:dispatchCapturedEvent, keyup:dispatchCapturedEvent, keypress:dispatchCapturedEvent, touchstart:dispatchCapturedMouseEvent, touchend:dispatchCapturedMouseEvent, touchmove:dispatchCapturedMouseEvent, touchcancel:dispatchCapturedMouseEvent, gesturestart:dispatchCapturedMouseEvent, gestureend:dispatchCapturedMouseEvent, gesturechange:dispatchCapturedMouseEvent};\n}\n\nfunction $disposeEventSystem(){\n  var foreach = foreach_0;\n  foreach(captureEvents, function(e, fn){\n    $wnd.removeEventListener(e, fn, true);\n  }\n  );\n}\n\nfunction $initEventSystem(){\n  dispatchEvent_1 = $entry(dispatchEvent_2);\n  dispatchUnhandledEvent = $entry(dispatchUnhandledEvent_0);\n  var foreach = foreach_0;\n  var bitlessEvents = bitlessEventDispatchers;\n  foreach(bitlessEvents, function(e, fn){\n    bitlessEvents[e] = $entry(fn);\n  }\n  );\n  var captureEvents_0 = captureEventDispatchers;\n  foreach(captureEvents_0, function(e, fn){\n    captureEvents_0[e] = $entry(fn);\n  }\n  );\n  foreach(captureEvents_0, function(e, fn){\n    $wnd.addEventListener(e, fn, true);\n  }\n  );\n}\n\nfunction $insertChild(parent_0, toAdd, index_0){\n  var count = 0, child = parent_0.firstChild, before = null;\n  while (child) {\n    if (child.nodeType == 1) {\n      if (count == index_0) {\n        before = child;\n        break;\n      }\n      ++count;\n    }\n    child = child.nextSibling;\n  }\n  parent_0.insertBefore(toAdd, before);\n}\n\nfunction $sinkBitlessEvent(this$static, elem, eventTypeName){\n  var dispatchMap, dispatcher;\n  $maybeInitializeEventSystem(this$static);\n  dispatchMap = bitlessEventDispatchers;\n  dispatcher = dispatchMap[eventTypeName] || dispatchMap['_default_'];\n  elem.addEventListener(eventTypeName, dispatcher, false);\n}\n\nfunction $sinkEventsImpl(elem, bits){\n  var chMask = (elem.__eventBits || 0) ^ bits;\n  elem.__eventBits = bits;\n  if (!chMask)\n    return;\n  chMask & 1 && (elem.onclick = bits & 1?dispatchEvent_1:null);\n  chMask & 2 && (elem.ondblclick = bits & 2?dispatchEvent_1:null);\n  chMask & 4 && (elem.onmousedown = bits & 4?dispatchEvent_1:null);\n  chMask & 8 && (elem.onmouseup = bits & 8?dispatchEvent_1:null);\n  chMask & 16 && (elem.onmouseover = bits & 16?dispatchEvent_1:null);\n  chMask & 32 && (elem.onmouseout = bits & 32?dispatchEvent_1:null);\n  chMask & 64 && (elem.onmousemove = bits & 64?dispatchEvent_1:null);\n  chMask & 128 && (elem.onkeydown = bits & 128?dispatchEvent_1:null);\n  chMask & 256 && (elem.onkeypress = bits & 256?dispatchEvent_1:null);\n  chMask & 512 && (elem.onkeyup = bits & 512?dispatchEvent_1:null);\n  chMask & 1024 && (elem.onchange = bits & 1024?dispatchEvent_1:null);\n  chMask & 2048 && (elem.onfocus = bits & 2048?dispatchEvent_1:null);\n  chMask & 4096 && (elem.onblur = bits & 4096?dispatchEvent_1:null);\n  chMask & 8192 && (elem.onlosecapture = bits & 8192?dispatchEvent_1:null);\n  chMask & 16384 && (elem.onscroll = bits & 16384?dispatchEvent_1:null);\n  chMask & 32768 && (elem.onload = bits & 32768?dispatchUnhandledEvent:null);\n  chMask & 65536 && (elem.onerror = bits & 65536?dispatchEvent_1:null);\n  chMask & 131072 && (elem.onmousewheel = bits & 131072?dispatchEvent_1:null);\n  chMask & 262144 && (elem.oncontextmenu = bits & 262144?dispatchEvent_1:null);\n  chMask & 524288 && (elem.onpaste = bits & 524288?dispatchEvent_1:null);\n  chMask & 1048576 && (elem.ontouchstart = bits & 1048576?dispatchEvent_1:null);\n  chMask & 2097152 && (elem.ontouchmove = bits & 2097152?dispatchEvent_1:null);\n  chMask & 4194304 && (elem.ontouchend = bits & 4194304?dispatchEvent_1:null);\n  chMask & 8388608 && (elem.ontouchcancel = bits & 8388608?dispatchEvent_1:null);\n  chMask & 16777216 && (elem.ongesturestart = bits & 16777216?dispatchEvent_1:null);\n  chMask & 33554432 && (elem.ongesturechange = bits & 33554432?dispatchEvent_1:null);\n  chMask & 67108864 && (elem.ongestureend = bits & 67108864?dispatchEvent_1:null);\n}\n\nfunction dispatchCapturedEvent(evt){\n  $clinit_DOM();\n}\n\nfunction dispatchCapturedMouseEvent(evt){\n  $clinit_DOMImplStandard();\n  $clinit_DOM();\n  return;\n}\n\nfunction dispatchDragEvent(evt){\n  $eventPreventDefault(evt);\n  dispatchEvent_2(evt);\n}\n\nfunction dispatchEvent_2(evt){\n  var element;\n  element = getFirstAncestorWithListener(evt);\n  if (!element) {\n    return;\n  }\n  dispatchEvent_0(evt, element.nodeType != 1?null:element, getEventListener(element));\n}\n\nfunction dispatchUnhandledEvent_0(evt){\n  var element;\n  element = evt.currentTarget;\n  $setPropertyString(element, '__gwtLastUnhandledEvent', evt.type);\n  dispatchEvent_2(evt);\n}\n\nfunction getFirstAncestorWithListener(evt){\n  var curElem;\n  curElem = evt.currentTarget;\n  while (!!curElem && !getEventListener(curElem)) {\n    curElem = curElem.parentNode;\n  }\n  return curElem;\n}\n\ndefineSeed(145, 142, {});\nvar bitlessEventDispatchers, captureElem, captureEventDispatchers, dispatchEvent_1, dispatchUnhandledEvent;\nfunction $clinit_DOMImplMozilla(){\n  $clinit_DOMImplMozilla = nullMethod;\n  $clinit_DOMImplStandard();\n  captureEventDispatchers['DOMMouseScroll'] = dispatchCapturedMouseEvent;\n}\n\nfunction $initSyntheticMouseUpEvents(){\n  $wnd.addEventListener('mouseout', $entry(function(evt){\n    var cap = ($clinit_DOMImplStandard() , captureElem);\n    if (cap && !evt.relatedTarget) {\n      if ('html' == evt.target.tagName.toLowerCase()) {\n        var muEvent = $doc.createEvent('MouseEvents');\n        muEvent.initMouseEvent('mouseup', true, true, $wnd, 0, evt.screenX, evt.screenY, evt.clientX, evt.clientY, evt.ctrlKey, evt.altKey, evt.shiftKey, evt.metaKey, evt.button, null);\n        cap.dispatchEvent(muEvent);\n      }\n    }\n  }\n  ), true);\n}\n\nfunction $sinkEvents(this$static, elem, bits){\n  $maybeInitializeEventSystem(this$static);\n  $sinkEventsImpl(elem, bits);\n  bits & 131072 && elem.addEventListener('DOMMouseScroll', ($clinit_DOMImplStandard() , dispatchEvent_1), false);\n}\n\nfunction DOMImplMozilla_0(){\n  $clinit_DOMImplMozilla();\n}\n\ndefineSeed(144, 145, {}, DOMImplMozilla_0);\nfunction $get_0(this$static, elem){\n  var index_0;\n  index_0 = getIndex(elem);\n  if (index_0 < 0) {\n    return null;\n  }\n  return dynamicCast($get_3(this$static.uiObjectList, index_0), Q$UIObject);\n}\n\nfunction $put(this$static, uiObject){\n  var index_0;\n  if (!this$static.freeList) {\n    index_0 = this$static.uiObjectList.size_0;\n    $add_2(this$static.uiObjectList, uiObject);\n  }\n   else {\n    index_0 = this$static.freeList.index_0;\n    $set(this$static.uiObjectList, index_0, uiObject);\n    this$static.freeList = this$static.freeList.next;\n  }\n  ($clinit_DOM() , uiObject.element)['__uiObjectID'] = index_0;\n}\n\nfunction $removeByElement(this$static, elem){\n  var index_0;\n  index_0 = getIndex(elem);\n  elem['__uiObjectID'] = null;\n  $set(this$static.uiObjectList, index_0, null);\n  this$static.freeList = new ElementMapperImpl$FreeNode_0(index_0, this$static.freeList);\n}\n\nfunction ElementMapperImpl_0(){\n  this.uiObjectList = new ArrayList_0;\n}\n\nfunction getIndex(elem){\n  var index_0 = elem['__uiObjectID'];\n  return index_0 == null?-1:index_0;\n}\n\ndefineSeed(146, 1, {}, ElementMapperImpl_0);\n_.freeList = null;\nfunction ElementMapperImpl$FreeNode_0(index_0, next){\n  this.index_0 = index_0;\n  this.next = next;\n}\n\ndefineSeed(147, 1, {}, ElementMapperImpl$FreeNode_0);\n_.index_0 = 0;\nfunction foreach_0(map_0, fn){\n  for (var e in map_0) {\n    map_0.hasOwnProperty(e) && fn(e, map_0[e]);\n  }\n}\n\nfunction $addValueChangeHandler(this$static, handler){\n  return $addHandler(this$static.handlers, (!TYPE_2 && (TYPE_2 = new GwtEvent$Type_0) , TYPE_2), handler);\n}\n\nfunction $decodeFragment(encodedFragment){\n  return decodeURI(encodedFragment.replace('%23', '#'));\n}\n\nfunction $encodeFragment(fragment){\n  return encodeURI(fragment).replace('#', '%23');\n}\n\nfunction $newItem(this$static, historyToken, issueEvent){\n  historyToken = historyToken == null?'':historyToken;\n  if (!$equals(historyToken, token_1 == null?'':token_1)) {\n    token_1 = historyToken;\n    $nativeUpdate(this$static, historyToken);\n    issueEvent && fire_0(this$static, historyToken);\n  }\n}\n\nfunction setToken(token){\n  token_1 = token;\n}\n\ndefineSeed(149, 1, makeCastMap([Q$HasHandlers]));\n_.decodeFragment = function decodeFragment(encodedFragment){\n  return $decodeFragment(encodedFragment);\n}\n;\n_.encodeFragment = function encodeFragment(fragment){\n  return $encodeFragment(fragment);\n}\n;\n_.fireEvent = function fireEvent_0(event_0){\n  $fireEvent(this.handlers, event_0);\n}\n;\n_.newItemOnEvent = function newItemOnEvent(historyToken){\n  historyToken = historyToken == null?'':historyToken;\n  if (!$equals(historyToken, token_1 == null?'':token_1)) {\n    token_1 = historyToken;\n    fire_0(this, historyToken);\n  }\n}\n;\nvar token_1 = '';\nfunction $init(this$static){\n  var token_0 = '';\n  var hash_0 = $wnd.location.hash;\n  hash_0.length > 0 && (token_0 = this$static.decodeFragment(hash_0.substring(1)));\n  setToken(token_0);\n  var historyImpl = this$static;\n  var checkHistory = $entry(function(){\n    var token = '', hash = $wnd.location.hash;\n    hash.length > 0 && (token = historyImpl.decodeFragment(hash.substring(1)));\n    historyImpl.newItemOnEvent(token);\n  }\n  );\n  var checkHistoryCycle = function(){\n    setTimeout_0(checkHistoryCycle, 250);\n    checkHistory();\n  }\n  ;\n  checkHistoryCycle();\n  return true;\n}\n\ndefineSeed(151, 149, makeCastMap([Q$HasHandlers]));\nfunction $nativeUpdate(this$static, historyToken){\n  if (historyToken.length == 0) {\n    var s = $wnd.location.href;\n    var i = s.indexOf('#');\n    i != -1 && (s = s.substring(0, i));\n    $wnd.location = s + '#';\n  }\n   else {\n    $wnd.location.hash = this$static.encodeFragment(historyToken);\n  }\n}\n\nfunction HistoryImplMozilla_0(){\n  this.handlers = new HandlerManager_0(null);\n}\n\ndefineSeed(150, 151, makeCastMap([Q$HasHandlers]), HistoryImplMozilla_0);\n_.decodeFragment = function decodeFragment_0(encodedFragment){\n  if ($wnd.navigator.userAgent.indexOf('Trident') != -1) {\n    return $decodeFragment(encodedFragment);\n  }\n  return encodedFragment;\n}\n;\nfunction $getQueryString(){\n  return $wnd.location.search;\n}\n\nfunction $initWindowCloseHandler(this$static){\n  var oldOnBeforeUnload = this$static.oldOnBeforeUnload = $wnd.onbeforeunload;\n  var oldOnUnload = this$static.oldOnUnload = $wnd.onunload;\n  $wnd.onbeforeunload = function(evt){\n    var ret, oldRet;\n    try {\n      ret = $entry(onClosing)();\n    }\n     finally {\n      oldRet = oldOnBeforeUnload && oldOnBeforeUnload(evt);\n    }\n    if (ret != null) {\n      return ret;\n    }\n    if (oldRet != null) {\n      return oldRet;\n    }\n  }\n  ;\n  $wnd.onunload = $entry(function(evt){\n    try {\n      $clinit_Window();\n      closeHandlersInitialized && fire((!handlers_0 && (handlers_0 = new Window$WindowHandlers_0) , handlers_0));\n    }\n     finally {\n      oldOnUnload && oldOnUnload(evt);\n      $wnd.onresize = null;\n      $wnd.onscroll = null;\n      $wnd.onbeforeunload = null;\n      $wnd.onunload = null;\n    }\n  }\n  );\n}\n\ndefineSeed(152, 1, {});\nfunction WindowImplMozilla_0(){\n}\n\ndefineSeed(153, 152, {}, WindowImplMozilla_0);\nfunction $getElement(this$static){\n  return $clinit_DOM() , this$static.element;\n}\n\nfunction $resolvePotentialElement(){\n  throw new UnsupportedOperationException_0;\n}\n\nfunction $setElement(this$static, elem){\n  $setElement_0(this$static, ($clinit_DOM() , elem));\n}\n\nfunction $setElement_0(this$static, elem){\n  this$static.element = elem;\n}\n\nfunction $sinkBitlessEvent_0(this$static, eventTypeName){\n  sinkBitlessEvent(($clinit_DOM() , this$static.element), eventTypeName);\n}\n\nfunction setVisible(elem, visible){\n  elem.style.display = visible?'':'none';\n  visible?elem.removeAttribute('aria-hidden'):elem.setAttribute('aria-hidden', 'true');\n}\n\ndefineSeed(158, 1, makeCastMap([Q$HasVisibility, Q$UIObject]));\n_.resolvePotentialElement = function resolvePotentialElement(){\n  return $resolvePotentialElement();\n}\n;\n_.toString$ = function toString_7(){\n  if (!this.element) {\n    return '(null handle)';\n  }\n  return $toString_0(($clinit_DOM() , this.element));\n}\n;\nfunction $addDomHandler(this$static, handler, type_0){\n  var typeInt;\n  typeInt = getTypeInt(type_0.name_0);\n  typeInt == -1?$sinkBitlessEvent_0(this$static, type_0.name_0):this$static.sinkEvents(typeInt);\n  return $addHandler(!this$static.handlerManager?(this$static.handlerManager = new HandlerManager_0(this$static)):this$static.handlerManager, type_0, handler);\n}\n\nfunction $addHandler_2(this$static, handler, type_0){\n  return $addHandler(!this$static.handlerManager?(this$static.handlerManager = new HandlerManager_0(this$static)):this$static.handlerManager, type_0, handler);\n}\n\nfunction $fireEvent_0(this$static, event_0){\n  !!this$static.handlerManager && $fireEvent(this$static.handlerManager, event_0);\n}\n\nfunction $onAttach(this$static){\n  var bitsToAdd;\n  if (this$static.isAttached()) {\n    throw new IllegalStateException_1(\"Should only call onAttach when the widget is detached from the browser's document\");\n  }\n  this$static.attached = true;\n  $clinit_DOM();\n  setEventListener(this$static.element, this$static);\n  bitsToAdd = this$static.eventsToSink;\n  this$static.eventsToSink = -1;\n  bitsToAdd > 0 && this$static.sinkEvents(bitsToAdd);\n  this$static.doAttachChildren();\n  this$static.onLoad();\n}\n\nfunction $onBrowserEvent(this$static, event_0){\n  var related;\n  switch ($clinit_DOM() , $eventGetTypeInt(event_0.type)) {\n    case 16:\n    case 32:\n      related = $eventGetRelatedTarget(event_0);\n      if (!!related && $isOrHasChild(this$static.element, related)) {\n        return;\n      }\n\n  }\n  fireNativeEvent(event_0, this$static, this$static.element);\n}\n\nfunction $onDetach(this$static){\n  if (!this$static.isAttached()) {\n    throw new IllegalStateException_1(\"Should only call onDetach when the widget is attached to the browser's document\");\n  }\n  try {\n    this$static.onUnload();\n  }\n   finally {\n    try {\n      this$static.doDetachChildren();\n    }\n     finally {\n      $clinit_DOM();\n      setEventListener(this$static.element, null);\n      this$static.attached = false;\n    }\n  }\n}\n\nfunction $removeFromParent(this$static){\n  if (!this$static.parent_0) {\n    $clinit_RootPanel();\n    $contains_0(widgetsToDetach, this$static) && detachNow(this$static);\n  }\n   else if (instanceOf(this$static.parent_0, Q$HasWidgets)) {\n    dynamicCast(this$static.parent_0, Q$HasWidgets).remove_0(this$static);\n  }\n   else if (this$static.parent_0) {\n    throw new IllegalStateException_1(\"This widget's parent does not implement HasWidgets\");\n  }\n}\n\nfunction $setParent_0(this$static, parent_0){\n  var oldParent;\n  oldParent = this$static.parent_0;\n  if (!parent_0) {\n    try {\n      !!oldParent && oldParent.isAttached() && this$static.onDetach();\n    }\n     finally {\n      this$static.parent_0 = null;\n    }\n  }\n   else {\n    if (oldParent) {\n      throw new IllegalStateException_1('Cannot set a new parent without first clearing the old parent');\n    }\n    this$static.parent_0 = parent_0;\n    parent_0.isAttached() && this$static.onAttach();\n  }\n}\n\nfunction $sinkEvents_0(this$static, eventBitsToAdd){\n  this$static.eventsToSink == -1?sinkEvents(($clinit_DOM() , this$static.element), eventBitsToAdd | (this$static.element.__eventBits || 0)):(this$static.eventsToSink |= eventBitsToAdd);\n}\n\ndefineSeed(157, 158, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.asWidget = function asWidget(){\n  return this;\n}\n;\n_.doAttachChildren = function doAttachChildren(){\n}\n;\n_.doDetachChildren = function doDetachChildren(){\n}\n;\n_.fireEvent = function fireEvent_1(event_0){\n  $fireEvent_0(this, event_0);\n}\n;\n_.isAttached = function isAttached(){\n  return this.attached;\n}\n;\n_.onAttach = function onAttach(){\n  $onAttach(this);\n}\n;\n_.onBrowserEvent = function onBrowserEvent(event_0){\n  $onBrowserEvent(this, event_0);\n}\n;\n_.onDetach = function onDetach(){\n  $onDetach(this);\n}\n;\n_.onLoad = function onLoad(){\n}\n;\n_.onUnload = function onUnload(){\n}\n;\n_.sinkEvents = function sinkEvents_1(eventBitsToAdd){\n  $sinkEvents_0(this, eventBitsToAdd);\n}\n;\n_.attached = false;\n_.eventsToSink = 0;\ndefineSeed(156, 157, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.add_0 = function add_2(child){\n  throw new UnsupportedOperationException_1('This panel does not support no-arg add()');\n}\n;\n_.clear_0 = function clear_1(){\n  var it;\n  it = this.iterator();\n  while (it.hasNext()) {\n    it.next_0();\n    it.remove_1();\n  }\n}\n;\n_.doAttachChildren = function doAttachChildren_0(){\n  tryCommand(this, ($clinit_AttachDetachException() , attachCommand));\n}\n;\n_.doDetachChildren = function doDetachChildren_0(){\n  tryCommand(this, ($clinit_AttachDetachException() , detachCommand));\n}\n;\nfunction $add(this$static, child, container){\n  $removeFromParent(child);\n  $add_1(this$static.children_0, child);\n  $clinit_DOM();\n  $appendChild(container, ($clinit_PotentialElement() , $resolve(child.element)));\n  $setParent_0(child, this$static);\n}\n\nfunction $remove(this$static, w){\n  var elem;\n  if (w.parent_0 != this$static) {\n    return false;\n  }\n  try {\n    $setParent_0(w, null);\n  }\n   finally {\n    elem = ($clinit_DOM() , w.element);\n    $removeChild($getParentElement(elem), elem);\n    $remove_3(this$static.children_0, w);\n  }\n  return true;\n}\n\nfunction ComplexPanel_0(){\n  this.children_0 = new WidgetCollection_0(this);\n}\n\ndefineSeed(155, 156, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.iterator = function iterator_1(){\n  return new WidgetCollection$WidgetIterator_0(this.children_0);\n}\n;\n_.remove_0 = function remove_0(w){\n  return $remove(this, w);\n}\n;\nfunction $add_0(this$static, w){\n  $add(this$static, w, ($clinit_DOM() , this$static.element));\n}\n\nfunction $remove_0(this$static, w){\n  var removed;\n  removed = $remove(this$static, w);\n  removed && changeToStaticPositioning(($clinit_DOM() , w.element));\n  return removed;\n}\n\nfunction changeToStaticPositioning(elem){\n  $setPropertyImpl(elem.style, 'left', '');\n  $setPropertyImpl(elem.style, 'top', '');\n  $setPropertyImpl(elem.style, 'position', '');\n}\n\ndefineSeed(154, 155, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.add_0 = function add_3(w){\n  $add_0(this, w);\n}\n;\n_.remove_0 = function remove_1(w){\n  return $remove_0(this, w);\n}\n;\nfunction $clinit_AttachDetachException(){\n  $clinit_AttachDetachException = nullMethod;\n  attachCommand = new AttachDetachException$1_0;\n  detachCommand = new AttachDetachException$2_0;\n}\n\nfunction AttachDetachException_0(causes){\n  UmbrellaException_2.call(this, causes);\n}\n\nfunction tryCommand(hasWidgets, c){\n  $clinit_AttachDetachException();\n  var caught, e, w, w$iterator;\n  caught = null;\n  for (w$iterator = hasWidgets.iterator(); w$iterator.hasNext();) {\n    w = dynamicCast(w$iterator.next_0(), Q$Widget);\n    try {\n      c.execute(w);\n    }\n     catch ($e0) {\n      $e0 = wrap_0($e0);\n      if (instanceOf($e0, Q$Throwable)) {\n        e = $e0;\n        !caught && (caught = new HashSet_0);\n        $add_3(caught, e);\n      }\n       else \n        throw unwrap($e0);\n    }\n  }\n  if (caught) {\n    throw new AttachDetachException_0(caught);\n  }\n}\n\ndefineSeed(159, 70, makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Exception, Q$Throwable]), AttachDetachException_0);\nvar attachCommand, detachCommand;\nfunction AttachDetachException$1_0(){\n}\n\ndefineSeed(160, 1, {}, AttachDetachException$1_0);\n_.execute = function execute(w){\n  w.onAttach();\n}\n;\nfunction AttachDetachException$2_0(){\n}\n\ndefineSeed(161, 1, {}, AttachDetachException$2_0);\n_.execute = function execute_0(w){\n  w.onDetach();\n}\n;\nfunction $setFocus(this$static){\n  ($clinit_DOM() , this$static.element).focus();\n}\n\nfunction FocusWidget_0(elem){\n  $setElement_0(this, ($clinit_DOM() , elem));\n}\n\ndefineSeed(164, 157, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.getTabIndex = function getTabIndex(){\n  return ($clinit_DOM() , this.element).tabIndex;\n}\n;\n_.onAttach = function onAttach_0(){\n  var tabIndex;\n  $onAttach(this);\n  tabIndex = this.getTabIndex();\n  -1 == tabIndex && this.setTabIndex(0);\n}\n;\n_.setTabIndex = function setTabIndex(index_0){\n  $setTabIndex(($clinit_DOM() , this.element), index_0);\n}\n;\nfunction $setHTML(this$static, html){\n  $setInnerHTML(($clinit_DOM() , this$static.element), html);\n}\n\nfunction ButtonBase_0(elem){\n  FocusWidget_0.call(this, elem);\n}\n\ndefineSeed(163, 164, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction Button_0(){\n  var e;\n  ButtonBase_0.call(this, (e = $doc.createElement('BUTTON') , e.type = 'button' , e));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-Button');\n}\n\ndefineSeed(162, 163, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Button_0);\nfunction $addValueChangeHandler_0(this$static, handler){\n  if (!this$static.valueChangeHandlerInitialized) {\n    $addDomHandler(this$static, new CheckBox$1_0(this$static), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE));\n    this$static.valueChangeHandlerInitialized = true;\n  }\n  return $addHandler_2(this$static, handler, (!TYPE_2 && (TYPE_2 = new GwtEvent$Type_0) , TYPE_2));\n}\n\nfunction $getValue(this$static){\n  return this$static.attached?($clinit_Boolean() , $isChecked(this$static.inputElem)?TRUE:FALSE):($clinit_Boolean() , $isDefaultChecked(this$static.inputElem)?TRUE:FALSE);\n}\n\nfunction $getValue_0(this$static){\n  return this$static.attached?($clinit_Boolean() , $isChecked(this$static.inputElem)?TRUE:FALSE):($clinit_Boolean() , $isDefaultChecked(this$static.inputElem)?TRUE:FALSE);\n}\n\nfunction $setHTML_0(this$static, html){\n  $setTextOrHtml(this$static.directionalTextHelper, html, true);\n}\n\n",
"function $setValue(this$static, value_0){\n  var oldValue;\n  !value_0 && (value_0 = ($clinit_Boolean() , FALSE));\n  oldValue = this$static.attached?($clinit_Boolean() , $isChecked(this$static.inputElem)?TRUE:FALSE):($clinit_Boolean() , $isDefaultChecked(this$static.inputElem)?TRUE:FALSE);\n  $setChecked(this$static.inputElem, value_0.value_0);\n  $setDefaultChecked(this$static.inputElem, value_0.value_0);\n  if (!!oldValue && oldValue.value_0 == value_0.value_0) {\n    return;\n  }\n}\n\nfunction CheckBox_0(){\n  var e;\n  CheckBox_1.call(this, ($clinit_DOM() , e = $doc.createElement('INPUT') , e.type = 'checkbox' , e.value = 'on' , e));\n  $setClassName(this.element, 'gwt-CheckBox');\n}\n\nfunction CheckBox_1(elem){\n  var uid;\n  ButtonBase_0.call(this, ($clinit_DOM() , $doc.createElement('span')));\n  this.inputElem = elem;\n  this.labelElem = $doc.createElement('label');\n  $appendChild(this.element, this.inputElem);\n  $appendChild(this.element, this.labelElem);\n  uid = $createUniqueId($doc);\n  $setPropertyString(this.inputElem, 'id', uid);\n  $setHtmlFor(this.labelElem, uid);\n  this.directionalTextHelper = new DirectionalTextHelper_0(this.labelElem);\n  !!this.inputElem && $setTabIndex(this.inputElem, 0);\n}\n\ndefineSeed(165, 163, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), CheckBox_0);\n_.getTabIndex = function getTabIndex_0(){\n  return this.inputElem.tabIndex;\n}\n;\n_.onLoad = function onLoad_0(){\n  $clinit_DOM();\n  setEventListener(this.inputElem, this);\n}\n;\n_.onUnload = function onUnload_0(){\n  $clinit_DOM();\n  setEventListener(this.inputElem, null);\n  $setValue(this, this.attached?($clinit_Boolean() , $isChecked(this.inputElem)?TRUE:FALSE):($clinit_Boolean() , $isDefaultChecked(this.inputElem)?TRUE:FALSE));\n}\n;\n_.setTabIndex = function setTabIndex_0(index_0){\n  !!this.inputElem && $setTabIndex(this.inputElem, index_0);\n}\n;\n_.sinkEvents = function sinkEvents_2(eventBitsToAdd){\n  this.eventsToSink == -1?sinkEvents_0(this.inputElem, eventBitsToAdd | getEventsSunk(this.inputElem)):this.eventsToSink == -1?sinkEvents(($clinit_DOM() , this.element), eventBitsToAdd | (this.element.__eventBits || 0)):(this.eventsToSink |= eventBitsToAdd);\n}\n;\n_.valueChangeHandlerInitialized = false;\nfunction CheckBox$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(166, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), CheckBox$1_0);\n_.onClick = function onClick(event_0){\n  fire_0(this.this$0, $getValue(this.this$0));\n}\n;\nfunction $initWidget(this$static, widget){\n  var elem;\n  if (this$static.widget) {\n    throw new IllegalStateException_1('Composite.initWidget() may only be called once.');\n  }\n  $removeFromParent(widget);\n  elem = ($clinit_DOM() , widget.element);\n  $setElement_0(this$static, elem);\n  isPotential(elem) && $setResolver(($clinit_PotentialElement() , elem), this$static);\n  this$static.widget = widget;\n  $setParent_0(widget, this$static);\n}\n\ndefineSeed(167, 157, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.isAttached = function isAttached_0(){\n  if (this.widget) {\n    return this.widget.attached;\n  }\n  return false;\n}\n;\n_.onAttach = function onAttach_1(){\n  if (this.eventsToSink != -1) {\n    $sinkEvents_0(this.widget, this.eventsToSink);\n    this.eventsToSink = -1;\n  }\n  $onAttach(this.widget);\n  $clinit_DOM();\n  setEventListener(this.element, this);\n}\n;\n_.onBrowserEvent = function onBrowserEvent_0(event_0){\n  $onBrowserEvent(this, event_0);\n  $onBrowserEvent(this.widget, event_0);\n}\n;\n_.onDetach = function onDetach_0(){\n  $onDetach(this.widget);\n}\n;\n_.resolvePotentialElement = function resolvePotentialElement_0(){\n  $setElement(this, $resolvePotentialElement());\n  return $clinit_DOM() , this.element;\n}\n;\nfunction $setTextOrHtml(this$static, content_0, isHtml){\n  isHtml?$setInnerHTML(this$static.element, content_0):$setInnerText(this$static.element, content_0);\n  if (this$static.textDir != this$static.initialElementDir) {\n    this$static.textDir = this$static.initialElementDir;\n    setDirectionOnElement(this$static.element, this$static.initialElementDir);\n  }\n}\n\nfunction DirectionalTextHelper_0(element){\n  this.element = element;\n  this.initialElementDir = getDirectionOnElement(element);\n  this.textDir = this.initialElementDir;\n}\n\ndefineSeed(168, 1, {}, DirectionalTextHelper_0);\nfunction $addCells(tbody, row, num){\n  var i, rowElem, tdElement;\n  rowElem = tbody.rows[row];\n  for (i = 0; i < num; i++) {\n    tdElement = $doc.createElement('td');\n    rowElem.appendChild(tdElement);\n  }\n}\n\nfunction $checkRowBounds(this$static, row){\n  var rowSize;\n  rowSize = $getDOMRowCount_0(this$static.bodyElem);\n  if (row >= rowSize || row < 0) {\n    throw new IndexOutOfBoundsException_1('Row index: ' + row + ', Row size: ' + rowSize);\n  }\n}\n\nfunction $cleanCell(this$static, row, column, clearInnerHTML){\n  var td;\n  td = $getRawElement(this$static.cellFormatter, row, column);\n  $internalClearCell(this$static, ($clinit_DOM() , td), clearInnerHTML);\n  return td;\n}\n\nfunction $clear(this$static){\n  var col, row;\n  for (row = 0; row < $getDOMRowCount_0(this$static.bodyElem); ++row) {\n    for (col = 0; col < ($checkRowBounds(this$static, row) , $getDOMCellCount(($clinit_DOM() , this$static.bodyElem), row)); ++col) {\n      $cleanCell(this$static, row, col, false);\n    }\n  }\n}\n\nfunction $getCellForEvent(this$static, event_0){\n  var row, td;\n  td = $getEventTargetCell(this$static, event_0.nativeEvent);\n  if (!td) {\n    return null;\n  }\n  row = $getParentElement(td).sectionRowIndex;\n  td.cellIndex;\n  return new HTMLTable$Cell_0(row);\n}\n\nfunction $getDOMCellCount(tableBody, row){\n  var rowElement;\n  rowElement = tableBody.rows[row];\n  return rowElement.cells.length;\n}\n\nfunction $getDOMRowCount(this$static){\n  return ($clinit_DOM() , this$static.bodyElem).rows.length;\n}\n\nfunction $getDOMRowCount_0(tbody){\n  return ($clinit_DOM() , tbody).rows.length;\n}\n\nfunction $getEventTargetCell(this$static, event_0){\n  var body_0, td, tr;\n  td = ($clinit_DOM() , event_0.target);\n  for (; td; td = $getParentElement(td)) {\n    if ($equalsIgnoreCase($getPropertyString(td, 'tagName'), 'td')) {\n      tr = $getParentElement(td);\n      body_0 = $getParentElement(tr);\n      if (body_0 == this$static.bodyElem) {\n        return td;\n      }\n    }\n    if (td == this$static.bodyElem) {\n      return null;\n    }\n  }\n  return null;\n}\n\nfunction $internalClearCell(this$static, td, clearInnerHTML){\n  var maybeChild, widget;\n  maybeChild = ($clinit_DOM() , $getFirstChildElement(td));\n  widget = null;\n  !!maybeChild && (widget = dynamicCast($get_0(this$static.widgetMap, maybeChild), Q$Widget));\n  if (widget) {\n    $remove_1(this$static, widget);\n    return true;\n  }\n   else {\n    clearInnerHTML && $setInnerHTML(td, '');\n    return false;\n  }\n}\n\nfunction $remove_1(this$static, widget){\n  var elem;\n  if (widget.parent_0 != this$static) {\n    return false;\n  }\n  try {\n    $setParent_0(widget, null);\n  }\n   finally {\n    elem = ($clinit_DOM() , widget.element);\n    $removeChild($getParentElement(elem), elem);\n    $removeByElement(this$static.widgetMap, elem);\n  }\n  return true;\n}\n\nfunction $removeRow(this$static){\n  var column, columnCount;\n  columnCount = ($checkRowBounds(this$static, 0) , $getDOMCellCount(($clinit_DOM() , this$static.bodyElem), 0));\n  for (column = 0; column < columnCount; ++column) {\n    $cleanCell(this$static, 0, column, false);\n  }\n  $removeChild(this$static.bodyElem, $getRow(this$static.bodyElem));\n}\n\nfunction $setCellFormatter(this$static, cellFormatter){\n  this$static.cellFormatter = cellFormatter;\n}\n\nfunction $setColumnFormatter(this$static, formatter){\n  !!this$static.columnFormatter && (formatter.columnGroup = this$static.columnFormatter.columnGroup);\n  this$static.columnFormatter = formatter;\n  $prepareColumnGroup(this$static.columnFormatter);\n}\n\nfunction $setText(this$static, row, column, text_0){\n  var td;\n  $prepareCell(this$static, row, column);\n  td = $cleanCell(this$static, row, column, text_0 == null);\n  text_0 != null && $setInnerText(td, text_0);\n}\n\nfunction $setWidget(this$static, row, widget){\n  var td;\n  $prepareCell(this$static, row, 0);\n  td = $cleanCell(this$static, row, 0, true);\n  if (widget) {\n    $removeFromParent(widget);\n    $put(this$static.widgetMap, widget);\n    appendChild(td, ($clinit_DOM() , widget.element));\n    $setParent_0(widget, this$static);\n  }\n}\n\ndefineSeed(170, 156, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.clear_0 = function clear_2(){\n  $clear(this);\n}\n;\n_.iterator = function iterator_2(){\n  return new HTMLTable$1_0(this);\n}\n;\n_.remove_0 = function remove_2(widget){\n  return $remove_1(this, widget);\n}\n;\nfunction $prepareCell(this$static, row, column){\n  var cellCount, required;\n  $prepareRow(this$static, row);\n  if (column < 0) {\n    throw new IndexOutOfBoundsException_1('Cannot create a column with a negative index: ' + column);\n  }\n  cellCount = ($checkRowBounds(this$static, row) , $getDOMCellCount(($clinit_DOM() , this$static.bodyElem), row));\n  required = column + 1 - cellCount;\n  required > 0 && $addCells(this$static.bodyElem, row, required);\n}\n\nfunction $prepareRow(this$static, row){\n  var i, rowCount, tr;\n  if (row < 0) {\n    throw new IndexOutOfBoundsException_1('Cannot create a row with a negative index: ' + row);\n  }\n  rowCount = $getDOMRowCount_0(this$static.bodyElem);\n  for (i = rowCount; i <= row; i++) {\n    i != $getDOMRowCount_0(this$static.bodyElem) && $checkRowBounds(this$static, i);\n    tr = ($clinit_DOM() , $doc.createElement('tr'));\n    insertChild(this$static.bodyElem, tr, i);\n  }\n}\n\nfunction FlexTable_0(){\n  this.widgetMap = new ElementMapperImpl_0;\n  this.tableElem = ($clinit_DOM() , $doc.createElement('table'));\n  this.bodyElem = $doc.createElement('tbody');\n  appendChild(this.tableElem, this.bodyElem);\n  $setElement(this, this.tableElem);\n  $setCellFormatter(this, new FlexTable$FlexCellFormatter_0(this));\n  $setColumnFormatter(this, new HTMLTable$ColumnFormatter_0(this));\n}\n\ndefineSeed(169, 170, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), FlexTable_0);\nfunction $getCellElement(tbody, row, col){\n  return tbody.rows[row].cells[col];\n}\n\nfunction $getRawElement(this$static, row, column){\n  return $getCellElement(this$static.this$0.bodyElem, row, column);\n}\n\ndefineSeed(172, 1, {});\nfunction FlexTable$FlexCellFormatter_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(171, 172, {}, FlexTable$FlexCellFormatter_0);\nfunction LabelBase_0(element){\n  $setElement_0(this, ($clinit_DOM() , element));\n  this.directionalTextHelper = new DirectionalTextHelper_0(this.element);\n}\n\ndefineSeed(175, 157, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction Label_0(element){\n  LabelBase_0.call(this, element, $equalsIgnoreCase('span', element.tagName));\n}\n\nfunction Label_1(text_0){\n  LabelBase_0.call(this, $doc.createElement('div'));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-Label');\n  $setTextOrHtml(this.directionalTextHelper, text_0, false);\n}\n\ndefineSeed(174, 175, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Label_1);\nfunction $setHTML_1(this$static, html){\n  $setTextOrHtml(this$static.directionalTextHelper, html, true);\n}\n\nfunction HTML_0(){\n  Label_0.call(this, $doc.createElement('div'));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-HTML');\n}\n\nfunction HTML_1(element){\n  Label_0.call(this, element);\n}\n\nfunction HTML_2(html){\n  HTML_0.call(this);\n  $setTextOrHtml(this.directionalTextHelper, html, true);\n}\n\ndefineSeed(173, 174, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), HTML_0, HTML_2);\nfunction $addAndReplaceElement(this$static, widget, toReplace){\n  $addAndReplaceElement_0(this$static, widget, ($clinit_DOM() , toReplace));\n}\n\nfunction $addAndReplaceElement_0(this$static, widget, toReplace){\n  var children, next, toRemove;\n  if (toReplace == ($clinit_DOM() , widget.element)) {\n    return;\n  }\n  $removeFromParent(widget);\n  toRemove = null;\n  children = new WidgetCollection$WidgetIterator_0(this$static.children_0);\n  while (children.index_0 < children.this$0.size_0) {\n    next = $next_0(children);\n    if ($isOrHasChild(toReplace, next.element)) {\n      if (next.element == toReplace) {\n        toRemove = next;\n        break;\n      }\n      $remove_4(children);\n    }\n  }\n  $add_1(this$static.children_0, widget);\n  if (!toRemove) {\n    $replaceChild(toReplace.parentNode, widget.element, toReplace);\n  }\n   else {\n    $insertBefore(toReplace.parentNode, widget.element, toReplace);\n    $remove(this$static, toRemove);\n  }\n  $setParent_0(widget, this$static);\n}\n\nfunction HTMLPanel_0(html){\n  ComplexPanel_0.call(this);\n  $setElement(this, $doc.createElement('div'));\n  $setInnerHTML(($clinit_DOM() , this.element), html);\n}\n\ndefineSeed(176, 155, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), HTMLPanel_0);\n_.add_0 = function add_4(widget){\n  $add(this, widget, ($clinit_DOM() , this.element));\n}\n;\nfunction $findNext(this$static){\n  while (++this$static.nextIndex < this$static.widgetList.size_0) {\n    if ($get_3(this$static.widgetList, this$static.nextIndex) != null) {\n      return;\n    }\n  }\n}\n\nfunction $next(this$static){\n  var result;\n  if (this$static.nextIndex >= this$static.widgetList.size_0) {\n    throw new NoSuchElementException_0;\n  }\n  result = dynamicCast($get_3(this$static.widgetList, this$static.nextIndex), Q$Widget);\n  this$static.lastIndex_0 = this$static.nextIndex;\n  $findNext(this$static);\n  return result;\n}\n\nfunction HTMLTable$1_0(this$0){\n  this.this$0 = this$0;\n  this.widgetList = this.this$0.widgetMap.uiObjectList;\n  $findNext(this);\n}\n\ndefineSeed(177, 1, {}, HTMLTable$1_0);\n_.hasNext = function hasNext(){\n  return this.nextIndex < this.widgetList.size_0;\n}\n;\n_.next_0 = function next_0(){\n  return $next(this);\n}\n;\n_.remove_1 = function remove_3(){\n  var w;\n  if (this.lastIndex_0 < 0) {\n    throw new IllegalStateException_0;\n  }\n  w = dynamicCast($get_3(this.widgetList, this.lastIndex_0), Q$Widget);\n  $removeFromParent(w);\n  this.lastIndex_0 = -1;\n}\n;\n_.lastIndex_0 = -1;\n_.nextIndex = -1;\nfunction HTMLTable$Cell_0(rowIndex){\n  this.rowIndex = rowIndex;\n}\n\ndefineSeed(178, 1, {}, HTMLTable$Cell_0);\n_.rowIndex = 0;\nfunction $prepareColumnGroup(this$static){\n  if (!this$static.columnGroup) {\n    this$static.columnGroup = ($clinit_DOM() , $doc.createElement('colgroup'));\n    insertChild(this$static.this$0.tableElem, this$static.columnGroup, 0);\n    appendChild(this$static.columnGroup, $doc.createElement('col'));\n  }\n}\n\nfunction HTMLTable$ColumnFormatter_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(179, 1, {}, HTMLTable$ColumnFormatter_0);\nfunction $getRow(tbody){\n  return $getRow_0(($clinit_DOM() , tbody));\n}\n\nfunction $getRow_0(tbody){\n  return $clinit_DOM() , tbody.rows[0];\n}\n\nfunction $clinit_HasHorizontalAlignment(){\n  $clinit_HasHorizontalAlignment = nullMethod;\n  $clinit_Style$TextAlign();\n  $clinit_LocaleInfo();\n}\n\nfunction Hyperlink_0(elem){\n  this.anchorElem = ($clinit_DOM() , $doc.createElement('a'));\n  if (!elem) {\n    $setElement(this, this.anchorElem);\n  }\n   else {\n    $setElement_0(this, elem);\n    appendChild(this.element, this.anchorElem);\n  }\n  this.eventsToSink == -1?sinkEvents(this.element, 1 | (this.element.__eventBits || 0)):(this.eventsToSink |= 1);\n  $setClassName(this.element, 'gwt-Hyperlink');\n  this.directionalTextHelper = new DirectionalTextHelper_0(this.anchorElem);\n}\n\nfunction Hyperlink_1(text_0, targetHistoryToken){\n  var hash;\n  Hyperlink_0.call(this, ($clinit_DOM() , $doc.createElement('div')));\n  $setTextOrHtml(this.directionalTextHelper, text_0, false);\n  this.targetHistoryToken = targetHistoryToken;\n  hash = ($clinit_History() , impl_1?$encodeFragment(targetHistoryToken):targetHistoryToken);\n  $setPropertyString(this.anchorElem, 'href', '#' + hash);\n}\n\ndefineSeed(182, 157, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Hyperlink_1);\n_.onBrowserEvent = function onBrowserEvent_1(event_0){\n  var mouseButtons, alt_0, ctrl, meta, shift_0, modifiers, middle, right;\n  $onBrowserEvent(this, event_0);\n  if (($clinit_DOM() , $eventGetTypeInt(event_0.type)) == 1 && (mouseButtons = $eventGetButton(event_0) , alt_0 = !!event_0.altKey , ctrl = !!event_0.ctrlKey , meta = !!event_0.metaKey , shift_0 = !!event_0.shiftKey , modifiers = alt_0 || ctrl || meta || shift_0 , middle = mouseButtons == 4 , right = mouseButtons == 2 , !modifiers && !middle && !right)) {\n    newItem(this.targetHistoryToken);\n    $eventPreventDefault(event_0);\n  }\n}\n;\nfunction InlineHTML_0(){\n  HTML_1.call(this, $doc.createElement('span'));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-InlineHTML');\n}\n\ndefineSeed(183, 173, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), InlineHTML_0);\nfunction $getValueOrThrow(this$static){\n  var text_0;\n  text_0 = $getPropertyString(($clinit_DOM() , this$static.element), 'value');\n  if ($equals('', text_0)) {\n    return null;\n  }\n  return text_0;\n}\n\nfunction $setValue_0(this$static){\n  $setPropertyString(($clinit_DOM() , this$static.element), 'value', '');\n}\n\nfunction ValueBoxBase_0(elem){\n  FocusWidget_0.call(this, elem);\n  addTo($clinit_LocaleInfo());\n}\n\ndefineSeed(187, 164, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.onBrowserEvent = function onBrowserEvent_2(event_0){\n  var type_0;\n  type_0 = ($clinit_DOM() , $eventGetTypeInt(event_0.type));\n  (type_0 & 896) != 0?$onBrowserEvent(this, event_0):$onBrowserEvent(this, event_0);\n}\n;\n_.onLoad = function onLoad_1(){\n}\n;\nfunction $clinit_TextBoxBase(){\n  $clinit_TextBoxBase = nullMethod;\n  $clinit_ValueBoxBase$TextAlignment();\n}\n\nfunction $getValue_1(this$static){\n  var raw;\n  raw = $getValueOrThrow(this$static);\n  return raw == null?'':raw;\n}\n\ndefineSeed(186, 187, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction TextBox_0(){\n  $clinit_TextBoxBase();\n  TextBox_1.call(this, $createInputElement($doc, 'text'), 'gwt-TextBox');\n}\n\nfunction TextBox_1(element, styleName){\n  ValueBoxBase_0.call(this, element, (!INSTANCE_1 && (INSTANCE_1 = new PassthroughRenderer_0) , !INSTANCE_0 && (INSTANCE_0 = new PassthroughParser_0)));\n  styleName != null && $setClassName(($clinit_DOM() , this.element), styleName);\n}\n\ndefineSeed(185, 186, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), TextBox_0);\nfunction PasswordTextBox_0(){\n  $clinit_TextBoxBase();\n  TextBox_1.call(this, $createInputElement($doc, 'password'), 'gwt-PasswordTextBox');\n}\n\ndefineSeed(184, 185, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), PasswordTextBox_0);\nfunction $clinit_PotentialElement(){\n  $clinit_PotentialElement = nullMethod;\n  declareShim();\n}\n\nfunction $resolve(this$static){\n  return this$static.__gwt_resolve?this$static.__gwt_resolve():this$static;\n}\n\nfunction $setResolver(this$static, resolver){\n  this$static.__gwt_resolve = buildResolveCallback(resolver);\n}\n\nfunction buildResolveCallback(resolver){\n  return function(){\n    this.__gwt_resolve = cannotResolveTwice;\n    return resolver.resolvePotentialElement();\n  }\n  ;\n}\n\nfunction cannotResolveTwice(){\n  throw 'A PotentialElement cannot be resolved twice.';\n}\n\nfunction declareShim(){\n  var shim = function(){\n  }\n  ;\n  shim.prototype = {className:'', clientHeight:0, clientWidth:0, dir:'', getAttribute:function(name_0, value_0){\n    return this[name_0];\n  }\n  , href:'', id:'', lang:'', nodeType:1, removeAttribute:function(name_0, value_0){\n    this[name_0] = undefined;\n  }\n  , setAttribute:function(name_0, value_0){\n    this[name_0] = value_0;\n  }\n  , src:'', style:{}, title:''};\n  $wnd.GwtPotentialElementShim = shim;\n}\n\nfunction isPotential(o){\n  $clinit_PotentialElement();\n  try {\n    return !!o && !!o.__gwt_resolve;\n  }\n   catch (e) {\n    return false;\n  }\n}\n\nfunction $clinit_RootPanel(){\n  $clinit_RootPanel = nullMethod;\n  maybeDetachCommand = new RootPanel$1_0;\n  rootPanels = new HashMap_0;\n  widgetsToDetach = new HashSet_0;\n}\n\nfunction RootPanel_0(elem){\n  ComplexPanel_0.call(this);\n  $setElement_0(this, ($clinit_DOM() , elem));\n  $onAttach(this);\n}\n\nfunction detachNow(widget){\n  $clinit_RootPanel();\n  try {\n    widget.onDetach();\n  }\n   finally {\n    $remove_9(widgetsToDetach, widget);\n  }\n}\n\nfunction detachWidgets(){\n  $clinit_RootPanel();\n  try {\n    tryCommand(widgetsToDetach, maybeDetachCommand);\n  }\n   finally {\n    $clearImpl(widgetsToDetach.map_0);\n    $clearImpl(rootPanels);\n  }\n}\n\nfunction get_0(id_0){\n  $clinit_RootPanel();\n  var elem, rp;\n  rp = dynamicCast($get_1(rootPanels, id_0), Q$RootPanel);\n  elem = null;\n  if (id_0 != null) {\n    if (!(elem = $getElementById($doc, id_0))) {\n      return null;\n    }\n  }\n  if (rp) {\n    if (!elem || ($clinit_DOM() , rp.element) == elem) {\n      return rp;\n    }\n  }\n  if (rootPanels.size_0 == 0) {\n    addCloseHandler(new RootPanel$3_0);\n    $clinit_LocaleInfo();\n  }\n  !elem?(rp = new RootPanel$DefaultRootPanel_0):(rp = new RootPanel_0(elem));\n  $put_0(rootPanels, id_0, rp);\n  $add_3(widgetsToDetach, rp);\n  return rp;\n}\n\nfunction getBodyElement(){\n  $clinit_RootPanel();\n  return $doc.body;\n}\n\ndefineSeed(189, 154, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RootPanel, Q$UIObject, Q$Widget]), RootPanel_0);\nvar maybeDetachCommand, rootPanels, widgetsToDetach;\nfunction RootPanel$1_0(){\n}\n\ndefineSeed(190, 1, {}, RootPanel$1_0);\n_.execute = function execute_1(w){\n  w.isAttached() && w.onDetach();\n}\n;\nfunction RootPanel$3_0(){\n}\n\ndefineSeed(191, 1, makeCastMap([Q$CloseHandler, Q$EventHandler]), RootPanel$3_0);\nfunction RootPanel$DefaultRootPanel_0(){\n  RootPanel_0.call(this, getBodyElement());\n}\n\ndefineSeed(192, 189, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RootPanel, Q$UIObject, Q$Widget]), RootPanel$DefaultRootPanel_0);\nfunction $clinit_ValueBoxBase$TextAlignment(){\n  $clinit_ValueBoxBase$TextAlignment = nullMethod;\n  CENTER_0 = new ValueBoxBase$TextAlignment$1_0;\n  JUSTIFY_0 = new ValueBoxBase$TextAlignment$2_0;\n  LEFT_0 = new ValueBoxBase$TextAlignment$3_0;\n  RIGHT_0 = new ValueBoxBase$TextAlignment$4_0;\n  $VALUES_1 = initValues(_3Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$ValueBoxBase$TextAlignment, [CENTER_0, JUSTIFY_0, LEFT_0, RIGHT_0]);\n}\n\nfunction ValueBoxBase$TextAlignment_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_2(){\n  $clinit_ValueBoxBase$TextAlignment();\n  return $VALUES_1;\n}\n\ndefineSeed(193, 39, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_1, CENTER_0, JUSTIFY_0, LEFT_0, RIGHT_0;\nfunction ValueBoxBase$TextAlignment$1_0(){\n  ValueBoxBase$TextAlignment_0.call(this, 'CENTER', 0);\n}\n\ndefineSeed(194, 193, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$1_0);\nfunction ValueBoxBase$TextAlignment$2_0(){\n  ValueBoxBase$TextAlignment_0.call(this, 'JUSTIFY', 1);\n}\n\ndefineSeed(195, 193, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$2_0);\nfunction ValueBoxBase$TextAlignment$3_0(){\n  ValueBoxBase$TextAlignment_0.call(this, 'LEFT', 2);\n}\n\ndefineSeed(196, 193, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$3_0);\nfunction ValueBoxBase$TextAlignment$4_0(){\n  ValueBoxBase$TextAlignment_0.call(this, 'RIGHT', 3);\n}\n\ndefineSeed(197, 193, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$4_0);\nfunction $add_1(this$static, w){\n  $insert(this$static, w, this$static.size_0);\n}\n\nfunction $indexOf(this$static, w){\n  var i;\n  for (i = 0; i < this$static.size_0; ++i) {\n    if (this$static.array[i] == w) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction $insert(this$static, w, beforeIndex){\n  var i, i0, newArray;\n  if (beforeIndex < 0 || beforeIndex > this$static.size_0) {\n    throw new IndexOutOfBoundsException_0;\n  }\n  if (this$static.size_0 == this$static.array.length) {\n    newArray = initDim(_3Lcom_google_gwt_user_client_ui_Widget_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$Widget, this$static.array.length * 2, 0);\n    for (i0 = 0; i0 < this$static.array.length; ++i0) {\n      setCheck(newArray, i0, this$static.array[i0]);\n    }\n    this$static.array = newArray;\n  }\n  ++this$static.size_0;\n  for (i = this$static.size_0 - 1; i > beforeIndex; --i) {\n    setCheck(this$static.array, i, this$static.array[i - 1]);\n  }\n  setCheck(this$static.array, beforeIndex, w);\n}\n\nfunction $remove_2(this$static, index_0){\n  var i;\n  if (index_0 < 0 || index_0 >= this$static.size_0) {\n    throw new IndexOutOfBoundsException_0;\n  }\n  --this$static.size_0;\n  for (i = index_0; i < this$static.size_0; ++i) {\n    setCheck(this$static.array, i, this$static.array[i + 1]);\n  }\n  setCheck(this$static.array, this$static.size_0, null);\n}\n\nfunction $remove_3(this$static, w){\n  var index_0;\n  index_0 = $indexOf(this$static, w);\n  if (index_0 == -1) {\n    throw new NoSuchElementException_0;\n  }\n  $remove_2(this$static, index_0);\n}\n\nfunction WidgetCollection_0(parent_0){\n  this.parent_0 = parent_0;\n  this.array = initDim(_3Lcom_google_gwt_user_client_ui_Widget_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$Widget, 4, 0);\n}\n\ndefineSeed(198, 1, {}, WidgetCollection_0);\n_.iterator = function iterator_3(){\n  return new WidgetCollection$WidgetIterator_0(this);\n}\n;\n_.size_0 = 0;\nfunction $next_0(this$static){\n  if (this$static.index_0 >= this$static.this$0.size_0) {\n    throw new NoSuchElementException_0;\n  }\n  this$static.currentWidget = this$static.this$0.array[this$static.index_0];\n  ++this$static.index_0;\n  return this$static.currentWidget;\n}\n\nfunction $remove_4(this$static){\n  if (!this$static.currentWidget) {\n    throw new IllegalStateException_0;\n  }\n  this$static.this$0.parent_0.remove_0(this$static.currentWidget);\n  --this$static.index_0;\n  this$static.currentWidget = null;\n}\n\nfunction WidgetCollection$WidgetIterator_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(199, 1, {}, WidgetCollection$WidgetIterator_0);\n_.hasNext = function hasNext_0(){\n  return this.index_0 < this.this$0.size_0;\n}\n;\n_.next_0 = function next_1(){\n  return $next_0(this);\n}\n;\n_.remove_1 = function remove_4(){\n  $remove_4(this);\n}\n;\n_.index_0 = 0;\nfunction $getRuntimeValue(){\n  var ua = navigator.userAgent.toLowerCase();\n  var makeVersion = function(result){\n    return parseInt(result[1]) * 1000 + parseInt(result[2]);\n  }\n  ;\n  if (function(){\n    return ua.indexOf('webkit') != -1;\n  }\n  ())\n    return 'safari';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 10;\n  }\n  ())\n    return 'ie10';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 9;\n  }\n  ())\n    return 'ie9';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 8;\n  }\n  ())\n    return 'ie8';\n  if (function(){\n    return ua.indexOf('gecko') != -1;\n  }\n  ())\n    return 'gecko1_8';\n  return 'unknown';\n}\n\nfunction DOMException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(203, 6, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]));\nfunction $clinit_XMLParser(){\n  $clinit_XMLParser = nullMethod;\n  impl_3 = ($clinit_XMLParserImpl() , $clinit_XMLParserImpl() , impl_4);\n}\n\nvar impl_3;\nfunction DOMItem_0(jso){\n  this.jsObject = jso;\n}\n\ndefineSeed(207, 1, makeCastMap([Q$DOMItem]));\n_.equals$ = function equals_3(o){\n  if (instanceOf(o, Q$DOMItem)) {\n    return this.jsObject == dynamicCast(o, Q$DOMItem).jsObject;\n  }\n  return false;\n}\n;\n_.getJsObject = function getJsObject(){\n  return this.jsObject;\n}\n;\n_.hashCode$ = function hashCode_5(){\n  return getHashCode(this.jsObject);\n}\n;\nfunction NodeImpl_0(jso){\n  DOMItem_0.call(this, jso);\n}\n\nfunction build(node){\n  var nodeType;\n  if (!node) {\n    return null;\n  }\n  nodeType = getNodeType(node);\n  switch (nodeType) {\n    case 2:\n      return new AttrImpl_0(node);\n    case 4:\n      return new CDATASectionImpl_0(node);\n    case 8:\n      return new CommentImpl_0(node);\n    case 11:\n      return new DocumentFragmentImpl_0(node);\n    case 9:\n      return new DocumentImpl_0(node);\n    case 1:\n      return new ElementImpl_0(node);\n    case 7:\n      return new ProcessingInstructionImpl_0(node);\n    case 3:\n      return new TextImpl_0(node);\n    default:return new NodeImpl_0(node);\n  }\n}\n\ndefineSeed(206, 207, makeCastMap([Q$DOMItem]), NodeImpl_0);\n_.toString$ = function toString_8(){\n  return $clinit_XMLParserImpl() , $toStringImpl(this);\n}\n;\nfunction AttrImpl_0(o){\n  NodeImpl_0.call(this, o);\n}\n\ndefineSeed(205, 206, makeCastMap([Q$DOMItem]), AttrImpl_0);\nfunction CharacterDataImpl_0(o){\n  NodeImpl_0.call(this, o);\n}\n\ndefineSeed(210, 206, makeCastMap([Q$DOMItem]));\nfunction TextImpl_0(o){\n  CharacterDataImpl_0.call(this, o);\n}\n\ndefineSeed(209, 210, makeCastMap([Q$DOMItem]), TextImpl_0);\n",
"_.toString$ = function toString_9(){\n  var b, i, x_0;\n  b = new StringBuffer_0;\n  x_0 = $split(getData(this.jsObject), '(?=[;&<>\\'\"])', -1);\n  for (i = 0; i < x_0.length; i++) {\n    if (x_0[i].indexOf(';') == 0) {\n      $append_0(b.impl, '&semi;');\n      $append_2(b, $substring(x_0[i], 1));\n    }\n     else if (x_0[i].indexOf('&') == 0) {\n      $append_0(b.impl, '&amp;');\n      $append_2(b, $substring(x_0[i], 1));\n    }\n     else if (x_0[i].indexOf('\"') == 0) {\n      $append_0(b.impl, '&quot;');\n      $append_2(b, $substring(x_0[i], 1));\n    }\n     else if (x_0[i].indexOf(\"'\") == 0) {\n      $append_0(b.impl, '&apos;');\n      $append_2(b, $substring(x_0[i], 1));\n    }\n     else if (x_0[i].indexOf('<') == 0) {\n      $append_0(b.impl, '&lt;');\n      $append_2(b, $substring(x_0[i], 1));\n    }\n     else if (x_0[i].indexOf('>') == 0) {\n      $append_0(b.impl, '&gt;');\n      $append_2(b, $substring(x_0[i], 1));\n    }\n     else {\n      $append_2(b, x_0[i]);\n    }\n  }\n  return b.impl.string;\n}\n;\nfunction CDATASectionImpl_0(o){\n  TextImpl_0.call(this, o);\n}\n\ndefineSeed(208, 209, makeCastMap([Q$DOMItem]), CDATASectionImpl_0);\n_.toString$ = function toString_10(){\n  var b;\n  b = new StringBuffer_2('<![CDATA[');\n  $append_2(b, getData(this.jsObject));\n  $append_0(b.impl, ']]>');\n  return b.impl.string;\n}\n;\nfunction CommentImpl_0(o){\n  CharacterDataImpl_0.call(this, o);\n}\n\ndefineSeed(211, 210, makeCastMap([Q$DOMItem]), CommentImpl_0);\n_.toString$ = function toString_11(){\n  var b;\n  b = new StringBuffer_2('<!--');\n  $append_2(b, getData(this.jsObject));\n  $append_0(b.impl, '-->');\n  return b.impl.string;\n}\n;\nfunction DOMParseException_0(contents, e){\n  DOMException_1.call(this, 'Failed to parse: ' + $substring_0(contents, 0, min_0(contents.length, 128)));\n  $initCause(this, e);\n}\n\ndefineSeed(212, 203, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), DOMParseException_0);\nfunction DocumentFragmentImpl_0(o){\n  NodeImpl_0.call(this, o);\n}\n\ndefineSeed(213, 206, makeCastMap([Q$DOMItem]), DocumentFragmentImpl_0);\nfunction DocumentImpl_0(o){\n  NodeImpl_0.call(this, o);\n}\n\ndefineSeed(214, 206, makeCastMap([Q$Document, Q$DOMItem]), DocumentImpl_0);\nfunction ElementImpl_0(o){\n  NodeImpl_0.call(this, o);\n}\n\ndefineSeed(215, 206, makeCastMap([Q$DOMItem]), ElementImpl_0);\nfunction NodeListImpl_0(o){\n  DOMItem_0.call(this, o);\n}\n\ndefineSeed(216, 207, makeCastMap([Q$DOMItem]), NodeListImpl_0);\n_.toString$ = function toString_12(){\n  var b, i;\n  b = new StringBuffer_0;\n  for (i = 0; i < getLength(this.jsObject); i++) {\n    $append_2(b, build(item_0(this.jsObject, i)).toString$());\n  }\n  return b.impl.string;\n}\n;\nfunction ProcessingInstructionImpl_0(o){\n  NodeImpl_0.call(this, o);\n}\n\ndefineSeed(217, 206, makeCastMap([Q$DOMItem]), ProcessingInstructionImpl_0);\n_.toString$ = function toString_13(){\n  return $clinit_XMLParserImpl() , $toStringImpl(this);\n}\n;\nfunction $clinit_XMLParserImpl(){\n  $clinit_XMLParserImpl = nullMethod;\n  impl_4 = new XMLParserImplStandard_0;\n}\n\nfunction $parse(this$static, contents){\n  var e;\n  try {\n    return dynamicCast(build($parseImpl(this$static, contents)), Q$Document);\n  }\n   catch ($e0) {\n    $e0 = wrap_0($e0);\n    if (instanceOf($e0, Q$JavaScriptException)) {\n      e = $e0;\n      throw new DOMParseException_0(contents, e);\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n\nfunction getChildNodes(t){\n  $clinit_XMLParserImpl();\n  return t.childNodes;\n}\n\nfunction getData(o){\n  $clinit_XMLParserImpl();\n  return o.data;\n}\n\nfunction getLength(o){\n  $clinit_XMLParserImpl();\n  return o.length;\n}\n\nfunction getNodeName(o){\n  $clinit_XMLParserImpl();\n  return o.nodeName;\n}\n\nfunction getNodeType(jsObject){\n  $clinit_XMLParserImpl();\n  var out = jsObject.nodeType;\n  return out == null?-1:out;\n}\n\nfunction getNodeValue(o){\n  $clinit_XMLParserImpl();\n  return o.nodeValue;\n}\n\nfunction item_0(t, index_0){\n  $clinit_XMLParserImpl();\n  if (index_0 >= t.length) {\n    return null;\n  }\n  return t.item(index_0);\n}\n\ndefineSeed(218, 1, {});\nvar impl_4;\nfunction $parseImpl(this$static, contents){\n  var domParser = this$static.domParser;\n  var result = domParser.parseFromString(contents, 'text/xml');\n  var roottag = result.documentElement;\n  if (roottag.tagName == 'parsererror' && roottag.namespaceURI == 'http://www.mozilla.org/newlayout/xml/parsererror.xml') {\n    throw new Error(roottag.firstChild.data);\n  }\n  return result;\n}\n\nfunction $toStringImpl(node){\n  var jsNode = node.getJsObject();\n  return (new XMLSerializer).serializeToString(jsNode);\n}\n\nfunction XMLParserImplStandard_0(){\n  this.domParser = new DOMParser;\n}\n\ndefineSeed(219, 218, {}, XMLParserImplStandard_0);\nfunction SimpleEventBus$1_0(){\n}\n\ndefineSeed(220, 1, {}, SimpleEventBus$1_0);\nfunction SimpleEventBus$2_0(this$0, val$type, val$handler){\n  this.this$0 = this$0;\n  this.val$type = val$type;\n  this.val$source = null;\n  this.val$handler = val$handler;\n}\n\ndefineSeed(221, 1, makeCastMap([Q$SimpleEventBus$Command]), SimpleEventBus$2_0);\nfunction $clinit_DropboxWrapper(){\n  $clinit_DropboxWrapper = nullMethod;\n  LOG = ($clinit_Logger() , $getLoggerHelper('de.voot.dropboxgwt.client.DropboxWrapper'));\n}\n\nfunction $addProgressListener(this$static, progressCallback){\n  $add_4(this$static.progressCallbacks, progressCallback);\n}\n\nfunction $authenticate(this$static, rememberUser, callback){\n  var client_1 = this$static.dropboxClient;\n  localStorage.setItem('rememberUser', rememberUser);\n  client_1.authDriver(new $wnd.Dropbox.AuthDriver.Redirect({rememberUser:rememberUser}));\n  client_1.authenticate({interactive:false}, function(error_0, client_0){\n    if (error_0) {\n      $entry(callback.onFailure(error_0));\n      return;\n    }\n    !client_0.isAuthenticated()?client_0.authenticate(function(error, client){\n      if (error) {\n        $entry(callback.onFailure(error));\n        return;\n      }\n      $entry(callback.onSuccess(null));\n    }\n    ):$entry(callback.onSuccess(null));\n  }\n  );\n}\n\nfunction $installProgressListener(this$static){\n  var client = this$static.dropboxClient;\n  var wrapper = this$static;\n  client.onXhr.addListener(function(Xhr){\n    var path_0 = client.dropboxgwt?client.dropboxgwt.path:undefined;\n    Xhr.xhr.addEventListener('progress', function(path){\n      return function(oEvent){\n        if (oEvent.lengthComputable) {\n          var progress = oEvent.loaded / oEvent.total;\n          $entry(wrapper.onProgress(path, progress));\n        }\n      }\n      ;\n    }\n    (path_0), false);\n  }\n  );\n}\n\nfunction $isAuthenticated(this$static, callback){\n  var client_0 = this$static.dropboxClient;\n  var rememberUser = localStorage.getItem('rememberUser') == 'true';\n  console.log('Checking dropbox authentication status. Remembering user: ' + rememberUser);\n  client_0.authDriver(new $wnd.Dropbox.AuthDriver.Redirect({rememberUser:rememberUser}));\n  client_0.authenticate({interactive:false}, function(error, client){\n    if (error) {\n      $entry(callback.onFailure(error));\n      return;\n    }\n    if (client.isAuthenticated()) {\n      var result = ($clinit_Boolean() , TRUE);\n    }\n     else {\n      var result = ($clinit_Boolean() , FALSE);\n    }\n    $entry(callback.onSuccess(result));\n  }\n  );\n}\n\nfunction $metadata(this$static, path, callback){\n  var client = this$static.dropboxClient;\n  client.metadata(path, {httpCache:true}, function(error, stat){\n    if (error) {\n      $entry(callback.onFailure(error));\n      return;\n    }\n    $entry(callback.onSuccess(stat));\n  }\n  );\n}\n\nfunction $readFile(this$static, path, callback){\n  var client = this$static.dropboxClient;\n  client.dropboxgwt = {path:path};\n  client.readFile(path, {arrayBuffer:true}, function(error, data_0, stat, rangeInfo){\n    if (error) {\n      $entry(callback.onFailure(error));\n      return;\n    }\n    $entry(callback.onSuccess(data_0));\n  }\n  );\n}\n\nfunction $readdir(this$static, path, callback){\n  var client = this$static.dropboxClient;\n  client.readdir(path, {httpCache:true}, function(error, entries, stat, stats){\n    if (error) {\n      $entry(callback.onFailure(error));\n      return;\n    }\n    $entry(callback.onSuccess(stats));\n  }\n  );\n}\n\nfunction DropboxWrapper_0(apiKey){\n  $clinit_DropboxWrapper();\n  $log_1(LOG, ($clinit_Level() , INFO), 'API key is ' + apiKey);\n  this.dropboxClient = (Dropbox = $wnd.Dropbox , new $wnd.Dropbox.Client({key:apiKey}));\n  this.progressCallbacks = new LinkedList_0;\n  $installProgressListener(this);\n}\n\ndefineSeed(222, 1, {}, DropboxWrapper_0);\n_.onProgress = function onProgress(path, progress){\n  var callback, callback$iterator;\n  for (callback$iterator = $listIterator(this.progressCallbacks, 0); callback$iterator.currentNode != callback$iterator.this$0.header;) {\n    callback = dynamicCast($next_4(callback$iterator), Q$ProgressCallback);\n    $info_0(($clinit_ListController() , LOG_2), 'Download progress: ' + progress + ' downloaded of <' + path + '>.');\n    $updateDownloadListWithProgress(callback.this$0, path, progress);\n  }\n}\n;\nvar LOG;\nfunction $getByte(this$static, pos){\n  !this$static.view && (this$static.view = new Uint8Array(this$static));\n  return this$static.view[pos];\n}\n\nfunction $clinit_EncfsAnywhere(){\n  $clinit_EncfsAnywhere = nullMethod;\n  LOG_0 = ($clinit_Logger() , $getLoggerHelper('de.voot.encfsanywhere.client.EncfsAnywhere'));\n}\n\nfunction $onModuleLoad_1(){\n  var appController, rootLogger;\n  rootLogger = ($clinit_Logger() , $getLoggerHelper(''));\n  $addHandler_1(rootLogger, new AlertEventLogHandler_0);\n  $info_0(LOG_0, 'EncfsAnywhere loaded. Starting AppController.');\n  appController = new AppController_0;\n  $init_0(appController, get_0('content'));\n}\n\nvar LOG_0;\nfunction AlertController_0(){\n  this.injector = ($clinit_InjectorHolder() , $clinit_InjectorHolder() , instance_0);\n  this.eventBus = $get_Key$type$com$google$gwt$event$shared$HandlerManager$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_gin(this.injector.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector));\n}\n\ndefineSeed(227, 1, makeCastMap([Q$ValueChangeHandler, Q$EventHandler, Q$Controller]), AlertController_0);\n_.init = function init_0(container){\n  this.container = get_0('alertContainer');\n  $clinit_History();\n  impl_1?$addValueChangeHandler(impl_1, this):null;\n  $addHandler(this.eventBus, ($clinit_AlertEvent() , TYPE_4), new AlertController$1_0(this));\n}\n;\n_.onValueChange = function onValueChange(event_0){\n}\n;\nfunction $showDialog(this$static, caption, text_0){\n  var alertPresenter;\n  alertPresenter = $get_Key$type$de$voot$encfsanywhere$client$presenter$AlertPresenter$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_presenter(this$static.this$0.injector.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector));\n  $go(alertPresenter, this$static.this$0.container);\n  $show(alertPresenter.widget, caption, text_0);\n  $add_0(alertPresenter.container, alertPresenter.widget.asWidget());\n}\n\nfunction AlertController$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(228, 1, makeCastMap([Q$EventHandler, Q$AlertEventHandler]), AlertController$1_0);\nfunction $clinit_AppController(){\n  $clinit_AppController = nullMethod;\n  LOG_1 = ($clinit_Logger() , $getLoggerHelper('de.voot.encfsanywhere.client.controller.AppController'));\n}\n\nfunction $init_0(this$static, container){\n  this$static.container = container;\n  $clinit_History();\n  impl_1?$addValueChangeHandler(impl_1, this$static):null;\n  $initControllers(this$static);\n  $equals('', impl_1?token_1 == null?'':token_1:'')?!!impl_1 && $newItem(impl_1, 'autoconnect', true):fireCurrentHistoryState();\n}\n\nfunction $initControllers(this$static){\n  var controller, controller$index, controller$max, controllers_0;\n  $log_1(LOG_1, ($clinit_Level() , INFO), 'Initializing controllers');\n  controllers_0 = initValues(_3Lde_voot_encfsanywhere_client_controller_Controller_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$Controller, [$get_Key$type$de$voot$encfsanywhere$client$controller$AlertController$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_controller(this$static.injector.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector)), $get_Key$type$de$voot$encfsanywhere$client$controller$StorageConnectController$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_controller(this$static.injector.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector)), $get_Key$type$de$voot$encfsanywhere$client$controller$ListController$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_controller(this$static.injector.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector)), $get_Key$type$de$voot$encfsanywhere$client$controller$UISugarController$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_controller(this$static.injector.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector))]);\n  for (controller$index = 0 , controller$max = controllers_0.length; controller$index < controller$max; ++controller$index) {\n    controller = controllers_0[controller$index];\n    controller.init(this$static.container);\n  }\n}\n\nfunction AppController_0(){\n  $clinit_AppController();\n  this.injector = ($clinit_InjectorHolder() , $clinit_InjectorHolder() , instance_0);\n}\n\ndefineSeed(229, 1, makeCastMap([Q$ValueChangeHandler, Q$EventHandler, Q$Controller]), AppController_0);\n_.init = function init_1(container){\n  $init_0(this, container);\n}\n;\n_.onValueChange = function onValueChange_0(event_0){\n}\n;\nvar LOG_1;\nfunction $clinit_ListController(){\n  $clinit_ListController = nullMethod;\n  LOG_2 = ($clinit_Logger() , $getLoggerHelper('de.voot.encfsanywhere.client.controller.ListController'));\n}\n\nfunction $addToDownloadList(this$static, path){\n  $add_4(this$static.downloadsInProgress, new DownloadStatus_0(path));\n  $showDownloads(this$static.listPresenter, this$static.downloadsInProgress);\n}\n\nfunction $bindDropboxProgessListener(this$static, dropboxWrapper){\n  $addProgressListener(dropboxWrapper, new ListController$2_0(this$static));\n}\n\nfunction $disconnect(this$static){\n  $log_1(LOG_2, ($clinit_Level() , INFO), 'Disconnecting from storage provider');\n  $disconnect_0(this$static.files);\n  this$static.files = null;\n  $clinit_History();\n  !!impl_1 && $newItem(impl_1, 'connect', true);\n}\n\nfunction $downloadListIndex(this$static, path){\n  var i;\n  for (i = 0; i < this$static.downloadsInProgress.size_0; i++) {\n    if ($equals(dynamicCast($get_2(this$static.downloadsInProgress, i), Q$DownloadStatus).path_0, path)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction $downloadPath(this$static, path){\n  $info_0(LOG_2, 'Initiating download of path: ' + path);\n  if ($downloadListIndex(this$static, path.path_0) > -1) {\n    $info_0(LOG_2, 'File already downloading. Not starting new download.');\n    $fireEvent(this$static.eventBus, new AlertEvent_0('Already downloading', \"File is already downloading. Didn't start a second download.\"));\n    return;\n  }\n  $addToDownloadList(this$static, path.path_0);\n  $getFileContent(this$static.files, path, new ListController$6_0(this$static, path));\n}\n\nfunction $fileProviderConnected(this$static, encFSFileProvider){\n  $info_0(LOG_2, 'Received file provider');\n  this$static.files = new Files_0(encFSFileProvider);\n}\n\nfunction $passwordPromptFinished(this$static, password){\n  if (password != null) {\n    $info_0(LOG_2, 'Unlocking encfs volume');\n    $wnd.$('#derivatingKeyOverlay').show();\n    $unlock(this$static.files, this$static.currentPath, password, new ListController$5_0(this$static));\n  }\n   else {\n    $info_0(LOG_2, 'No password provided');\n    $showFiles_0(this$static, this$static.currentPath);\n  }\n}\n\nfunction $removeFromDownloadList(this$static, path){\n  var index_0;\n  index_0 = $downloadListIndex(this$static, path);\n  if (index_0 > -1) {\n    $remove_8(this$static.downloadsInProgress, index_0);\n    $showDownloads(this$static.listPresenter, this$static.downloadsInProgress);\n  }\n}\n\nfunction $showFiles(this$static, path){\n  $info_0(LOG_2, 'Loading list of files for path <' + path + '> and presenting');\n  $listFiles_0(this$static.files, path, wrap_1(new ListController$4_0(this$static, path, false)));\n}\n\nfunction $showFiles_0(this$static, path){\n  $info_0(LOG_2, 'Loading list of files for path <' + path + '> and presenting');\n  $listFiles_0(this$static.files, path, wrap_1(new ListController$4_0(this$static, path, true)));\n}\n\nfunction $showPath(path){\n  $clinit_History();\n  !!impl_1 && $newItem(impl_1, 'files' + path, true);\n}\n\nfunction $updateDownloadListWithProgress(this$static, path, progress){\n  var index_0;\n  index_0 = $downloadListIndex(this$static, path);\n  if (index_0 == -1) {\n    path = $decryptCachedPathname(this$static.files, path);\n    index_0 = $downloadListIndex(this$static, path);\n  }\n  if (index_0 > -1) {\n    $setProgress(dynamicCast($get_2(this$static.downloadsInProgress, index_0), Q$DownloadStatus), progress);\n    $showDownloads(this$static.listPresenter, this$static.downloadsInProgress);\n  }\n}\n\nfunction ListController_0(){\n  $clinit_ListController();\n  this.injector = ($clinit_InjectorHolder() , $clinit_InjectorHolder() , instance_0);\n  this.eventBus = $get_Key$type$com$google$gwt$event$shared$HandlerManager$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_gin(this.injector.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector));\n  this.listPresenter = $get_Key$type$de$voot$encfsanywhere$client$presenter$ListPresenter$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_presenter(this.injector.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector));\n  this.downloadsInProgress = new LinkedList_0;\n}\n\ndefineSeed(230, 1, makeCastMap([Q$ValueChangeHandler, Q$EventHandler, Q$Controller]), ListController_0);\n_.init = function init_2(container){\n  this.container = container;\n  $clinit_History();\n  impl_1?$addValueChangeHandler(impl_1, this):null;\n  $addHandler(this.eventBus, ($clinit_DropboxConnectedEvent() , TYPE_7), new ListController$1_0(this));\n}\n;\n_.onValueChange = function onValueChange_1(event_0){\n  var path, token, validatedPath;\n  token = dynamicCast(event_0.value_0, Q$String);\n  if (token != null) {\n    if (token.indexOf('files') == 0) {\n      if (!this.files) {\n        $clinit_History();\n        !!impl_1 && $newItem(impl_1, 'autoconnect', true);\n      }\n       else {\n        path = $substring(token, 5);\n        $info_0(LOG_2, 'Preparing to change to path <' + path + '>');\n        validatedPath = !path.length?'/':path;\n        $equals(path, validatedPath) || ($clinit_History() , !!impl_1 && $newItem(impl_1, 'files' + validatedPath, false));\n        $pathForName(this.files, validatedPath, wrap_1(new ListController$3_0(this)));\n      }\n    }\n  }\n}\n;\nvar LOG_2;\nfunction $onDropboxConnected(this$static, dropboxWrapper){\n  $bindDropboxProgessListener(this$static.this$0, dropboxWrapper);\n  $fileProviderConnected(this$static.this$0, new DropboxFileProvider_0(dropboxWrapper));\n}\n\nfunction ListController$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(231, 1, makeCastMap([Q$EventHandler, Q$DropboxConnectedEventHandler]), ListController$1_0);\nfunction ListController$2_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(232, 1, makeCastMap([Q$ProgressCallback]), ListController$2_0);\nfunction $onFailure(reason){\n  $log_2(($clinit_ListController() , LOG_2), ($clinit_Level() , SEVERE), \"Couldn't get path object for path string\", reason);\n}\n\nfunction $onSuccess(this$static, path){\n  this$static.this$0.currentPath = path;\n  $showFiles(this$static.this$0, path);\n}\n\nfunction ListController$3_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(233, 1, {}, ListController$3_0);\n_.onFailure = function onFailure(reason){\n  $onFailure(dynamicCast(reason, Q$Exception));\n}\n;\n_.onSuccess = function onSuccess(path){\n  $onSuccess(this, dynamicCast(path, Q$Path));\n}\n;\nfunction $onFailure_0(this$static, reason){\n  $log_2(($clinit_ListController() , LOG_2), ($clinit_Level() , SEVERE), 'Exception getting list of files for path: ' + this$static.val$path, reason);\n}\n\nfunction $onSuccess_0(this$static, result){\n  $info_0(($clinit_ListController() , LOG_2), 'Received list of files');\n  $go_0(this$static.this$0.listPresenter, this$static.this$0.container);\n  !this$static.val$disablePasswordPrompt && $isEncFSRoot(this$static.this$0.files, this$static.val$path).value_0 && !$isEncFSRootUnlocked(this$static.this$0.files, this$static.val$path)?$promptForPassword(this$static.this$0.listPresenter.view_0):$listFiles(this$static.this$0.listPresenter, this$static.this$0.files, this$static.val$path, result);\n}\n\nfunction ListController$4_0(this$0, val$path, val$disablePasswordPrompt){\n  this.this$0 = this$0;\n  this.val$path = val$path;\n  this.val$disablePasswordPrompt = val$disablePasswordPrompt;\n}\n\ndefineSeed(234, 1, {}, ListController$4_0);\n_.onFailure = function onFailure_0(reason){\n  $onFailure_0(this, dynamicCast(reason, Q$Exception));\n}\n;\n_.onSuccess = function onSuccess_0(result){\n  $onSuccess_0(this, dynamicCast(result, Q$Path_$1));\n}\n;\n_.val$disablePasswordPrompt = false;\nfunction $onFailure_1(reason){\n  hideKeyDerivationOverlay();\n  $log_2(($clinit_ListController() , LOG_2), ($clinit_Level() , SEVERE), \"Couldn't unlock encfs volume\", reason);\n}\n\nfunction $onFailure_2(reason){\n  $onFailure_1(dynamicCast(reason, Q$Exception));\n}\n\nfunction $onSuccess_1(this$static){\n  $info_0(($clinit_ListController() , LOG_2), 'Unlock of volume successful');\n  hideKeyDerivationOverlay();\n  $showFiles(this$static.this$0, this$static.this$0.currentPath);\n}\n\nfunction ListController$5_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(235, 1, {}, ListController$5_0);\n_.onFailure = function onFailure_1(reason){\n  $onFailure_2(reason);\n}\n;\n_.onSuccess = function onSuccess_1(v){\n  $onSuccess_1(this, throwClassCastExceptionUnlessNull(v));\n}\n;\nfunction $onFailure_3(this$static, reason){\n  $removeFromDownloadList(this$static.this$0, this$static.val$path.path_0);\n  $log_2(($clinit_ListController() , LOG_2), ($clinit_Level() , SEVERE), \"Couldn't receive file contents.\", reason);\n}\n\nfunction $onSuccess_2(this$static, result){\n  $removeFromDownloadList(this$static.this$0, this$static.val$path.path_0);\n  download(result, $getName(this$static.val$path));\n}\n\nfunction ListController$6_0(this$0, val$path){\n  this.this$0 = this$0;\n  this.val$path = val$path;\n}\n\ndefineSeed(236, 1, {}, ListController$6_0);\n_.onFailure = function onFailure_2(reason){\n  $onFailure_3(this, dynamicCast(reason, Q$Exception));\n}\n;\n_.onSuccess = function onSuccess_2(result){\n  $onSuccess_2(this, dynamicCast(result, Q$InputStream));\n}\n;\nfunction $clinit_StorageConnectController(){\n  $clinit_StorageConnectController = nullMethod;\n  LOG_3 = ($clinit_Logger() , $getLoggerHelper('de.voot.encfsanywhere.client.controller.StorageConnectController'));\n}\n\nfunction $authDropbox(this$static, rememberUser, apiKey){\n  var dropboxWrapper;\n  $log_1(LOG_3, ($clinit_Level() , INFO), 'Authing with dropbox. Saving oauth tokens: ' + rememberUser);\n  dropboxWrapper = (apiKey != null?$setItem(getLocalStorageIfSupported(), $trim(apiKey)):$removeItem(getLocalStorageIfSupported().storage) , $getDropboxWrapper());\n  $authenticate(dropboxWrapper, rememberUser, wrap_1(new StorageConnectController$2_0(this$static, dropboxWrapper)));\n}\n\nfunction $connectToDropbox(this$static, rememberUser, apiKey){\n  $log_1(LOG_3, ($clinit_Level() , INFO), 'Starting new dropbox auth sequence. Remember set to: ' + rememberUser);\n  rememberUser?($clinit_History() , !!impl_1 && $newItem(impl_1, 'connectRemember', false)):($clinit_History() , !!impl_1 && $newItem(impl_1, 'connectNoRemember', false));\n  $authDropbox(this$static, rememberUser, apiKey);\n}\n\nfunction $dropboxConnected(this$static, dropboxWrapper){\n  $log_1(LOG_3, ($clinit_Level() , INFO), 'Connected to dropbox');\n  $fireEvent(this$static.eventBus, new DropboxConnectedEvent_0(dropboxWrapper));\n  $clinit_History();\n  !!impl_1 && $newItem(impl_1, 'files', true);\n}\n\nfunction $getDropboxWrapper(){\n  var apiKey;\n  apiKey = $getItem(getLocalStorageIfSupported().storage, 'dropboxapikey');\n  return apiKey == null?($log_1(LOG_3, ($clinit_Level() , INFO), 'Using dropbox api key p0xz4365l9f0z75') , new DropboxWrapper_0('p0xz4365l9f0z75')):($log_1(LOG_3, ($clinit_Level() , INFO), 'Using dropbox api key ' + apiKey) , new DropboxWrapper_0(apiKey));\n}\n\nfunction StorageConnectController_0(){\n  $clinit_StorageConnectController();\n  this.injector = ($clinit_InjectorHolder() , $clinit_InjectorHolder() , instance_0);\n  this.eventBus = $get_Key$type$com$google$gwt$event$shared$HandlerManager$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_gin(this.injector.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector));\n}\n\ndefineSeed(237, 1, makeCastMap([Q$ValueChangeHandler, Q$EventHandler, Q$Controller]), StorageConnectController_0);\n_.init = function init_3(container){\n  this.container = container;\n  $clinit_History();\n  impl_1?$addValueChangeHandler(impl_1, this):null;\n}\n;\n_.onValueChange = function onValueChange_2(event_0){\n  var token, dropboxWrapper;\n  token = dynamicCast(event_0.value_0, Q$String);\n  token != null && ($equals(token, 'connect')?$go_1($get_Key$type$de$voot$encfsanywhere$client$presenter$StorageConnectPresenter$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_presenter(this.injector.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector)), this.container):token.indexOf('autoconnect') == 0 || token.indexOf('access_token') == 0?($log_1(LOG_3, ($clinit_Level() , INFO), 'Trying autoconnect with Dropbox') , dropboxWrapper = $getDropboxWrapper() , $isAuthenticated(dropboxWrapper, new StorageConnectController$1_0(this, dropboxWrapper)) , undefined):token.indexOf('connectNoRemember') == 0?$authDropbox(this, false, null):token.indexOf('connectRemember') == 0 && $authDropbox(this, true, null));\n}\n;\nvar LOG_3;\nfunction $onFailure_4(reason){\n  $log_1(($clinit_StorageConnectController() , LOG_3), ($clinit_Level() , WARNING), 'There was an error auto-reconnecting. Error is: ' + reason.responseText);\n}\n\nfunction $onSuccess_3(this$static, result){\n  $log_1(($clinit_StorageConnectController() , LOG_3), ($clinit_Level() , INFO), 'Autoconnect result: ' + result);\n  result.value_0?$dropboxConnected(this$static.this$0, this$static.val$dropboxWrapper):($clinit_History() , !!impl_1 && $newItem(impl_1, 'connect', true));\n}\n\nfunction StorageConnectController$1_0(this$0, val$dropboxWrapper){\n  this.this$0 = this$0;\n  this.val$dropboxWrapper = val$dropboxWrapper;\n}\n\ndefineSeed(238, 1, {}, StorageConnectController$1_0);\n_.onFailure = function onFailure_3(reason){\n  $onFailure_4(dynamicCastJso(reason));\n}\n;\n_.onSuccess = function onSuccess_3(result){\n  $onSuccess_3(this, dynamicCast(result, Q$Boolean));\n}\n;\nfunction $onFailure_5(reason){\n  $log_1(($clinit_StorageConnectController() , LOG_3), ($clinit_Level() , WARNING), \"Couldn't connect to dropbox. Reason is: \" + reason.responseText);\n  $clinit_History();\n  !!impl_1 && $newItem(impl_1, 'connect', true);\n}\n\nfunction $onSuccess_4(this$static){\n  $dropboxConnected(this$static.this$0, this$static.val$dropboxWrapper);\n}\n\nfunction StorageConnectController$2_0(this$0, val$dropboxWrapper){\n  this.this$0 = this$0;\n  this.val$dropboxWrapper = val$dropboxWrapper;\n}\n\ndefineSeed(239, 1, {}, StorageConnectController$2_0);\n_.onFailure = function onFailure_4(reason){\n  $onFailure_5(dynamicCastJso(reason));\n}\n;\n_.onSuccess = function onSuccess_4(result){\n  $onSuccess_4(this, throwClassCastExceptionUnlessNull(result));\n}\n;\nfunction UISugarController_0(){\n  this.injector = ($clinit_InjectorHolder() , $clinit_InjectorHolder() , instance_0);\n  this.eventBus = $get_Key$type$com$google$gwt$event$shared$HandlerManager$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_gin(this.injector.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector));\n}\n\ndefineSeed(240, 1, makeCastMap([Q$ValueChangeHandler, Q$EventHandler, Q$Controller]), UISugarController_0);\n_.init = function init_4(container){\n  $clinit_History();\n  impl_1?$addValueChangeHandler(impl_1, this):null;\n  $addHandler(this.eventBus, ($clinit_AsyncCallStartedEvent() , TYPE_6), new UISugarController$1_0(this));\n  $addHandler(this.eventBus, ($clinit_AsyncCallFinishedEvent() , TYPE_5), new UISugarController$2_0(this));\n}\n;\n_.onValueChange = function onValueChange_3(event_0){\n}\n;\n_.asyncCallsPlaced = 0;\nfunction UISugarController$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(241, 1, makeCastMap([Q$EventHandler, Q$AsyncCallStartedEventHandler]), UISugarController$1_0);\nfunction UISugarController$2_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(242, 1, makeCastMap([Q$EventHandler, Q$AsyncCallFinishedEventHandler]), UISugarController$2_0);\nfunction $get_Key$type$de$voot$encfsanywhere$client$controller$AlertController$_annotation$$none$$(this$static){\n  var created;\n  if (!this$static.singleton_Key$type$de$voot$encfsanywhere$client$controller$AlertController$_annotation$$none$$) {\n    created = new AlertController_0;\n    this$static.singleton_Key$type$de$voot$encfsanywhere$client$controller$AlertController$_annotation$$none$$ = created;\n  }\n  return this$static.singleton_Key$type$de$voot$encfsanywhere$client$controller$AlertController$_annotation$$none$$;\n}\n\nfunction $get_Key$type$de$voot$encfsanywhere$client$controller$ListController$_annotation$$none$$(this$static){\n  var created;\n  if (!this$static.singleton_Key$type$de$voot$encfsanywhere$client$controller$ListController$_annotation$$none$$) {\n    created = new ListController_0;\n    this$static.singleton_Key$type$de$voot$encfsanywhere$client$controller$ListController$_annotation$$none$$ = created;\n  }\n  return this$static.singleton_Key$type$de$voot$encfsanywhere$client$controller$ListController$_annotation$$none$$;\n}\n\n",
"function $get_Key$type$de$voot$encfsanywhere$client$controller$StorageConnectController$_annotation$$none$$(this$static){\n  var created;\n  if (!this$static.singleton_Key$type$de$voot$encfsanywhere$client$controller$StorageConnectController$_annotation$$none$$) {\n    created = new StorageConnectController_0;\n    this$static.singleton_Key$type$de$voot$encfsanywhere$client$controller$StorageConnectController$_annotation$$none$$ = created;\n  }\n  return this$static.singleton_Key$type$de$voot$encfsanywhere$client$controller$StorageConnectController$_annotation$$none$$;\n}\n\nfunction $get_Key$type$de$voot$encfsanywhere$client$controller$UISugarController$_annotation$$none$$(this$static){\n  var created;\n  if (!this$static.singleton_Key$type$de$voot$encfsanywhere$client$controller$UISugarController$_annotation$$none$$) {\n    created = new UISugarController_0;\n    this$static.singleton_Key$type$de$voot$encfsanywhere$client$controller$UISugarController$_annotation$$none$$ = created;\n  }\n  return this$static.singleton_Key$type$de$voot$encfsanywhere$client$controller$UISugarController$_annotation$$none$$;\n}\n\nfunction de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_fragment_0(){\n}\n\ndefineSeed(243, 1, {}, de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_fragment_0);\n_.singleton_Key$type$de$voot$encfsanywhere$client$controller$AlertController$_annotation$$none$$ = null;\n_.singleton_Key$type$de$voot$encfsanywhere$client$controller$ListController$_annotation$$none$$ = null;\n_.singleton_Key$type$de$voot$encfsanywhere$client$controller$StorageConnectController$_annotation$$none$$ = null;\n_.singleton_Key$type$de$voot$encfsanywhere$client$controller$UISugarController$_annotation$$none$$ = null;\nfunction $clinit_AlertEvent(){\n  $clinit_AlertEvent = nullMethod;\n  TYPE_4 = new GwtEvent$Type_0;\n}\n\nfunction $dispatch_0(this$static, handler){\n  $showDialog(handler, this$static.caption, this$static.text_0);\n}\n\nfunction AlertEvent_0(caption, text_0){\n  $clinit_AlertEvent();\n  this.caption = caption;\n  this.text_0 = text_0;\n}\n\ndefineSeed(244, 53, {}, AlertEvent_0);\n_.dispatch = function dispatch_4(handler){\n  $dispatch_0(this, dynamicCast(handler, Q$AlertEventHandler));\n}\n;\n_.getAssociatedType = function getAssociatedType_5(){\n  return TYPE_4;\n}\n;\nvar TYPE_4;\nfunction $clinit_AsyncCallFinishedEvent(){\n  $clinit_AsyncCallFinishedEvent = nullMethod;\n  TYPE_5 = new GwtEvent$Type_0;\n}\n\nfunction $dispatch_1(handler){\n  --handler.this$0.asyncCallsPlaced;\n  handler.this$0.asyncCallsPlaced == 0 && ($wnd.$('#loadingBar').hide() , undefined);\n}\n\nfunction AsyncCallFinishedEvent_0(){\n  $clinit_AsyncCallFinishedEvent();\n}\n\ndefineSeed(245, 53, {}, AsyncCallFinishedEvent_0);\n_.dispatch = function dispatch_5(handler){\n  $dispatch_1(dynamicCast(handler, Q$AsyncCallFinishedEventHandler));\n}\n;\n_.getAssociatedType = function getAssociatedType_6(){\n  return TYPE_5;\n}\n;\nvar TYPE_5;\nfunction $clinit_AsyncCallStartedEvent(){\n  $clinit_AsyncCallStartedEvent = nullMethod;\n  TYPE_6 = new GwtEvent$Type_0;\n}\n\nfunction $dispatch_2(handler){\n  handler.this$0.asyncCallsPlaced == 0 && ($wnd.$('#loadingBar').show() , undefined);\n  ++handler.this$0.asyncCallsPlaced;\n}\n\nfunction AsyncCallStartedEvent_0(){\n  $clinit_AsyncCallStartedEvent();\n}\n\ndefineSeed(246, 53, {}, AsyncCallStartedEvent_0);\n_.dispatch = function dispatch_6(handler){\n  $dispatch_2(dynamicCast(handler, Q$AsyncCallStartedEventHandler));\n}\n;\n_.getAssociatedType = function getAssociatedType_7(){\n  return TYPE_6;\n}\n;\nvar TYPE_6;\nfunction $clinit_DropboxConnectedEvent(){\n  $clinit_DropboxConnectedEvent = nullMethod;\n  TYPE_7 = new GwtEvent$Type_0;\n}\n\nfunction $dispatch_3(this$static, handler){\n  $onDropboxConnected(handler, this$static.dropboxWrapper);\n}\n\nfunction DropboxConnectedEvent_0(dropboxWrapper){\n  $clinit_DropboxConnectedEvent();\n  this.dropboxWrapper = dropboxWrapper;\n}\n\ndefineSeed(247, 53, {}, DropboxConnectedEvent_0);\n_.dispatch = function dispatch_7(handler){\n  $dispatch_3(this, dynamicCast(handler, Q$DropboxConnectedEventHandler));\n}\n;\n_.getAssociatedType = function getAssociatedType_8(){\n  return TYPE_7;\n}\n;\nvar TYPE_7;\nfunction HandlerManagerProvider_0(){\n}\n\ndefineSeed(248, 1, {}, HandlerManagerProvider_0);\nfunction $clinit_InjectorHolder(){\n  $clinit_InjectorHolder = nullMethod;\n  instance_0 = new de_voot_encfsanywhere_client_gin_InjectorImpl_0;\n}\n\nvar instance_0;\nfunction de_voot_encfsanywhere_client_gin_InjectorImpl_0(){\n  this.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector = new de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_0;\n}\n\ndefineSeed(250, 1, {}, de_voot_encfsanywhere_client_gin_InjectorImpl_0);\nfunction $getFragment_de_voot_encfsanywhere_client_controller(this$static){\n  !this$static.fieldFragment_de$voot$encfsanywhere$client$controller && (this$static.fieldFragment_de$voot$encfsanywhere$client$controller = new de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_fragment_0);\n  return this$static.fieldFragment_de$voot$encfsanywhere$client$controller;\n}\n\nfunction $getFragment_de_voot_encfsanywhere_client_gin(this$static){\n  !this$static.fieldFragment_de$voot$encfsanywhere$client$gin && (this$static.fieldFragment_de$voot$encfsanywhere$client$gin = new de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_fragment_2);\n  return this$static.fieldFragment_de$voot$encfsanywhere$client$gin;\n}\n\nfunction $getFragment_de_voot_encfsanywhere_client_presenter(this$static){\n  !this$static.fieldFragment_de$voot$encfsanywhere$client$presenter && (this$static.fieldFragment_de$voot$encfsanywhere$client$presenter = new de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_fragment_4(this$static));\n  return this$static.fieldFragment_de$voot$encfsanywhere$client$presenter;\n}\n\nfunction $getFragment_de_voot_encfsanywhere_client_view(this$static){\n  !this$static.fieldFragment_de$voot$encfsanywhere$client$view && (this$static.fieldFragment_de$voot$encfsanywhere$client$view = new de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_fragment_6);\n  return this$static.fieldFragment_de$voot$encfsanywhere$client$view;\n}\n\nfunction $getFragment_de_voot_encfsanywhere_client_widget(this$static){\n  !this$static.fieldFragment_de$voot$encfsanywhere$client$widget && (this$static.fieldFragment_de$voot$encfsanywhere$client$widget = new de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_fragment_8);\n  return this$static.fieldFragment_de$voot$encfsanywhere$client$widget;\n}\n\nfunction de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_0(){\n}\n\ndefineSeed(251, 1, {}, de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_0);\n_.fieldFragment_de$voot$encfsanywhere$client$controller = null;\n_.fieldFragment_de$voot$encfsanywhere$client$gin = null;\n_.fieldFragment_de$voot$encfsanywhere$client$presenter = null;\n_.fieldFragment_de$voot$encfsanywhere$client$view = null;\n_.fieldFragment_de$voot$encfsanywhere$client$widget = null;\nfunction $get_Key$type$com$google$gwt$event$shared$HandlerManager$_annotation$$none$$(this$static){\n  var result;\n  if (!this$static.singleton_Key$type$com$google$gwt$event$shared$HandlerManager$_annotation$$none$$) {\n    result = (new HandlerManagerProvider_0 , new HandlerManager_0(null));\n    this$static.singleton_Key$type$com$google$gwt$event$shared$HandlerManager$_annotation$$none$$ = result;\n  }\n  return this$static.singleton_Key$type$com$google$gwt$event$shared$HandlerManager$_annotation$$none$$;\n}\n\nfunction de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_fragment_2(){\n}\n\ndefineSeed(252, 1, {}, de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_fragment_2);\n_.singleton_Key$type$com$google$gwt$event$shared$HandlerManager$_annotation$$none$$ = null;\nfunction AlertEventLogHandler_0(){\n  this.eventBus = ($clinit_InjectorHolder() , $get_Key$type$com$google$gwt$event$shared$HandlerManager$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_gin(instance_0.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector)));\n}\n\ndefineSeed(253, 96, makeCastMap([Q$Handler]), AlertEventLogHandler_0);\n_.publish = function publish_5(record){\n  var text_0;\n  if (($getLevel(this) , -2147483648) <= record.level.intValue() && record.level.intValue() > ($clinit_Level() , 800)) {\n    text_0 = record.level.getName() + ': ' + record.msg + '\\n\\nSee console for greater detail.';\n    $fireEvent(this.eventBus, new AlertEvent_0('Error', text_0));\n  }\n}\n;\nfunction $setProgress(this$static, progress){\n  this$static.progress = progress;\n}\n\nfunction DownloadStatus_0(path){\n  this.path_0 = path;\n  this.progress = 0;\n}\n\ndefineSeed(254, 1, makeCastMap([Q$DownloadStatus]), DownloadStatus_0);\n_.progress = 0;\nfunction $go(this$static, container){\n  this$static.container = container;\n  $setPresenter(this$static.widget, this$static);\n}\n\nfunction $onHideButtonClicked(this$static){\n  $remove_0(this$static.container, this$static.widget.asWidget());\n}\n\nfunction AlertPresenter_0(){\n  this.widget = ($clinit_InjectorHolder() , $get_Key$type$de$voot$encfsanywhere$client$presenter$AlertPresenter$AlertWidget$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_presenter(instance_0.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector)));\n}\n\ndefineSeed(255, 1, {}, AlertPresenter_0);\nfunction $go_0(this$static, container){\n  container.clear_0();\n  container.add_0(this$static.view_0.asWidget());\n}\n\nfunction $listFiles(this$static, files, currentPath, content_0){\n  var filenames, i, isDirectory;\n  this$static.files = files;\n  content_0 = $sort(content_0);\n  this$static.shownFiles = content_0;\n  filenames = initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$String, content_0.length, 0);\n  isDirectory = initDim(_3Ljava_lang_Boolean_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$Boolean, content_0.length, 0);\n  for (i = 0; i < content_0.length; i++) {\n    filenames[i] = $getName(content_0[i]);\n    isDirectory[i] = ($clinit_Boolean() , $isDirectory(files, content_0[i])?TRUE:FALSE);\n  }\n  $showList(this$static.view_0, currentPath.path_0, filenames, isDirectory);\n}\n\nfunction $onPasswordPromptFinished(this$static, password){\n  $passwordPromptFinished($get_Key$type$de$voot$encfsanywhere$client$controller$ListController$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_controller(this$static.injector.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector)), password);\n}\n\nfunction $onRowClicked(this$static, row){\n  $isDirectory(this$static.files, this$static.shownFiles[row])?$showPath(($get_Key$type$de$voot$encfsanywhere$client$controller$ListController$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_controller(this$static.injector.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector)) , this$static.shownFiles[row].path_0)):$downloadPath($get_Key$type$de$voot$encfsanywhere$client$controller$ListController$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_controller(this$static.injector.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector)), this$static.shownFiles[row]);\n}\n\nfunction $showDownloads(this$static, status_0){\n  var format, i, paths, progress, s;\n  paths = initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$String, status_0.size_0, 0);\n  progress = initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$String, status_0.size_0, 0);\n  for (i = 0; i < paths.length; i++) {\n    s = dynamicCast($get_2(status_0, i), Q$DownloadStatus);\n    paths[i] = s.path_0;\n    format = ($clinit_NumberFormat() , !cachedPercentFormat && (cachedPercentFormat = new NumberFormat_1(['USD', 'US$', 2, 'US$', '$'])) , $clinit_NumberFormat() , cachedPercentFormat);\n    progress[i] = $format(format, s.progress);\n  }\n  $showDownloads_0(this$static.view_0, paths, progress);\n}\n\nfunction $sort(path){\n  var list, p, p$index, p$max;\n  list = new ArrayList_0;\n  for (p$index = 0 , p$max = path.length; p$index < p$max; ++p$index) {\n    p = path[p$index];\n    setCheck(list.array, list.size_0++, p);\n  }\n  sort_0(list, new ListPresenter$1_0);\n  return dynamicCast($toArray(list, initDim(_3Lde_voot_encfsanywhere_fs_shared_Path_2_classLit, makeCastMap([Q$Path_$1, Q$Serializable, Q$Object_$1]), Q$Path, 0, 0)), Q$Path_$1);\n}\n\nfunction ListPresenter_0(){\n  this.injector = ($clinit_InjectorHolder() , $clinit_InjectorHolder() , instance_0);\n  this.view_0 = $get_Key$type$de$voot$encfsanywhere$client$presenter$ListPresenter$ListView$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_presenter(this.injector.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector));\n  this.view_0.presenter = this;\n}\n\ndefineSeed(256, 1, {}, ListPresenter_0);\nfunction $compare(o1, o2){\n  var name1, name2;\n  name1 = $substring(o1.path_0, o1.path_0.lastIndexOf('/') + 1);\n  name2 = $substring(o2.path_0, o2.path_0.lastIndexOf('/') + 1);\n  return compareTo_2(name1, name2);\n}\n\nfunction ListPresenter$1_0(){\n}\n\ndefineSeed(257, 1, {}, ListPresenter$1_0);\n_.compare = function compare(o1, o2){\n  return $compare(dynamicCast(o1, Q$Path), dynamicCast(o2, Q$Path));\n}\n;\nfunction $go_1(this$static, container){\n  container.clear_0();\n  container.add_0(this$static.view_0.asWidget());\n}\n\nfunction $onDropboxConnectButtonClicked(this$static){\n  var rememberUser;\n  rememberUser = $getValue_0(this$static.view_0.stayConnectedCheckbox);\n  $getValue_0(this$static.view_0.provideAPIKey).value_0?$connectToDropbox($get_Key$type$de$voot$encfsanywhere$client$controller$StorageConnectController$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_controller(this$static.injector.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector)), rememberUser.value_0, $getValue_1(this$static.view_0.dropboxApiKey)):$connectToDropbox($get_Key$type$de$voot$encfsanywhere$client$controller$StorageConnectController$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_controller(this$static.injector.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector)), rememberUser.value_0, null);\n}\n\nfunction StorageConnectPresenter_0(){\n  this.injector = ($clinit_InjectorHolder() , $clinit_InjectorHolder() , instance_0);\n  this.view_0 = $get_Key$type$de$voot$encfsanywhere$client$presenter$StorageConnectPresenter$StorageConnectView$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_presenter(this.injector.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector));\n  this.view_0.presenter = this;\n}\n\ndefineSeed(258, 1, {}, StorageConnectPresenter_0);\nfunction $get_Key$type$de$voot$encfsanywhere$client$presenter$AlertPresenter$AlertWidget$_annotation$$none$$(this$static){\n  var result;\n  result = $get_Key$type$de$voot$encfsanywhere$client$widget$AlertWidgetImpl$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_widget(this$static.injector));\n  return result;\n}\n\nfunction $get_Key$type$de$voot$encfsanywhere$client$presenter$AlertPresenter$_annotation$$none$$(){\n  var created;\n  created = new AlertPresenter_0;\n  return created;\n}\n\nfunction $get_Key$type$de$voot$encfsanywhere$client$presenter$ListPresenter$ListView$_annotation$$none$$(this$static){\n  var result;\n  if (!this$static.singleton_Key$type$de$voot$encfsanywhere$client$presenter$ListPresenter$ListView$_annotation$$none$$) {\n    result = $get_Key$type$de$voot$encfsanywhere$client$view$ListViewImpl$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_view(this$static.injector));\n    this$static.singleton_Key$type$de$voot$encfsanywhere$client$presenter$ListPresenter$ListView$_annotation$$none$$ = result;\n  }\n  return this$static.singleton_Key$type$de$voot$encfsanywhere$client$presenter$ListPresenter$ListView$_annotation$$none$$;\n}\n\nfunction $get_Key$type$de$voot$encfsanywhere$client$presenter$ListPresenter$_annotation$$none$$(this$static){\n  var created;\n  if (!this$static.singleton_Key$type$de$voot$encfsanywhere$client$presenter$ListPresenter$_annotation$$none$$) {\n    created = new ListPresenter_0;\n    this$static.singleton_Key$type$de$voot$encfsanywhere$client$presenter$ListPresenter$_annotation$$none$$ = created;\n  }\n  return this$static.singleton_Key$type$de$voot$encfsanywhere$client$presenter$ListPresenter$_annotation$$none$$;\n}\n\nfunction $get_Key$type$de$voot$encfsanywhere$client$presenter$StorageConnectPresenter$StorageConnectView$_annotation$$none$$(this$static){\n  var result;\n  if (!this$static.singleton_Key$type$de$voot$encfsanywhere$client$presenter$StorageConnectPresenter$StorageConnectView$_annotation$$none$$) {\n    result = $get_Key$type$de$voot$encfsanywhere$client$view$StorageConnectViewImpl$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_view(this$static.injector));\n    this$static.singleton_Key$type$de$voot$encfsanywhere$client$presenter$StorageConnectPresenter$StorageConnectView$_annotation$$none$$ = result;\n  }\n  return this$static.singleton_Key$type$de$voot$encfsanywhere$client$presenter$StorageConnectPresenter$StorageConnectView$_annotation$$none$$;\n}\n\nfunction $get_Key$type$de$voot$encfsanywhere$client$presenter$StorageConnectPresenter$_annotation$$none$$(this$static){\n  var created;\n  if (!this$static.singleton_Key$type$de$voot$encfsanywhere$client$presenter$StorageConnectPresenter$_annotation$$none$$) {\n    created = new StorageConnectPresenter_0;\n    this$static.singleton_Key$type$de$voot$encfsanywhere$client$presenter$StorageConnectPresenter$_annotation$$none$$ = created;\n  }\n  return this$static.singleton_Key$type$de$voot$encfsanywhere$client$presenter$StorageConnectPresenter$_annotation$$none$$;\n}\n\nfunction de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_fragment_4(injector){\n  this.injector = injector;\n}\n\ndefineSeed(259, 1, {}, de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_fragment_4);\n_.singleton_Key$type$de$voot$encfsanywhere$client$presenter$ListPresenter$ListView$_annotation$$none$$ = null;\n_.singleton_Key$type$de$voot$encfsanywhere$client$presenter$ListPresenter$_annotation$$none$$ = null;\n_.singleton_Key$type$de$voot$encfsanywhere$client$presenter$StorageConnectPresenter$StorageConnectView$_annotation$$none$$ = null;\n_.singleton_Key$type$de$voot$encfsanywhere$client$presenter$StorageConnectPresenter$_annotation$$none$$ = null;\nfunction wrap_1(callback){\n  var result;\n  result = new Async$1_0(callback);\n  $fireEvent(($clinit_InjectorHolder() , $get_Key$type$com$google$gwt$event$shared$HandlerManager$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_gin(instance_0.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector))), new AsyncCallStartedEvent_0);\n  return result;\n}\n\nfunction $onFailure_6(this$static, reason){\n  $fireEvent(($clinit_InjectorHolder() , $get_Key$type$com$google$gwt$event$shared$HandlerManager$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_gin(instance_0.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector))), new AsyncCallFinishedEvent_0);\n  this$static.val$callback.onFailure(reason);\n}\n\nfunction $onSuccess_5(this$static, result){\n  $fireEvent(($clinit_InjectorHolder() , $get_Key$type$com$google$gwt$event$shared$HandlerManager$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_gin(instance_0.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector))), new AsyncCallFinishedEvent_0);\n  this$static.val$callback.onSuccess(result);\n}\n\nfunction Async$1_0(val$callback){\n  this.val$callback = val$callback;\n}\n\ndefineSeed(261, 1, {}, Async$1_0);\n_.onFailure = function onFailure_5(reason){\n  $onFailure_6(this, reason);\n}\n;\n_.onSuccess = function onSuccess_5(result){\n  $onSuccess_5(this, result);\n}\n;\nfunction download(inputStream, filename){\n  var bufferSize = 1024 * 1024;\n  var buffers = [];\n  var finished = false;\n  while (!finished) {\n    var buffer = new ArrayBuffer(bufferSize);\n    var view = new Uint8Array(buffer);\n    var bytesRead = inputStream.read_0(view);\n    if (bytesRead == -1) {\n      finished = true;\n    }\n     else if (bytesRead != view.byteLength) {\n      view = view.subarray(0, bytesRead);\n      finished = true;\n    }\n    bytesRead > -1 && buffers.push(view);\n  }\n  var blob = new Blob(buffers);\n  $wnd.saveAs(blob, filename);\n}\n\nfunction $appendToBreadcrumb(this$static, text_0, history_0, isLast){\n  var divider, li;\n  li = ($clinit_DOM() , $doc.createElement('li'));\n  $appendChild(this$static.breadcrumb, li);\n  if (isLast) {\n    $setAttribute(li, 'class', 'active');\n    $setInnerText(li, text_0);\n  }\n   else {\n    $appendChild(li, $getElement(new Hyperlink_1(text_0, history_0)));\n    divider = $doc.createElement('span');\n    $setAttribute(divider, 'class', 'divider');\n    $setInnerText(divider, '/');\n    li.appendChild(divider);\n  }\n}\n\nfunction $cancelClicked(this$static){\n  hidePasswordPrompt();\n  $onPasswordPromptFinished(this$static.presenter, null);\n}\n\nfunction $fileTableClicked(this$static, clickEvent){\n  var cell;\n  cell = $getCellForEvent(this$static.files, clickEvent);\n  !!cell && $onRowClicked(this$static.presenter, cell.rowIndex);\n}\n\nfunction $loginClicked(this$static){\n  hidePasswordPrompt();\n  $onPasswordPromptFinished(this$static.presenter, $getValue_1(this$static.password));\n}\n\nfunction $promptForPassword(this$static){\n  $setValue_0(this$static.password);\n  $wnd.$('#passwordEntryPrompt').show();\n  $setFocus(this$static.password);\n}\n\nfunction $showDownloads_0(this$static, paths, progress){\n  var filename, html, i, icon;\n  while ($getDOMRowCount(this$static.downloads) > 0) {\n    $removeRow(this$static.downloads);\n  }\n  for (i = 0; i < paths.length; i++) {\n    filename = paths[i];\n    icon = ($clinit_DOM() , $doc.createElement('i'));\n    $setAttribute(icon, 'class', 'icon-file');\n    html = new InlineHTML_0;\n    $appendChild(html.element, icon);\n    $setWidget(this$static.downloads, i, html);\n    $setText(this$static.downloads, i, 1, filename);\n    $setText(this$static.downloads, i, 2, progress[i]);\n  }\n}\n\nfunction $showList(this$static, path, content_0, isDirectory){\n  $updateBreadcrumb(this$static, path);\n  $updateFiles(this$static, content_0, isDirectory);\n}\n\nfunction $updateBreadcrumb(this$static, path){\n  var history_0, i, isLast, part, parts;\n  while (this$static.breadcrumb.hasChildNodes()) {\n    $removeChild(this$static.breadcrumb, this$static.breadcrumb.lastChild);\n  }\n  history_0 = 'files';\n  parts = $split(path, '/', 0);\n  $appendToBreadcrumb(this$static, 'root', history_0 + '/', false);\n  for (i = 0; i < parts.length; i++) {\n    part = parts[i];\n    if (!part.length) {\n      continue;\n    }\n    history_0 = history_0 + '/' + part;\n    isLast = i + 1 == parts.length;\n    $appendToBreadcrumb(this$static, part, history_0, isLast);\n  }\n}\n\nfunction $updateFiles(this$static, content_0, isDirectory){\n  var filename, html, i, icon;\n  while ($getDOMRowCount(this$static.files) > 0) {\n    $removeRow(this$static.files);\n  }\n  for (i = 0; i < content_0.length; i++) {\n    filename = content_0[i];\n    icon = ($clinit_DOM() , $doc.createElement('i'));\n    isDirectory[i].value_0?$setAttribute(icon, 'class', 'icon-folder-open'):$setAttribute(icon, 'class', 'icon-file');\n    html = new InlineHTML_0;\n    $appendChild(html.element, icon);\n    $setWidget(this$static.files, i, html);\n    $setText(this$static.files, i, 1, filename);\n  }\n}\n\nfunction ListViewImpl_0(){\n  $initWidget(this, $build_f_HTMLPanel1(new ListViewImpl_ListViewImplUiBinderImpl$Widgets_0(this)));\n  $addDomHandler(this.password, new ListViewImpl$1_0(this), ($clinit_KeyDownEvent() , $clinit_KeyDownEvent() , TYPE_0));\n  $addDomHandler(this.loginButton, new ListViewImpl$2_0(this), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE));\n  $addDomHandler(this.cancelButton, new ListViewImpl$3_0(this), TYPE);\n  $addDomHandler(this.disconnectButton, new ListViewImpl$4_0(this), TYPE);\n  $setAttribute($getElement(this.password), 'placeholder', 'Your EncFS Password');\n}\n\ndefineSeed(263, 167, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), ListViewImpl_0);\nfunction ListViewImpl$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(264, 1, makeCastMap([Q$KeyDownHandler, Q$EventHandler]), ListViewImpl$1_0);\nfunction ListViewImpl$2_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(265, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), ListViewImpl$2_0);\n_.onClick = function onClick_0(event_0){\n  $loginClicked(this.this$0);\n}\n;\nfunction ListViewImpl$3_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(266, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), ListViewImpl$3_0);\n_.onClick = function onClick_1(event_0){\n  $cancelClicked(this.this$0);\n}\n;\nfunction ListViewImpl$4_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(267, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), ListViewImpl$4_0);\n_.onClick = function onClick_2(event_0){\n  $disconnect($get_Key$type$de$voot$encfsanywhere$client$controller$ListController$_annotation$$none$$($getFragment_de_voot_encfsanywhere_client_controller(this.this$0.presenter.injector.fieldde_voot_encfsanywhere_client_gin_Injector_InjectorGinjector)));\n}\n;\nfunction $build_f_HTMLPanel1(this$static){\n  var attachRecord0, f_HTMLPanel1, breadcrumb, password, loginButton, cancelButton, disconnectButton, files, downloads;\n  f_HTMLPanel1 = new HTMLPanel_0($html1(this$static.domId0, this$static.domId1, this$static.domId2, this$static.domId3, this$static.domId4, this$static.domId5, this$static.domId6).html);\n  attachRecord0 = attachToDom(($clinit_DOM() , f_HTMLPanel1.element));\n  $get(this$static.domId0Element);\n  $get(this$static.domId1Element);\n  $get(this$static.domId2Element);\n  $get(this$static.domId3Element);\n  breadcrumb = $get(new LazyDomElement_0(this$static.domId4));\n  this$static.owner.breadcrumb = breadcrumb;\n  $get(this$static.domId5Element);\n  $get(this$static.domId6Element);\n  attachRecord0.origParent?$insertBefore(attachRecord0.origParent, attachRecord0.element, attachRecord0.origSibling):orphan(attachRecord0.element);\n  $addAndReplaceElement_0(f_HTMLPanel1, (password = new PasswordTextBox_0 , $setClassName(password.element, 'login-field unlockPassword') , this$static.owner.password = password , password), $get(this$static.domId0Element));\n  $addAndReplaceElement_0(f_HTMLPanel1, (loginButton = new Button_0 , $setClassName(loginButton.element, 'btn btn-primary btn-block btn-large') , $setInnerText(loginButton.element, 'Login') , this$static.owner.loginButton = loginButton , loginButton), $get(this$static.domId1Element));\n  $addAndReplaceElement_0(f_HTMLPanel1, (cancelButton = new Button_0 , $setClassName(cancelButton.element, 'btn  btn-block btn-large btn-danger') , $setInnerText(cancelButton.element, 'Cancel') , this$static.owner.cancelButton = cancelButton , cancelButton), $get(this$static.domId2Element));\n  $addAndReplaceElement_0(f_HTMLPanel1, (disconnectButton = new Button_0 , $setClassName(disconnectButton.element, 'btn btn-danger') , $setInnerText(disconnectButton.element, 'Disconnect') , this$static.owner.disconnectButton = disconnectButton , disconnectButton), $get(this$static.domId3Element));\n  $addAndReplaceElement_0(f_HTMLPanel1, (files = new FlexTable_0 , $setClassName(files.element, 'table table-hover table-condensed cursor-pointer') , $addDomHandler(files, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1, ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE)) , this$static.owner.files = files , files), $get(this$static.domId5Element));\n  $addAndReplaceElement_0(f_HTMLPanel1, (downloads = new FlexTable_0 , $setClassName(downloads.element, 'table table-condensed') , this$static.owner.downloads = downloads , downloads), $get(this$static.domId6Element));\n  return f_HTMLPanel1;\n}\n\nfunction ListViewImpl_ListViewImplUiBinderImpl$Widgets_0(owner){\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1 = new ListViewImpl_ListViewImplUiBinderImpl$Widgets$1_0(this);\n  this.owner = owner;\n  this.domId0 = $createUniqueId($doc);\n  this.domId1 = $createUniqueId($doc);\n  this.domId2 = $createUniqueId($doc);\n  this.domId3 = $createUniqueId($doc);\n  this.domId4 = $createUniqueId($doc);\n  this.domId5 = $createUniqueId($doc);\n  this.domId6 = $createUniqueId($doc);\n  this.domId0Element = new LazyDomElement_0(this.domId0);\n  this.domId1Element = new LazyDomElement_0(this.domId1);\n  this.domId2Element = new LazyDomElement_0(this.domId2);\n  this.domId3Element = new LazyDomElement_0(this.domId3);\n  this.domId5Element = new LazyDomElement_0(this.domId5);\n  this.domId6Element = new LazyDomElement_0(this.domId6);\n}\n\ndefineSeed(268, 1, {}, ListViewImpl_ListViewImplUiBinderImpl$Widgets_0);\nfunction ListViewImpl_ListViewImplUiBinderImpl$Widgets$1_0(this$1){\n  this.this$1 = this$1;\n}\n\ndefineSeed(269, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), ListViewImpl_ListViewImplUiBinderImpl$Widgets$1_0);\n_.onClick = function onClick_3(event_0){\n  $fileTableClicked(this.this$1.owner, event_0);\n}\n;\n",
"function $html1(arg0, arg1, arg2, arg3, arg4, arg5, arg6){\n  var sb;\n  sb = new StringBuilder_0;\n  $append_0(sb.impl, \"<div class='overlay' id='passwordEntryPrompt'> <div class='container'> <div class='row' style='margin-top: 200px;'> <div class='offset2 span2'> <div class='flatui-icon'> <img src='EncfsAnywhere/images/Pensils@2x.png'> <\\/div> <\\/div> <div class='span4'> <div class='login-form'> <div class='control-group'> <span id='\");\n  $append_3(sb, htmlEscape(arg0));\n  $append_0(sb.impl, \"'><\\/span> <\\/div> <div class='control-group'> <span id='\");\n  $append_3(sb, htmlEscape(arg1));\n  $append_0(sb.impl, \"'><\\/span> <span id='\");\n  $append_3(sb, htmlEscape(arg2));\n  $append_0(sb.impl, \"'><\\/span> <\\/div> <small>Lost your Password? Well, that's a problem.<\\/small> <\\/div> <\\/div> <\\/div> <\\/div> <\\/div> <div class='row'> <div class='offset10 span2' style='margin-bottom: 20px; text-align: right;'> <span id='\");\n  $append_3(sb, htmlEscape(arg3));\n  $append_0(sb.impl, \"'><\\/span> <\\/div> <\\/div> <div class='row'> <div class='span12'> <ul class='breadcrumb' id='\");\n  $append_3(sb, htmlEscape(arg4));\n  $append_0(sb.impl, \"'><\\/ul> <\\/div> <\\/div> <div class='row'> <div class='span12'> <span id='\");\n  $append_3(sb, htmlEscape(arg5));\n  $append_0(sb.impl, \"'><\\/span> <\\/div> <\\/div>  <hr>  <h6>Downloads<\\/h6> <div class='row'> <div class='span12'> <span id='\");\n  $append_3(sb, htmlEscape(arg6));\n  $append_0(sb.impl, \"'><\\/span> <\\/div> <\\/div>\");\n  return new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_0(sb.impl.string);\n}\n\nfunction StorageConnectViewImpl_0(){\n  $initWidget(this, $build_f_HTMLPanel1_0(new StorageConnectViewImpl_StorageConnectViewUiBinderImpl$Widgets_0(this)));\n  doInitCheckboxOrRadio($getElement(this.provideAPIKey));\n  doInitCheckboxOrRadio($getElement(this.stayConnectedCheckbox));\n  $addValueChangeHandler_0(this.provideAPIKey, new StorageConnectViewImpl$1_0(this));\n}\n\ndefineSeed(271, 167, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), StorageConnectViewImpl_0);\nfunction StorageConnectViewImpl$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(272, 1, makeCastMap([Q$ValueChangeHandler, Q$EventHandler]), StorageConnectViewImpl$1_0);\n_.onValueChange = function onValueChange_4(event_0){\n  $getValue(this.this$0.provideAPIKey).value_0?($wnd.$('#ownDropboxKeyInstructions').slideDown() , undefined):($wnd.$('#ownDropboxKeyInstructions').slideUp() , undefined);\n}\n;\nfunction $build_f_HTMLPanel1_0(this$static){\n  var attachRecord1, f_HTMLPanel1, stayConnectedCheckbox, provideAPIKey, dropboxApiKey, connectDropboxButton, sb, sb_0;\n  f_HTMLPanel1 = new HTMLPanel_0($html3(this$static.domId0, this$static.domId1, this$static.domId2, this$static.domId3).html);\n  attachRecord1 = attachToDom(($clinit_DOM() , f_HTMLPanel1.element));\n  $get(this$static.domId0Element);\n  $get(this$static.domId1Element);\n  $get(this$static.domId2Element);\n  $get(this$static.domId3Element);\n  attachRecord1.origParent?$insertBefore(attachRecord1.origParent, attachRecord1.element, attachRecord1.origSibling):orphan(attachRecord1.element);\n  $addAndReplaceElement(f_HTMLPanel1, (stayConnectedCheckbox = new CheckBox_0 , $setHTML_0(stayConnectedCheckbox, (sb = new StringBuilder_0 , $append_0(sb.impl, \"Keep browser connected with Dropbox <small style='display: block'>Saves the OAuth token in the browser's local storage.<\\/small>\") , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_0(sb.impl.string)).html) , this$static.owner.stayConnectedCheckbox = stayConnectedCheckbox , stayConnectedCheckbox), $get(this$static.domId0Element));\n  $addAndReplaceElement(f_HTMLPanel1, (provideAPIKey = new CheckBox_0 , $setHTML_0(provideAPIKey, (sb_0 = new StringBuilder_0 , $append_0(sb_0.impl, \"Self host EncfsAnywhere and/or use own Dropbox API key <small style='display: block'>The API key is linked to the location EncfsAnyhwere is hosted - if you host it yourself, you need to provide your own API Key.<\\/small>\") , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_0(sb_0.impl.string)).html) , this$static.owner.provideAPIKey = provideAPIKey , provideAPIKey), $get(this$static.domId1Element));\n  $addAndReplaceElement(f_HTMLPanel1, (dropboxApiKey = new TextBox_0 , $setClassName(dropboxApiKey.element, 'input-block-level') , this$static.owner.dropboxApiKey = dropboxApiKey , dropboxApiKey), $get(this$static.domId2Element));\n  $addAndReplaceElement(f_HTMLPanel1, (connectDropboxButton = new Button_0 , $setClassName(connectDropboxButton.element, 'btn btn-primary btn-large btn-block') , $setInnerText(connectDropboxButton.element, 'Connect with Dropbox') , $addDomHandler(connectDropboxButton, this$static.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1, ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE)) , connectDropboxButton), $get(this$static.domId3Element));\n  return f_HTMLPanel1;\n}\n\nfunction StorageConnectViewImpl_StorageConnectViewUiBinderImpl$Widgets_0(owner){\n  var style;\n  this.handlerMethodWithNameVeryUnlikelyToCollideWithUserFieldNames1 = new StorageConnectViewImpl_StorageConnectViewUiBinderImpl$Widgets$1_0(this);\n  this.owner = owner;\n  style = (new StorageConnectViewImpl_StorageConnectViewUiBinderImpl_GenBundle_default_InlineClientBundleGenerator_0 , $clinit_StorageConnectViewImpl_StorageConnectViewUiBinderImpl_GenBundle_default_InlineClientBundleGenerator$styleInitializer() , style_0);\n  $ensureInjected(style);\n  this.domId0 = $createUniqueId($doc);\n  this.domId1 = $createUniqueId($doc);\n  this.domId2 = $createUniqueId($doc);\n  this.domId3 = $createUniqueId($doc);\n  this.domId0Element = new LazyDomElement_0(this.domId0);\n  this.domId1Element = new LazyDomElement_0(this.domId1);\n  this.domId2Element = new LazyDomElement_0(this.domId2);\n  this.domId3Element = new LazyDomElement_0(this.domId3);\n}\n\ndefineSeed(273, 1, {}, StorageConnectViewImpl_StorageConnectViewUiBinderImpl$Widgets_0);\nfunction StorageConnectViewImpl_StorageConnectViewUiBinderImpl$Widgets$1_0(this$1){\n  this.this$1 = this$1;\n}\n\ndefineSeed(274, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), StorageConnectViewImpl_StorageConnectViewUiBinderImpl$Widgets$1_0);\n_.onClick = function onClick_4(event_0){\n  $onDropboxConnectButtonClicked(this.this$1.owner.presenter);\n}\n;\nfunction StorageConnectViewImpl_StorageConnectViewUiBinderImpl_GenBundle_default_InlineClientBundleGenerator_0(){\n}\n\ndefineSeed(275, 1, {}, StorageConnectViewImpl_StorageConnectViewUiBinderImpl_GenBundle_default_InlineClientBundleGenerator_0);\nvar style_0;\nfunction $ensureInjected(this$static){\n  if (!this$static.injected) {\n    this$static.injected = true;\n    $clinit_StyleInjector();\n    $push(toInject, '.GDIUBFVDEI{font-weight:bold;}');\n    schedule();\n    return true;\n  }\n  return false;\n}\n\nfunction StorageConnectViewImpl_StorageConnectViewUiBinderImpl_GenBundle_default_InlineClientBundleGenerator$1_0(){\n}\n\ndefineSeed(276, 1, {}, StorageConnectViewImpl_StorageConnectViewUiBinderImpl_GenBundle_default_InlineClientBundleGenerator$1_0);\n_.injected = false;\nfunction $clinit_StorageConnectViewImpl_StorageConnectViewUiBinderImpl_GenBundle_default_InlineClientBundleGenerator$styleInitializer(){\n  $clinit_StorageConnectViewImpl_StorageConnectViewUiBinderImpl_GenBundle_default_InlineClientBundleGenerator$styleInitializer = nullMethod;\n  style_0 = new StorageConnectViewImpl_StorageConnectViewUiBinderImpl_GenBundle_default_InlineClientBundleGenerator$1_0;\n}\n\nfunction $html3(arg0, arg1, arg2, arg3){\n  var sb;\n  sb = new StringBuilder_0;\n  $append_0(sb.impl, \"<h3 class='mbl pbl'>Select storage provider<\\/h3> <div class='row'> <div class='span3'> <h4 class='dropbox-logo'>Dropbox<\\/h4> <\\/div> <div class='span6'> <div class='login-form'> <span id='\");\n  $append_3(sb, htmlEscape(arg0));\n  $append_0(sb.impl, \"'><\\/span> <span id='\");\n  $append_3(sb, htmlEscape(arg1));\n  $append_0(sb.impl, '\\'><\\/span> <div id=\\'ownDropboxKeyInstructions\\' style=\\'margin-left: 32px; display: none\\'> <small>Go <a href=\\'https://www.dropbox.com/developers/apps\\'>here<\\/a> and take the following steps: <ol> <li>Create a new app<\\/li> <li>Choose \"Dropbox API app\"<\\/li> <li>Choose \"Files and datastores\"<\\/li> <li>Choose \"Yes\" or \"No\", depending if EncfsAnyhwere should have full Dropbox access or only app folder access<\\/li> <li>Enter any name you like<\\/li> <li>Add the URL you host EncfsAnywhere to the OAuth2 Redirect URIs (e.g. http://your.host/somewhere/EncfsAnywhere.html)<\\/li> <li>Enter the App key in the field below<\\/li> <\\/ol> <\\/small> <span id=\\'');\n  $append_3(sb, htmlEscape(arg2));\n  $append_0(sb.impl, \"'><\\/span> <\\/div> <span id='\");\n  $append_3(sb, htmlEscape(arg3));\n  $append_0(sb.impl, \"'><\\/span> <\\/div> <\\/div> <\\/div>\");\n  return new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_0(sb.impl.string);\n}\n\nfunction $get_Key$type$de$voot$encfsanywhere$client$view$ListViewImpl$_annotation$$none$$(){\n  var created;\n  created = new ListViewImpl_0;\n  return created;\n}\n\nfunction $get_Key$type$de$voot$encfsanywhere$client$view$StorageConnectViewImpl$_annotation$$none$$(){\n  var created;\n  created = new StorageConnectViewImpl_0;\n  return created;\n}\n\nfunction de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_fragment_6(){\n}\n\ndefineSeed(279, 1, {}, de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_fragment_6);\nfunction doInitCheckboxOrRadio(wrap){\n  wrap = $wnd.$(wrap);\n  var inp = wrap.children('input');\n  var lbl = wrap.children('label');\n  lbl.append(inp);\n  lbl.insertBefore(lbl.parent());\n  lbl.addClass('checkbox');\n  wrap.remove();\n  lbl.prepend(\"<span class='icon'><\\/span><span class='icon-to-fade'><\\/span>\");\n  lbl.click(function(){\n    $wnd.updateCheckboxRadioLabels();\n  }\n  );\n  $wnd.updateCheckboxRadioLabels();\n}\n\nfunction hideKeyDerivationOverlay(){\n  $wnd.$('#derivatingKeyOverlay').hide();\n}\n\nfunction hidePasswordPrompt(){\n  $wnd.$('#passwordEntryPrompt').hide();\n}\n\nfunction $setPresenter(this$static, presenter){\n  this$static.presenter = presenter;\n}\n\nfunction $show(this$static, caption, text_0){\n  $setInnerText(this$static.caption, caption);\n  $setHTML_1(this$static.text_0, (new SafeHtmlString_0($appendEscapedLines(new SafeHtmlBuilder_0, text_0).sb.impl.string)).html);\n}\n\nfunction AlertWidgetImpl_0(){\n  $initWidget(this, $build_f_HTMLPanel1_1(new AlertWidgetImpl_AlertWidgetImplUiBinderImpl$Widgets_0(this)));\n  $addDomHandler(this.closeButton, new AlertWidgetImpl$1_0(this), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE));\n}\n\ndefineSeed(282, 167, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), AlertWidgetImpl_0);\nfunction AlertWidgetImpl$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(283, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), AlertWidgetImpl$1_0);\n_.onClick = function onClick_5(event_0){\n  $onHideButtonClicked(this.this$0.presenter);\n}\n;\nfunction $build_f_HTMLPanel1_1(this$static){\n  var attachRecord2, f_HTMLPanel1, caption, closeButton, sb, text_0;\n  f_HTMLPanel1 = new HTMLPanel_0($html2(this$static.domId0, this$static.domId1, this$static.domId2).html);\n  attachRecord2 = attachToDom(($clinit_DOM() , f_HTMLPanel1.element));\n  $get(this$static.domId0Element);\n  caption = $get(new LazyDomElement_0(this$static.domId1));\n  this$static.owner.caption = caption;\n  $get(this$static.domId2Element);\n  attachRecord2.origParent?$insertBefore(attachRecord2.origParent, attachRecord2.element, attachRecord2.origSibling):orphan(attachRecord2.element);\n  $addAndReplaceElement(f_HTMLPanel1, (closeButton = new Button_0 , $setHTML(closeButton, (sb = new StringBuilder_0 , $append_0(sb.impl, '\\xD7') , new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_0(sb.impl.string)).html) , $setClassName(closeButton.element, 'close') , this$static.owner.closeButton = closeButton , closeButton), $get(this$static.domId0Element));\n  $addAndReplaceElement(f_HTMLPanel1, (text_0 = new HTML_0 , this$static.owner.text_0 = text_0 , text_0), $get(this$static.domId2Element));\n  return f_HTMLPanel1;\n}\n\nfunction AlertWidgetImpl_AlertWidgetImplUiBinderImpl$Widgets_0(owner){\n  this.owner = owner;\n  this.domId0 = $createUniqueId($doc);\n  this.domId1 = $createUniqueId($doc);\n  this.domId2 = $createUniqueId($doc);\n  this.domId0Element = new LazyDomElement_0(this.domId0);\n  this.domId2Element = new LazyDomElement_0(this.domId2);\n}\n\ndefineSeed(284, 1, {}, AlertWidgetImpl_AlertWidgetImplUiBinderImpl$Widgets_0);\nfunction $html2(arg0, arg1, arg2){\n  var sb;\n  sb = new StringBuilder_0;\n  $append_0(sb.impl, \"<div class='alert alert-block'> <span id='\");\n  $append_3(sb, htmlEscape(arg0));\n  $append_0(sb.impl, \"'><\\/span> <h4 id='\");\n  $append_3(sb, htmlEscape(arg1));\n  $append_0(sb.impl, \"'><\\/h4> <span id='\");\n  $append_3(sb, htmlEscape(arg2));\n  $append_0(sb.impl, \"'><\\/span> <\\/div>\");\n  return new OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_0(sb.impl.string);\n}\n\nfunction $get_Key$type$de$voot$encfsanywhere$client$widget$AlertWidgetImpl$_annotation$$none$$(){\n  var created;\n  created = new AlertWidgetImpl_0;\n  return created;\n}\n\nfunction de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_fragment_8(){\n}\n\ndefineSeed(286, 1, {}, de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_fragment_8);\nfunction $clinit_Files(){\n  $clinit_Files = nullMethod;\n  LOG_4 = ($clinit_Logger() , $getLoggerHelper('de.voot.encfsanywhere.fs.shared.Files'));\n}\n\nfunction $createCacheEntry(this$static, path, encFSFile){\n  var info;\n  $info_0(LOG_4, 'Creating cache entry for encrypted path <' + path + '>');\n  info = new Files$PathInfo_0;\n  info.isDirectory = encFSFile.plainFileInfo.directory;\n  info.path_0 = path;\n  $put_0(this$static.cache, path.path_0, info);\n  $put_0(this$static.encFSFileCache, path.path_0, encFSFile);\n}\n\nfunction $createCacheEntry_0(this$static, path, encFSFileInfo){\n  var info;\n  $info_0(LOG_4, 'Creating cache entry for unencrypted path <' + path + '>');\n  info = new Files$PathInfo_0;\n  info.isDirectory = encFSFileInfo.directory;\n  info.path_0 = path;\n  $put_0(this$static.cache, path.path_0, info);\n}\n\nfunction $decryptCachedPathname(this$static, path){\n  var entry, entry$iterator;\n  for (entry$iterator = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(this$static.encFSFileCache)).this$0); $hasNext(entry$iterator.iter);) {\n    entry = entry$iterator.last = dynamicCast($next_2(entry$iterator.iter), Q$Map$Entry);\n    if ($endsWith(path, $getPath(dynamicCast(entry.getValue(), Q$EncFSFile).cipherFileInfo))) {\n      return dynamicCast(entry.getKey(), Q$String);\n    }\n  }\n  return null;\n}\n\nfunction $disconnect_0(this$static){\n  var client;\n  $info_0(LOG_4, 'Disconnecting');\n  client = this$static.provider.dropboxWrapper.dropboxClient;\n  console.log('Erasing oauth tokens');\n  client.signOut({mustInvalidate:true});\n}\n\nfunction $getFileContent(this$static, path, callback){\n  var actualCallback, encFSFile, encfsCallback, encfsPath, volume;\n  $info_0(LOG_4, 'Loading file content for path <' + path + '>');\n  actualCallback = new Files$6_0(callback);\n  encfsCallback = new Files$7_0(actualCallback);\n  $isDirectory(this$static, path) && $onFailure_3(callback, new IOException_0('Path is a directory'));\n  encfsPath = $unlockedRootForPath(this$static, path.path_0);\n  if (encfsPath) {\n    encFSFile = dynamicCast($get_1(this$static.encFSFileCache, encfsPath.full), Q$EncFSFile);\n    if (encFSFile) {\n      $openInputStream_0(encFSFile.volume.fileProvider, $getPath(encFSFile.cipherFileInfo), new EncFSFile$3_0(encFSFile, encfsCallback));\n    }\n     else {\n      volume = $volumeForPath(this$static, encfsPath.root);\n      $getFile(volume, encfsPath.remaining, new EncFSVolume$6_0(encfsCallback));\n    }\n  }\n   else {\n    $openInputStream(this$static.provider, path.path_0, actualCallback);\n  }\n}\n\nfunction $getName(path){\n  var s;\n  s = path.path_0;\n  return $substring(s, s.lastIndexOf('/') + 1);\n}\n\nfunction $isDirectory(this$static, path){\n  var info;\n  info = dynamicCast($get_1(this$static.cache, path.path_0), Q$Files$PathInfo);\n  return info.isDirectory;\n}\n\nfunction $isEncFSRoot(this$static, path){\n  var info;\n  info = dynamicCast($get_1(this$static.cache, path.path_0), Q$Files$PathInfo);\n  return info.isEncFSRoot;\n}\n\nfunction $isEncFSRootUnlocked(this$static, path){\n  return $containsKey(this$static.encfsVolumes, path.path_0);\n}\n\nfunction $listFiles_0(this$static, path, callback){\n  var encfsPath, info;\n  $info_0(LOG_4, 'Listing files of path <' + path + '>');\n  $isDirectory(this$static, path) || $onFailure_6(callback, new IOException_0('Not a directory'));\n  info = dynamicCast($get_1(this$static.cache, path.path_0), Q$Files$PathInfo);\n  if (info.children_0 == null) {\n    encfsPath = $unlockedRootForPath(this$static, path.path_0);\n    encfsPath?$listFilesFromEncryptedPath(this$static, encfsPath, info, callback):($info_0(LOG_4, 'Listing from unencrypted path') , $listFiles_1(this$static.provider, path.path_0, new Files$4_0(this$static, callback, info)));\n  }\n   else {\n    $onSuccess_5(callback, info.children_0);\n  }\n}\n\nfunction $listFilesFromEncryptedPath(this$static, path, info, callback){\n  var encFSFile, innerCallback, p, volume;\n  $info_0(LOG_4, 'Listing from encrypted path');\n  innerCallback = new Files$5_0(this$static, callback, info, path);\n  encFSFile = dynamicCast($get_1(this$static.encFSFileCache, path.full), Q$EncFSFile);\n  if (encFSFile) {\n    $listFiles_3(encFSFile, innerCallback);\n  }\n   else {\n    volume = $volumeForPath(this$static, path.root);\n    p = path.remaining.length == 0?'/':path.remaining;\n    $getFile(volume, p, new EncFSVolume$5_0(innerCallback));\n  }\n}\n\nfunction $pathForName(this$static, path, callback){\n  var encfsPath, info, volume;\n  $info_0(LOG_4, 'Determining path object for path <' + path + '>');\n  info = dynamicCast($get_1(this$static.cache, path), Q$Files$PathInfo);\n  if (info) {\n    $info_0(LOG_4, 'Found cached pathinfo');\n    $onSuccess_5(callback, info.path_0);\n  }\n   else {\n    encfsPath = $unlockedRootForPath(this$static, path);\n    encfsPath?($info_0(LOG_4, 'Determining path object for path <' + encfsPath + '>, treated as encrypted path') , volume = $volumeForPath(this$static, encfsPath.root) , $getFile(volume, encfsPath.remaining, new Files$3_0(this$static, callback, encfsPath)) , undefined):($info_0(LOG_4, 'Determining path object for path <' + path + '>, treated as unencrypted path') , $getFileInfo(this$static.provider, path, new Files$2_0(this$static, callback)));\n  }\n}\n\nfunction $removeChildrenFromCache(this$static, path){\n  var info, key, key$iterator, key$iterator0, toRemove;\n  $info_0(LOG_4, 'Removing cache entries for path <' + path + '> and its children');\n  info = dynamicCast($get_1(this$static.cache, path), Q$Files$PathInfo);\n  info.children_0 = null;\n  toRemove = new ArrayList_0;\n  for (key$iterator0 = $iterator($keySet(this$static.cache)); $hasNext(key$iterator0.val$outerIter.iter);) {\n    key = dynamicCast($next_3(key$iterator0), Q$String);\n    ($equals(key, path) || key.indexOf(path + '/') == 0) && (setCheck(toRemove.array, toRemove.size_0++, key) , true);\n  }\n  for (key$iterator = new AbstractList$IteratorImpl_0(toRemove); key$iterator.i < key$iterator.this$0_0.size_1();) {\n    key = dynamicCast($next_2(key$iterator), Q$String);\n    $remove_5(this$static.cache, key);\n  }\n  $put_0(this$static.cache, path, info);\n}\n\nfunction $unlock(this$static, encFSRoot, password, callback){\n  var newProvider;\n  newProvider = new PathRewritingWrapper_0(encFSRoot.path_0, this$static.provider);\n  $withPassword(new EncFSVolumeBuilder$FileProviderBuilder_0(new EncFSVolume_0, newProvider), password, new Files$1_0(this$static, callback, encFSRoot));\n}\n\nfunction $unlockedRootForPath(this$static, path){\n  var entry, entry$iterator, result, root, volRoot;\n  root = null;\n  for (entry$iterator = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(this$static.encfsVolumes)).this$0); $hasNext(entry$iterator.iter);) {\n    entry = entry$iterator.last = dynamicCast($next_2(entry$iterator.iter), Q$Map$Entry);\n    volRoot = dynamicCast(entry.getKey(), Q$String);\n    if ($equals(path, volRoot) || path.indexOf(volRoot + '/') == 0) {\n      root = dynamicCast(entry.getKey(), Q$String);\n      break;\n    }\n  }\n  if (root != null) {\n    result = new Files$EncFSPath_0;\n    result.full = path;\n    result.root = root;\n    result.remaining = $substring(path, root.length);\n    return result;\n  }\n  return null;\n}\n\nfunction $volumeForPath(this$static, rootPath){\n  var volume;\n  volume = dynamicCast($get_1(this$static.encfsVolumes, rootPath), Q$EncFSVolume);\n  if (volume) {\n    return volume;\n  }\n  throw new RuntimeException_1('Invalid encfs-path');\n}\n\nfunction Files_0(provider){\n  $clinit_Files();\n  this.cache = new HashMap_0;\n  this.encFSFileCache = new HashMap_0;\n  this.encfsVolumes = new HashMap_0;\n  this.provider = provider;\n}\n\ndefineSeed(287, 1, {}, Files_0);\nvar LOG_4;\nfunction $onFailure_7(this$static, reason){\n  $onFailure_2(reason);\n}\n\nfunction $onSuccess_6(this$static, result){\n  var e;\n  try {\n    $buildVolume(result, new Files$1$1_0(this$static, this$static.val$callback, this$static.val$encFSRoot));\n  }\n   catch ($e0) {\n    $e0 = wrap_0($e0);\n    if (instanceOf($e0, Q$Exception)) {\n      e = $e0;\n      $onFailure_2(e);\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n\nfunction Files$1_0(this$0, val$callback, val$encFSRoot){\n  this.this$0 = this$0;\n  this.val$callback = val$callback;\n  this.val$encFSRoot = val$encFSRoot;\n}\n\ndefineSeed(288, 1, {}, Files$1_0);\n_.onFailure = function onFailure_6(reason){\n  $onFailure_7(this, dynamicCast(reason, Q$Exception));\n}\n;\n_.onSuccess = function onSuccess_6(result){\n  $onSuccess_6(this, dynamicCast(result, Q$EncFSVolumeBuilder$PasswordBuilder));\n}\n;\nfunction $onFailure_8(this$static, reason){\n  $onFailure_2(reason);\n}\n\nfunction $onSuccess_7(this$static, result){\n  $removeChildrenFromCache(this$static.this$1.this$0, this$static.val$encFSRoot.path_0);\n  $put_0(this$static.this$1.this$0.encfsVolumes, this$static.val$encFSRoot.path_0, result);\n  $onSuccess_1(this$static.val$callback);\n}\n\nfunction Files$1$1_0(this$1, val$callback, val$encFSRoot){\n  this.this$1 = this$1;\n  this.val$callback = val$callback;\n  this.val$encFSRoot = val$encFSRoot;\n}\n\ndefineSeed(289, 1, {}, Files$1$1_0);\n_.onFailure = function onFailure_7(reason){\n  $onFailure_8(this, dynamicCast(reason, Q$Exception));\n}\n;\n_.onSuccess = function onSuccess_7(result){\n  $onSuccess_7(this, dynamicCast(result, Q$EncFSVolume));\n}\n;\nfunction $onFailure_9(this$static, reason){\n  $onFailure_6(this$static.val$callback, reason);\n}\n\nfunction $onSuccess_8(this$static, result){\n  var newPath;\n  newPath = new Path_1($getPath(result));\n  $createCacheEntry_0(this$static.this$0, newPath, result);\n  $onSuccess_5(this$static.val$callback, newPath);\n}\n\nfunction Files$2_0(this$0, val$callback){\n  this.this$0 = this$0;\n  this.val$callback = val$callback;\n}\n\ndefineSeed(290, 1, {}, Files$2_0);\n_.onFailure = function onFailure_8(reason){\n  $onFailure_9(this, dynamicCast(reason, Q$IOException));\n}\n;\n_.onSuccess = function onSuccess_8(result){\n  $onSuccess_8(this, dynamicCast(result, Q$EncFSFileInfo));\n}\n;\nfunction $onFailure_10(this$static, reason){\n  $onFailure_6(this$static.val$callback, reason);\n}\n\nfunction $onSuccess_9(this$static, result){\n  var newPath;\n  newPath = new Path_1(this$static.val$path.full);\n  $createCacheEntry(this$static.this$0, newPath, result);\n  $onSuccess_5(this$static.val$callback, newPath);\n}\n\nfunction Files$3_0(this$0, val$callback, val$path){\n  this.this$0 = this$0;\n  this.val$callback = val$callback;\n  this.val$path = val$path;\n}\n\ndefineSeed(291, 1, {}, Files$3_0);\n_.onFailure = function onFailure_9(reason){\n  $onFailure_10(this, dynamicCast(reason, Q$Exception));\n}\n;\n_.onSuccess = function onSuccess_9(result){\n  $onSuccess_9(this, dynamicCast(result, Q$EncFSFile));\n}\n;\nfunction $onFailure_11(this$static, reason){\n  $onFailure_6(this$static.val$callback, reason);\n}\n\nfunction $onSuccess_10(this$static, result){\n  var encFSFileInfo, i, newPath, paths;\n  paths = initDim(_3Lde_voot_encfsanywhere_fs_shared_Path_2_classLit, makeCastMap([Q$Path_$1, Q$Serializable, Q$Object_$1]), Q$Path, result.size_1(), 0);\n  this$static.val$info.isEncFSRoot = ($clinit_Boolean() , $clinit_Boolean() , FALSE);\n  for (i = 0; i < result.size_1(); i++) {\n    encFSFileInfo = dynamicCast(result.get_1(i), Q$EncFSFileInfo);\n    newPath = new Path_1($getPath(encFSFileInfo));\n    paths[i] = newPath;\n    $createCacheEntry_0(this$static.this$0, newPath, encFSFileInfo);\n    $equals('.encfs6.xml', encFSFileInfo.name_0) && (this$static.val$info.isEncFSRoot = TRUE);\n  }\n  this$static.val$info.children_0 = paths;\n  $onSuccess_5(this$static.val$callback, this$static.val$info.children_0);\n}\n\nfunction Files$4_0(this$0, val$callback, val$info){\n  this.this$0 = this$0;\n  this.val$callback = val$callback;\n  this.val$info = val$info;\n}\n\ndefineSeed(292, 1, {}, Files$4_0);\n_.onFailure = function onFailure_10(reason){\n  $onFailure_11(this, dynamicCast(reason, Q$IOException));\n}\n;\n_.onSuccess = function onSuccess_10(result){\n  $onSuccess_10(this, dynamicCast(result, Q$List));\n}\n;\nfunction $onFailure_12(this$static, reason){\n  $onFailure_6(this$static.val$callback, reason);\n}\n\nfunction $onSuccess_11(this$static, result){\n  var encFSFile, i, newPath, paths;\n  paths = initDim(_3Lde_voot_encfsanywhere_fs_shared_Path_2_classLit, makeCastMap([Q$Path_$1, Q$Serializable, Q$Object_$1]), Q$Path, result.length, 0);\n  this$static.val$info.isEncFSRoot = ($clinit_Boolean() , $clinit_Boolean() , FALSE);\n  for (i = 0; i < result.length; i++) {\n    encFSFile = result[i];\n    newPath = new Path_1(this$static.val$path.root + $getPath(encFSFile.plainFileInfo));\n    paths[i] = newPath;\n    $createCacheEntry(this$static.this$0, newPath, encFSFile);\n    $equals('.encfs6.xml', encFSFile.plainFileInfo.name_0) && (this$static.val$info.isEncFSRoot = TRUE);\n  }\n  this$static.val$info.children_0 = paths;\n  $onSuccess_5(this$static.val$callback, this$static.val$info.children_0);\n}\n\nfunction Files$5_0(this$0, val$callback, val$info, val$path){\n  this.this$0 = this$0;\n  this.val$callback = val$callback;\n  this.val$info = val$info;\n  this.val$path = val$path;\n}\n\ndefineSeed(293, 1, {}, Files$5_0);\n_.onFailure = function onFailure_11(reason){\n  $onFailure_12(this, dynamicCast(reason, Q$Exception));\n}\n;\n_.onSuccess = function onSuccess_11(result){\n  $onSuccess_11(this, dynamicCast(result, Q$EncFSFile_$1));\n}\n;\nfunction $onFailure_13(this$static, reason){\n  $onFailure_3(this$static.val$callback, reason);\n}\n\nfunction $onSuccess_12(this$static, result){\n  $onSuccess_2(this$static.val$callback, result);\n}\n\nfunction Files$6_0(val$callback){\n  this.val$callback = val$callback;\n}\n\ndefineSeed(294, 1, {}, Files$6_0);\n_.onFailure = function onFailure_12(reason){\n  $onFailure_13(this, dynamicCast(reason, Q$IOException));\n}\n;\n_.onSuccess = function onSuccess_12(result){\n  $onSuccess_12(this, dynamicCast(result, Q$InputStream));\n}\n;\nfunction $onFailure_14(this$static, reason){\n  $onFailure_13(this$static.val$actualCallback, new IOException_1(reason));\n}\n\nfunction $onSuccess_13(this$static, result){\n  $onSuccess_12(this$static.val$actualCallback, result);\n}\n\nfunction Files$7_0(val$actualCallback){\n  this.val$actualCallback = val$actualCallback;\n}\n\ndefineSeed(295, 1, {}, Files$7_0);\n_.onFailure = function onFailure_13(reason){\n  $onFailure_14(this, dynamicCast(reason, Q$Exception));\n}\n;\n_.onSuccess = function onSuccess_13(result){\n  $onSuccess_13(this, dynamicCast(result, Q$EncFSInputStream));\n}\n;\nfunction Files$EncFSPath_0(){\n}\n\ndefineSeed(296, 1, {}, Files$EncFSPath_0);\nfunction Files$PathInfo_0(){\n}\n\ndefineSeed(297, 1, makeCastMap([Q$Files$PathInfo]), Files$PathInfo_0);\n_.isDirectory = false;\nfunction Path_1(path){\n  this.path_0 = path;\n}\n\ndefineSeed(298, 1, makeCastMap([Q$Path]), Path_1);\n_.toString$ = function toString_14(){\n  return this.path_0;\n}\n;\ndefineSeed(300, 1, makeCastMap([Q$InputStream]));\n_.read_0 = function read(array){\n  var buffer, bytesRead, i;\n  buffer = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, array.length, 1);\n  bytesRead = this.read_1(buffer);\n  for (i = 0; i < bytesRead; i++) {\n    array[i] = buffer[i];\n  }\n  return bytesRead;\n}\n;\n_.read_1 = function read_0(b){\n  return this.read_2(b, 0, b.length);\n}\n;\n_.read_2 = function read_1(b, off, len){\n  var c, i;\n  if (b == null) {\n    throw new NullPointerException_0;\n  }\n   else if (off < 0 || len < 0 || len > b.length - off) {\n    throw new IndexOutOfBoundsException_0;\n  }\n   else if (len == 0) {\n    return 0;\n  }\n  c = this.read();\n  if (c == -1) {\n    return -1;\n  }\n  b[off] = narrow_byte(c);\n  i = 1;\n  try {\n    for (; i < len; i++) {\n      c = this.read();\n      if (c == -1) {\n        break;\n      }\n      b[off + i] = narrow_byte(c);\n    }\n  }\n   catch ($e0) {\n    $e0 = wrap_0($e0);\n    if (!instanceOf($e0, Q$IOException))\n      throw unwrap($e0);\n  }\n  return i;\n}\n;\nfunction DropboxInputStream_0(arrayBuffer){\n  this.arrayBuffer = arrayBuffer;\n  this.size_0 = arrayBuffer.byteLength;\n}\n\ndefineSeed(299, 300, makeCastMap([Q$InputStream]), DropboxInputStream_0);\n_.read = function read_2(){\n  if (this.pos < this.size_0) {\n    return $getByte(this.arrayBuffer, this.pos++);\n  }\n  return -1;\n}\n;\n_.pos = 0;\n_.size_0 = 0;\nfunction $clinit_DropboxFileProvider(){\n  $clinit_DropboxFileProvider = nullMethod;\n  $clinit_Logger();\n  $getLoggerHelper('de.voot.encfsanywhere.fs.shared.providers.DropboxFileProvider');\n}\n\nfunction $exists(this$static, srcPath, callback){\n  $metadata(this$static.dropboxWrapper, srcPath, new DropboxFileProvider$2_0(callback));\n}\n\nfunction $getFileInfo(this$static, srcPath, callback){\n  $metadata(this$static.dropboxWrapper, srcPath, new DropboxFileProvider$3_0(callback));\n}\n\nfunction $listFiles_1(this$static, dirPath, callback){\n  $readdir(this$static.dropboxWrapper, dirPath, new DropboxFileProvider$4_0(callback));\n}\n\n",
"function $openInputStream(this$static, srcFilePath, callback){\n  $readFile(this$static.dropboxWrapper, srcFilePath, new DropboxFileProvider$5_0(callback));\n}\n\nfunction $statToFileInfo(result){\n  var info, name_0, offset, parentPath, path;\n  path = result._json.path;\n  offset = path.lastIndexOf('/') + 1;\n  name_0 = $substring(path, offset);\n  parentPath = $substring_0(path, 0, offset);\n  info = new EncFSFileInfo_0(name_0, parentPath, result.isFolder, P0_longLit, fromInt(result.size), true, false, false);\n  return info;\n}\n\nfunction DropboxFileProvider_0(dropboxWrapper){\n  $clinit_DropboxFileProvider();\n  this.dropboxWrapper = dropboxWrapper;\n}\n\ndefineSeed(301, 1, {}, DropboxFileProvider_0);\nfunction $onFailure_15(this$static, reason){\n  reason.status == 404?this$static.val$callback.onSuccess(($clinit_Boolean() , FALSE)):this$static.val$callback.onFailure(new IOException_0(reason.responseText));\n}\n\nfunction $onSuccess_14(this$static){\n  this$static.val$callback.onSuccess(($clinit_Boolean() , TRUE));\n}\n\nfunction DropboxFileProvider$2_0(val$callback){\n  this.val$callback = val$callback;\n}\n\ndefineSeed(302, 1, {}, DropboxFileProvider$2_0);\n_.onFailure = function onFailure_14(reason){\n  $onFailure_15(this, dynamicCastJso(reason));\n}\n;\n_.onSuccess = function onSuccess_14(result){\n  $onSuccess_14(this, dynamicCastJso(result));\n}\n;\nfunction $onFailure_16(this$static, reason){\n  this$static.val$callback.onFailure(new IOException_0(reason.responseText));\n}\n\nfunction $onSuccess_15(this$static, result){\n  var info;\n  info = $statToFileInfo(result);\n  this$static.val$callback.onSuccess(info);\n}\n\nfunction DropboxFileProvider$3_0(val$callback){\n  this.val$callback = val$callback;\n}\n\ndefineSeed(303, 1, {}, DropboxFileProvider$3_0);\n_.onFailure = function onFailure_15(reason){\n  $onFailure_16(this, dynamicCastJso(reason));\n}\n;\n_.onSuccess = function onSuccess_15(result){\n  $onSuccess_15(this, dynamicCastJso(result));\n}\n;\nfunction $onFailure_17(this$static, reason){\n  this$static.val$callback.onFailure(new IOException_0(reason.responseText));\n}\n\nfunction $onSuccess_16(this$static, result){\n  var i, list, stat;\n  list = new ArrayList_0;\n  for (i = 0; i < result.length; i++) {\n    stat = result[i];\n    $add_2(list, $statToFileInfo(stat));\n  }\n  this$static.val$callback.onSuccess(list);\n}\n\nfunction DropboxFileProvider$4_0(val$callback){\n  this.val$callback = val$callback;\n}\n\ndefineSeed(304, 1, {}, DropboxFileProvider$4_0);\n_.onFailure = function onFailure_16(reason){\n  $onFailure_17(this, dynamicCastJso(reason));\n}\n;\n_.onSuccess = function onSuccess_16(result){\n  $onSuccess_16(this, dynamicCastJso(result));\n}\n;\nfunction $onFailure_18(this$static, reason){\n  this$static.val$callback.onFailure(new IOException_0(reason.responseText));\n}\n\nfunction $onSuccess_17(this$static, result){\n  var in_$;\n  in_$ = new DropboxInputStream_0(result);\n  this$static.val$callback.onSuccess(in_$);\n}\n\nfunction DropboxFileProvider$5_0(val$callback){\n  this.val$callback = val$callback;\n}\n\ndefineSeed(305, 1, {}, DropboxFileProvider$5_0);\n_.onFailure = function onFailure_17(reason){\n  $onFailure_18(this, dynamicCastJso(reason));\n}\n;\n_.onSuccess = function onSuccess_17(result){\n  $onSuccess_17(this, dynamicCastJso(result));\n}\n;\nfunction $convertFileInfo(this$static, info){\n  var name_0, parentPath, path;\n  path = $substring($getPath(info), this$static.rootFolder.length);\n  !path.length && (path = '/');\n  if ($equals('/', path)) {\n    name_0 = '/';\n    parentPath = '';\n  }\n   else {\n    name_0 = $substring(path, path.lastIndexOf('/') + 1);\n    parentPath = $substring_0(path, 0, path.lastIndexOf('/') + 1);\n  }\n  return new EncFSFileInfo_0(name_0, parentPath, info.directory, info.lastModified, info.size_0, info.readable, info.writable, info.executable);\n}\n\nfunction $exists_0(this$static, srcPath, callback){\n  $exists(this$static.provider, this$static.rootFolder + srcPath, callback);\n}\n\nfunction $getFileInfo_0(this$static, srcPath, callback){\n  $getFileInfo(this$static.provider, this$static.rootFolder + srcPath, new PathRewritingWrapper$1_0(this$static, callback));\n}\n\nfunction $listFiles_2(this$static, dirPath, callback){\n  $listFiles_1(this$static.provider, this$static.rootFolder + dirPath, new PathRewritingWrapper$2_0(this$static, callback));\n}\n\nfunction $openInputStream_0(this$static, srcFilePath, callback){\n  $openInputStream(this$static.provider, this$static.rootFolder + srcFilePath, callback);\n}\n\nfunction PathRewritingWrapper_0(rootFolder, provider){\n  this.rootFolder = rootFolder;\n  this.provider = provider;\n}\n\ndefineSeed(306, 1, {}, PathRewritingWrapper_0);\nfunction $onFailure_19(this$static, reason){\n  $onFailure_27(this$static.val$callback, reason);\n}\n\nfunction $onSuccess_18(this$static, result){\n  $onSuccess_26(this$static.val$callback, $convertFileInfo(this$static.this$0, result));\n}\n\nfunction PathRewritingWrapper$1_0(this$0, val$callback){\n  this.this$0 = this$0;\n  this.val$callback = val$callback;\n}\n\ndefineSeed(307, 1, {}, PathRewritingWrapper$1_0);\n_.onFailure = function onFailure_18(reason){\n  $onFailure_19(this, dynamicCast(reason, Q$IOException));\n}\n;\n_.onSuccess = function onSuccess_18(result){\n  $onSuccess_18(this, dynamicCast(result, Q$EncFSFileInfo));\n}\n;\nfunction $onFailure_20(this$static, reason){\n  $onFailure_23(this$static.val$callback, reason);\n}\n\nfunction $onSuccess_19(this$static, result){\n  var info, info$iterator, list;\n  list = new ArrayList_1(result.size_1());\n  for (info$iterator = result.iterator(); info$iterator.hasNext();) {\n    info = dynamicCast(info$iterator.next_0(), Q$EncFSFileInfo);\n    $add_2(list, $convertFileInfo(this$static.this$0, info));\n  }\n  $onSuccess_22(this$static.val$callback, list);\n}\n\nfunction PathRewritingWrapper$2_0(this$0, val$callback){\n  this.this$0 = this$0;\n  this.val$callback = val$callback;\n}\n\ndefineSeed(308, 1, {}, PathRewritingWrapper$2_0);\n_.onFailure = function onFailure_19(reason){\n  $onFailure_20(this, dynamicCast(reason, Q$IOException));\n}\n;\n_.onSuccess = function onSuccess_19(result){\n  $onSuccess_19(this, dynamicCast(result, Q$List));\n}\n;\nfunction decrypt(b64Key, b64Cipher, b64IV){\n  var sjcl = $wnd.sjcl;\n  var key = sjcl.codec.base64.toBits(b64Key);\n  var cipher = sjcl.codec.base64.toBits(b64Cipher);\n  var iv = sjcl.codec.base64.toBits(b64IV);\n  var aes = new sjcl.cipher.aes(key);\n  var plain = sjcl.mode.cbc.decrypt(aes, cipher, iv);\n  return sjcl.codec.base64.fromBits(plain);\n}\n\nfunction encrypt(b64Key, b64Plain, b64IV){\n  var sjcl = $wnd.sjcl;\n  var key = sjcl.codec.base64.toBits(b64Key);\n  var plain = sjcl.codec.base64.toBits(b64Plain);\n  var iv = sjcl.codec.base64.toBits(b64IV);\n  var aes = new sjcl.cipher.aes(key);\n  var cipher = sjcl.mode.cbc.encrypt(aes, plain, iv);\n  return sjcl.codec.base64.fromBits(cipher);\n}\n\nfunction decrypt_0(b64Key, b64Cipher, b64IV){\n  var sjcl = $wnd.sjcl;\n  var key = sjcl.codec.base64.toBits(b64Key);\n  var cipher = sjcl.codec.base64.toBits(b64Cipher);\n  var iv = sjcl.codec.base64.toBits(b64IV);\n  var aes = new sjcl.cipher.aes(key);\n  var plain = sjcl.mode.cfb.decrypt(aes, cipher, iv);\n  return sjcl.codec.base64.fromBits(plain);\n}\n\nfunction encrypt_0(b64Key, b64Plain, b64IV){\n  var sjcl = $wnd.sjcl;\n  var key = sjcl.codec.base64.toBits(b64Key);\n  var plain = sjcl.codec.base64.toBits(b64Plain);\n  var iv = sjcl.codec.base64.toBits(b64IV);\n  var aes = new sjcl.cipher.aes(key);\n  var cipher = sjcl.mode.cfb.encrypt(aes, plain, iv);\n  return sjcl.codec.base64.fromBits(cipher);\n}\n\nfunction encrypt_1(b64Key, b64Data){\n  var sjcl = $wnd.sjcl;\n  var key = sjcl.codec.base64.toBits(b64Key);\n  var data_0 = sjcl.codec.base64.toBits(b64Data);\n  var hmac = new sjcl.misc.hmac(key, sjcl.hash.sha1);\n  var bits = hmac.encrypt(data_0);\n  var b64 = sjcl.codec.base64.fromBits(bits);\n  return b64;\n}\n\nfunction generateSecret(password, iter, b64Salt, keyLength){\n  var sjcl = $wnd.sjcl;\n  var hmac = function(key){\n    return new sjcl.misc.hmac(key, sjcl.hash.sha1);\n  }\n  ;\n  salt = sjcl.codec.base64.toBits(b64Salt);\n  var key_0 = sjcl.misc.pbkdf2(password, salt, iter, keyLength, hmac);\n  key_0 = sjcl.codec.base64.fromBits(key_0);\n  return key_0;\n}\n\nfunction getInstance(cipherSpec){\n  if ($equals('AES/CFB/NoPadding', cipherSpec)) {\n    return new Cipher$AES_SJCL_Wrapper_0('CFB');\n  }\n   else if ($equals('AES/CBC/NoPadding', cipherSpec)) {\n    return new Cipher$AES_SJCL_Wrapper_0('CBC');\n  }\n  throw new NoSuchAlgorithmException_0;\n}\n\ndefineSeed(313, 1, {});\nfunction $doFinal(this$static, data_0){\n  var ct, len, newResult, newSize, padded, result;\n  len = data_0.length;\n  if ((data_0.length & 15) != 0) {\n    newSize = (data_0.length & 2147483632) + 16;\n    padded = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, newSize, 1);\n    arraycopy(data_0, 0, padded, 0, data_0.length);\n    data_0 = padded;\n  }\n  result = null;\n  if (this$static.opMode == 2) {\n    if ($equals('CBC', this$static.mode_0)) {\n      ct = decrypt(($clinit_Base64() , byteArrayToBase64(clone(this$static.key.key))), byteArrayToBase64(data_0), byteArrayToBase64(clone(this$static.ivParameterSpec.iv)));\n      result = base64ToByteArray(ct);\n    }\n     else if ($equals('CFB', this$static.mode_0)) {\n      ct = decrypt_0(($clinit_Base64() , byteArrayToBase64(clone(this$static.key.key))), byteArrayToBase64(data_0), byteArrayToBase64(clone(this$static.ivParameterSpec.iv)));\n      result = base64ToByteArray(ct);\n    }\n  }\n   else if (this$static.opMode == 1) {\n    if ($equals('CBC', this$static.mode_0)) {\n      ct = encrypt(($clinit_Base64() , byteArrayToBase64(clone(this$static.key.key))), byteArrayToBase64(data_0), byteArrayToBase64(clone(this$static.ivParameterSpec.iv)));\n      result = base64ToByteArray(ct);\n    }\n     else if ($equals('CFB', this$static.mode_0)) {\n      ct = encrypt_0(($clinit_Base64() , byteArrayToBase64(clone(this$static.key.key))), byteArrayToBase64(data_0), byteArrayToBase64(clone(this$static.ivParameterSpec.iv)));\n      result = base64ToByteArray(ct);\n    }\n  }\n  if (len != result.length) {\n    newResult = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, len, 1);\n    arraycopy(result, 0, newResult, 0, len);\n    result = newResult;\n  }\n  return result;\n}\n\nfunction $doFinal_0(this$static, data_0, len){\n  len != data_0.length && (data_0 = copyOfRange(data_0, 0, len));\n  return $doFinal(this$static, data_0);\n}\n\nfunction $init_1(this$static, opMode, key, ivSpec){\n  if (clone(key.key).length != 16 && clone(key.key).length != 24 && clone(key.key).length != 32) {\n    throw new InvalidKeyException_0;\n  }\n  if (opMode != 1 && opMode != 2) {\n    throw new UnsupportedOperationException_1('Mode not supported.');\n  }\n  this$static.opMode = opMode;\n  this$static.key = key;\n  this$static.ivParameterSpec = ivSpec;\n}\n\nfunction Cipher$AES_SJCL_Wrapper_0(mode){\n  this.mode_0 = mode;\n}\n\ndefineSeed(314, 313, {}, Cipher$AES_SJCL_Wrapper_0);\n_.opMode = 0;\ndefineSeed(315, 1, {});\nfunction $doFinal_1(this$static){\n  var str;\n  str = encrypt_1(($clinit_Base64() , byteArrayToBase64(clone(this$static.key.key))), this$static.builder.impl.string);\n  this$static.builder = new StringBuilder_0;\n  return base64ToByteArray(str);\n}\n\nfunction $update(this$static, data_0, offset, len){\n  var bytes;\n  bytes = copyOfRange(data_0, offset, offset + len);\n  $append_3(this$static.builder, ($clinit_Base64() , byteArrayToBase64(bytes)));\n}\n\nfunction Mac$HmacSHA1Wrapper_0(){\n}\n\ndefineSeed(316, 315, {}, Mac$HmacSHA1Wrapper_0);\nfunction PBKDF2SHA1SecretKey_0(encoded){\n  this.encoded = encoded;\n}\n\ndefineSeed(317, 1, makeCastMap([Q$SecretKey, Q$Serializable]), PBKDF2SHA1SecretKey_0);\n_.getAlgorithm = function getAlgorithm(){\n  return null;\n}\n;\n_.getEncoded = function getEncoded(){\n  return this.encoded;\n}\n;\nfunction $clinit_Base64(){\n  $clinit_Base64 = nullMethod;\n  intToBase64 = initValues(_3C_classLit, makeCastMap([Q$Serializable]), -1, [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47]);\n  base64ToInt = initValues(_3B_classLit, makeCastMap([Q$Serializable]), -1, [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51]);\n}\n\nfunction base64ToByteArray(s){\n  $clinit_Base64();\n  var alphaToInt, ch0, ch1, ch2, ch3, i, inCursor, missingBytesInLastGroup, numFullGroups, numGroups, outCursor, result, sLen;\n  alphaToInt = base64ToInt;\n  sLen = s.length;\n  numGroups = ~~(sLen / 4);\n  if (4 * numGroups != sLen)\n    throw new IllegalArgumentException_1('String length must be a multiple of four.');\n  missingBytesInLastGroup = 0;\n  numFullGroups = numGroups;\n  if (sLen != 0) {\n    if (s.charCodeAt(sLen - 1) == 61) {\n      ++missingBytesInLastGroup;\n      --numFullGroups;\n    }\n    s.charCodeAt(sLen - 2) == 61 && ++missingBytesInLastGroup;\n  }\n  result = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 3 * numGroups - missingBytesInLastGroup, 1);\n  inCursor = 0;\n  outCursor = 0;\n  for (i = 0; i < numFullGroups; i++) {\n    ch0 = base64toInt($charAt(s, inCursor++), alphaToInt);\n    ch1 = base64toInt($charAt(s, inCursor++), alphaToInt);\n    ch2 = base64toInt($charAt(s, inCursor++), alphaToInt);\n    ch3 = base64toInt($charAt(s, inCursor++), alphaToInt);\n    result[outCursor++] = narrow_byte(ch0 << 2 | ch1 >> 4);\n    result[outCursor++] = narrow_byte(ch1 << 4 | ch2 >> 2);\n    result[outCursor++] = narrow_byte(ch2 << 6 | ch3);\n  }\n  if (missingBytesInLastGroup != 0) {\n    ch0 = base64toInt($charAt(s, inCursor++), alphaToInt);\n    ch1 = base64toInt($charAt(s, inCursor++), alphaToInt);\n    result[outCursor++] = narrow_byte(ch0 << 2 | ch1 >> 4);\n    if (missingBytesInLastGroup == 1) {\n      ch2 = base64toInt($charAt(s, inCursor++), alphaToInt);\n      result[outCursor++] = narrow_byte(ch1 << 4 | ch2 >> 2);\n    }\n  }\n  return result;\n}\n\nfunction base64toInt(c, alphaToInt){\n  var result;\n  result = alphaToInt[c];\n  if (result < 0)\n    throw new IllegalArgumentException_1('Illegal character ' + String.fromCharCode(c));\n  return result;\n}\n\nfunction byteArrayToBase64(a){\n  $clinit_Base64();\n  var aLen, byte0, byte1, byte2, i, inCursor, intToAlpha, numBytesInPartialGroup, numFullGroups, result;\n  aLen = a.length;\n  numFullGroups = ~~(aLen / 3);\n  numBytesInPartialGroup = aLen - 3 * numFullGroups;\n  result = new StringBuffer_1;\n  intToAlpha = intToBase64;\n  inCursor = 0;\n  for (i = 0; i < numFullGroups; i++) {\n    byte0 = a[inCursor++] & 255;\n    byte1 = a[inCursor++] & 255;\n    byte2 = a[inCursor++] & 255;\n    $append_1(result, intToAlpha[byte0 >> 2]);\n    $append_1(result, intToAlpha[byte0 << 4 & 63 | byte1 >> 4]);\n    $append_1(result, intToAlpha[byte1 << 2 & 63 | byte2 >> 6]);\n    $append_1(result, intToAlpha[byte2 & 63]);\n  }\n  if (numBytesInPartialGroup != 0) {\n    byte0 = a[inCursor++] & 255;\n    $append_1(result, intToAlpha[byte0 >> 2]);\n    if (numBytesInPartialGroup == 1) {\n      $append_1(result, intToAlpha[byte0 << 4 & 63]);\n      $append_0(result.impl, '==');\n    }\n     else {\n      byte1 = a[inCursor++] & 255;\n      $append_1(result, intToAlpha[byte0 << 4 & 63 | byte1 >> 4]);\n      $append_1(result, intToAlpha[byte1 << 2 & 63]);\n      $appendNonNull(result.impl, '=');\n    }\n  }\n  return result.impl.string;\n}\n\nvar base64ToInt, intToBase64;\nfunction IOException_0(message){\n  Exception_1.call(this, message);\n}\n\nfunction IOException_1(throwable){\n  Exception_2.call(this, throwable);\n}\n\ndefineSeed(322, 7, makeCastMap([Q$IOException, Q$Serializable, Q$Exception, Q$Throwable]), IOException_0, IOException_1);\nfunction FileNotFoundException_0(){\n  Exception_0.call(this);\n}\n\ndefineSeed(321, 322, makeCastMap([Q$IOException, Q$Serializable, Q$Exception, Q$Throwable]), FileNotFoundException_0);\ndefineSeed(323, 300, makeCastMap([Q$InputStream]));\n_.read = function read_3(){\n  return this.in_$.read();\n}\n;\n_.read_1 = function read_4(b){\n  return this.read_2(b, 0, b.length);\n}\n;\n_.read_2 = function read_5(b, off, len){\n  return this.in_$.read_2(b, off, len);\n}\n;\ndefineSeed(324, 7, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]));\ndefineSeed(326, 324, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]));\nfunction InvalidKeyException_0(){\n  Exception_1.call(this, 'Keysize must be 128, 192 or 256bits');\n}\n\ndefineSeed(325, 326, makeCastMap([Q$InvalidKeyException, Q$Serializable, Q$Exception, Q$Throwable]), InvalidKeyException_0);\nfunction IvParameterSpec_0(iv){\n  IvParameterSpec_1.call(this, iv, iv.length);\n}\n\nfunction IvParameterSpec_1(iv, len){\n  if (iv == null) {\n    throw new IllegalArgumentException_1('IV missing');\n  }\n  if (iv.length < len) {\n    throw new IllegalArgumentException_1('IV buffer too short for given offset/length combination');\n  }\n  if (len < 0) {\n    throw new ArrayIndexOutOfBoundsException_0;\n  }\n  this.iv = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, len, 1);\n  arraycopy(iv, 0, this.iv, 0, len);\n}\n\ndefineSeed(327, 1, {}, IvParameterSpec_0);\nfunction NoSuchAlgorithmException_0(){\n  Exception_0.call(this);\n}\n\ndefineSeed(328, 324, makeCastMap([Q$NoSuchAlgorithmException, Q$Serializable, Q$Exception, Q$Throwable]), NoSuchAlgorithmException_0);\nfunction $getPassword(this$static){\n  if (this$static.password == null) {\n    throw new IllegalStateException_1('password has been cleared');\n  }\n  return clone_0(this$static.password);\n}\n\nfunction PBEKeySpec_0(password, salt_0, iterationCount, keyLength){\n  password == null || password.length == 0?(this.password = initDim(_3C_classLit, makeCastMap([Q$Serializable]), -1, 0, 1)):(this.password = copyOf_0(password, password.length));\n  if (salt_0 == null) {\n    throw new NullPointerException_1('the salt parameter must be non-null');\n  }\n   else if (salt_0.length == 0) {\n    throw new IllegalArgumentException_1('the salt parameter must not be empty');\n  }\n   else {\n    this.salt = copyOf(salt_0, salt_0.length);\n  }\n  if (iterationCount <= 0) {\n    throw new IllegalArgumentException_1('invalid iterationCount value');\n  }\n  if (keyLength <= 0) {\n    throw new IllegalArgumentException_1('invalid keyLength value');\n  }\n  this.iterationCount = iterationCount;\n  this.keyLength = keyLength;\n}\n\ndefineSeed(329, 1, {}, PBEKeySpec_0);\n_.iterationCount = 0;\n_.keyLength = 0;\n_.salt = null;\nfunction SecretKeySpec_0(key, algorithm){\n  if (key == null || algorithm == null) {\n    throw new IllegalArgumentException_1('Missing argument');\n  }\n  if (key.length == 0) {\n    throw new IllegalArgumentException_1('Empty key');\n  }\n  this.key = copyOf(key, key.length);\n  this.algorithm = algorithm;\n}\n\ndefineSeed(330, 1, makeCastMap([Q$SecretKey, Q$Serializable]), SecretKeySpec_0);\n_.equals$ = function equals_4(obj){\n  var thatAlg, thatKey;\n  if (this === obj)\n    return true;\n  if (!instanceOf(obj, Q$SecretKey))\n    return false;\n  thatAlg = dynamicCast(obj, Q$SecretKey).getAlgorithm();\n  if (!$equalsIgnoreCase(thatAlg, this.algorithm)) {\n    if ((!$equalsIgnoreCase(thatAlg, 'DESede') || !$equalsIgnoreCase(this.algorithm, 'TripleDES')) && (!$equalsIgnoreCase(thatAlg, 'TripleDES') || !$equalsIgnoreCase(this.algorithm, 'DESede')))\n      return false;\n  }\n  thatKey = dynamicCast(obj, Q$SecretKey).getEncoded();\n  return equals_12(this.key, thatKey);\n}\n;\n_.getAlgorithm = function getAlgorithm_0(){\n  return this.algorithm;\n}\n;\n_.getEncoded = function getEncoded_0(){\n  return clone(this.key);\n}\n;\n_.hashCode$ = function hashCode_6(){\n  var i, retval;\n  retval = 0;\n  for (i = 1; i < this.key.length; i++) {\n    retval += this.key[i] * i;\n  }\n  return $equalsIgnoreCase(this.algorithm, 'TripleDES')?(retval ^= getHashCode_0('desede')):(retval ^= getHashCode_0(this.algorithm.toLowerCase()));\n}\n;\nfunction $decrypt(this$static, filename){\n  if (this$static.volume.volumeConfig.filenameAlgorithm != this$static.algorithm) {\n    throw new IllegalStateException_1('only accessable when algorithm is ' + this$static.algorithm);\n  }\n  return this$static.decryptImpl(filename);\n}\n\nfunction FilenameDecryptionStrategy_0(volume, volumePath, algorithm){\n  this.volume = volume;\n  this.volumePath = volumePath;\n  this.algorithm = algorithm;\n}\n\ndefineSeed(332, 1, {});\nfunction $verifyDecryptionWorked(volume, chainIv, base256FileName, decFileName){\n  var expectedMac, mac16;\n  volume.volumeConfig.chainedNameIV?(mac16 = mac16_1(volume.volumeMAC, decFileName, chainIv)):(mac16 = mac16_0(volume.volumeMAC, decFileName));\n  expectedMac = copyOfRange(base256FileName, 0, 2);\n  if (!equals_12(mac16, expectedMac)) {\n    throw new EncFSChecksumException_0('Mismatch in file name checksum');\n  }\n}\n\nfunction BasicFilenameDecryptionStrategy_0(volume, volumePath, algorithm){\n  FilenameDecryptionStrategy_0.call(this, volume, volumePath, algorithm);\n}\n\ndefineSeed(331, 332, {});\n_.decryptImpl = function decryptImpl(fileName){\n  var base256FileName, chainIv, config, decFileName, encFileName, fileIv, macBytes, volume, volumePath;\n  volume = this.volume;\n  volumePath = this.volumePath;\n  config = volume.volumeConfig;\n  chainIv = computeChainedIV(volume, volumePath, config);\n  base256FileName = decodeEncfs(getBytesUtf8(fileName));\n  macBytes = getMacBytes(base256FileName);\n  encFileName = copyOfRange(base256FileName, 2, base256FileName.length);\n  fileIv = computeFileIV(chainIv, macBytes);\n  decFileName = this.decryptConcrete(volume, encFileName, fileIv);\n  $verifyDecryptionWorked(volume, chainIv, base256FileName, decFileName);\n  return this.decryptPost(decFileName);\n}\n;\nfunction $encrypt(this$static, filename){\n  if (this$static.volume.volumeConfig.filenameAlgorithm != this$static.algorithm) {\n    throw new IllegalStateException_1('only accessable when algorithm is ' + this$static.algorithm);\n  }\n  return this$static.encryptImpl(filename);\n}\n\nfunction FilenameEncryptionStrategy_0(volume, volumePath, algorithm){\n  this.volume = volume;\n  this.volumePath = volumePath;\n  this.algorithm = algorithm;\n}\n\ndefineSeed(334, 1, {});\nfunction BasicFilenameEncryptionStrategy_0(volume, volumePath, algorithm){\n  FilenameEncryptionStrategy_0.call(this, volume, volumePath, algorithm);\n}\n\ndefineSeed(333, 334, {});\n_.encryptImpl = function encryptImpl(fileName){\n  var chainIv, config, decFileName, encFileName, fileIv, mac16, macBytes, paddedDecFileName, volume, volumePath, base256FileName, fileNameOutput, result;\n  volume = this.volume;\n  volumePath = this.volumePath;\n  config = volume.volumeConfig;\n  decFileName = getBytesUtf8(fileName);\n  paddedDecFileName = this.getPaddedDecFilename(decFileName);\n  chainIv = computeChainedIV(volume, volumePath, config);\n  mac16 = volume.volumeConfig.chainedNameIV?mac16_1(volume.volumeMAC, paddedDecFileName, copyOf(chainIv, chainIv.length)):mac16_0(volume.volumeMAC, paddedDecFileName);\n  macBytes = getMacBytes(mac16);\n  fileIv = computeFileIV(chainIv, macBytes);\n  encFileName = this.encryptConcrete(volume, paddedDecFileName, fileIv);\n  return base256FileName = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, encFileName.length + 2, 1) , base256FileName[0] = mac16[0] , base256FileName[1] = mac16[1] , arraycopy(encFileName, 0, base256FileName, 2, encFileName.length) , fileNameOutput = ($clinit_EncFSBase64() , result = changeBase2(base256FileName) , B64ToAscii(result) , result) , utf8ToString(fileNameOutput, fileNameOutput.length);\n}\n;\nfunction blockOperation(volume, ivSeed, data_0, opMode){\n  var cipher;\n  cipher = volume.blockCipher;\n  cipherInit(volume.volumeKey, volume.volumeMAC, opMode, cipher, volume.volumeIV, ivSeed);\n  return $doFinal(cipher, data_0);\n}\n\nfunction BlockFilenameDecryptionStrategy_0(volume, volumePath){\n  BasicFilenameDecryptionStrategy_0.call(this, volume, volumePath, ($clinit_EncFSFilenameEncryptionAlgorithm() , BLOCK));\n}\n\ndefineSeed(336, 331, {}, BlockFilenameDecryptionStrategy_0);\n_.decryptConcrete = function decryptConcrete(volume, encFileName, fileIv){\n  return blockOperation(volume, fileIv, encFileName, 2);\n}\n;\n_.decryptPost = function decryptPost(fileName){\n  var padLen;\n  padLen = fileName[fileName.length - 1];\n  return _String(copyOfRange(fileName, 0, fileName.length - padLen));\n}\n;\nfunction BlockFilenameEncryptionStrategy_0(volume, volumePath){\n  BasicFilenameEncryptionStrategy_0.call(this, volume, volumePath, ($clinit_EncFSFilenameEncryptionAlgorithm() , BLOCK));\n}\n\ndefineSeed(337, 333, {}, BlockFilenameEncryptionStrategy_0);\n_.encryptConcrete = function encryptConcrete(volume, paddedDecFileName, fileIv){\n  return blockOperation(volume, fileIv, paddedDecFileName, 1);\n}\n;\n_.getPaddedDecFilename = function getPaddedDecFilename(decFileName){\n  var padLen, paddedDecFileName;\n  padLen = 16 - decFileName.length % 16;\n  padLen == 0 && (padLen = 16);\n  paddedDecFileName = copyOf(decFileName, decFileName.length + padLen);\n  fill(paddedDecFileName, decFileName.length, paddedDecFileName.length, narrow_byte(padLen));\n  return paddedDecFileName;\n}\n;\nfunction $clinit_EncFSBase64(){\n  $clinit_EncFSBase64 = nullMethod;\n  _STANDARD_DECODABET = initValues(_3B_classLit, makeCastMap([Q$Serializable]), -1, [-9, -9, -9, -9, -9, -9, -9, -9, -9, -5, -5, -9, -9, -5, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -5, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, 62, -9, -9, -9, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -9, -9, -9, -1, -9, -9, -9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -9, -9, -9, -9, -9, -9, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9]);\n  _ENCFS_DECODABET = initValues(_3B_classLit, makeCastMap([Q$Serializable]), -1, [-9, -9, -9, -9, -9, -9, -9, -9, -9, -5, -5, -9, -9, -5, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -5, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, 0, 1, -9, -9, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, -9, -9, -9, -1, -9, -9, -9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, -9, -9, -9, -9, -9, -9, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9]);\n  B642AsciiTable = $toCharArray(',-0123456789');\n}\n\nfunction B64ToAscii(in_$){\n  var ch_0, length_0, offset;\n  length_0 = in_$.length;\n  for (offset = 0; offset < length_0; ++offset) {\n    ch_0 = in_$[offset];\n    ch_0 > 11?ch_0 > 37?(ch_0 += 59):(ch_0 += 53):(ch_0 = B642AsciiTable[ch_0]);\n    in_$[offset] = narrow_byte(ch_0);\n  }\n}\n\nfunction changeBase2(src_0){\n  var aSrc, aSrc$index, aSrc$max, buffer, dstIdx, result, resultSize, tmpResultSize, unsignedIntValue, workingBits;\n  tmpResultSize = src_0.length * 8 / 6;\n  resultSize = round_int(Math.ceil(tmpResultSize));\n  result = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, resultSize, 1);\n  dstIdx = 0;\n  workingBits = 0;\n  buffer = valueOf_2(P0_longLit);\n  for (aSrc$index = 0 , aSrc$max = src_0.length; aSrc$index < aSrc$max; ++aSrc$index) {\n    aSrc = src_0[aSrc$index];\n    unsignedIntValue = aSrc & 255;\n    buffer = or_0(buffer, $shiftLeft(valueOf_2(fromInt(unsignedIntValue)), workingBits));\n    workingBits += 8;\n    while (workingBits > 6) {\n      result[dstIdx++] = $intValue(and_0(buffer, valueOf_2(P3f_longLit))) << 24 >> 24;\n      buffer = $shiftRight(buffer, 6);\n      workingBits -= 6;\n    }\n  }\n  workingBits > 0 && (result[dstIdx++] = $intValue(and_0(buffer, valueOf_2(P3f_longLit))) << 24 >> 24);\n  return result;\n}\n\nfunction decode(s){\n  $clinit_EncFSBase64();\n  var bytes, head;\n  if (s == null) {\n    throw new NullPointerException_1('Input string was null.');\n  }\n  try {\n    bytes = $getBytes();\n  }\n   catch ($e0) {\n    $e0 = wrap_0($e0);\n    if (instanceOf($e0, Q$UnsupportedEncodingException)) {\n      bytes = getBytesUtf8(s);\n    }\n     else \n      throw unwrap($e0);\n  }\n  bytes = decode_0(bytes, bytes.length);\n  if (bytes != null && bytes.length >= 4) {\n    head = bytes[0] & 255 | bytes[1] << 8 & 65280;\n    if (35615 == head) {\n      throw new UnsupportedOperationException_1('GZIP not implemented');\n    }\n  }\n  return bytes;\n}\n\n",
"function decode_0(source, len){\n  var DECODABET, b4, b4Posn, i, len34, out, outBuff, outBuffPosn, sbiDecode;\n  if (source == null) {\n    throw new NullPointerException_1('Cannot decode null source array.');\n  }\n  if (len > source.length) {\n    throw new IllegalArgumentException_1('Source array with length ' + source.length + ' cannot have offset of 0 and process ' + len + ' bytes.');\n  }\n  if (len == 0) {\n    return initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 0, 1);\n  }\n   else if (len < 4) {\n    throw new IllegalArgumentException_1('Base64-encoded string must have at least four characters, but length specified was ' + len);\n  }\n  DECODABET = _STANDARD_DECODABET;\n  len34 = ~~(len * 3 / 4);\n  outBuff = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, len34, 1);\n  outBuffPosn = 0;\n  b4 = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 4, 1);\n  b4Posn = 0;\n  for (i = 0; i < len; i++) {\n    sbiDecode = DECODABET[source[i] & 255];\n    if (sbiDecode >= -5) {\n      if (sbiDecode >= -1) {\n        b4[b4Posn++] = source[i];\n        if (b4Posn > 3) {\n          outBuffPosn += decode4to3(b4, outBuff, outBuffPosn);\n          b4Posn = 0;\n          if (source[i] == 61) {\n            break;\n          }\n        }\n      }\n    }\n     else {\n      throw new IOException_0('Bad Base64 input character decimal ' + (source[i] & 255) + ' in array position ' + i);\n    }\n  }\n  out = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, outBuffPosn, 1);\n  arraycopy(outBuff, 0, out, 0, outBuffPosn);\n  return out;\n}\n\nfunction decode4to3(source, destination, destOffset){\n  var DECODABET, outBuff;\n  if (source == null) {\n    throw new NullPointerException_1('Source array was null.');\n  }\n  if (destination == null) {\n    throw new NullPointerException_1('Destination array was null.');\n  }\n  if (3 >= source.length) {\n    throw new IllegalArgumentException_1('Source array with length ' + source.length + ' cannot have offset of 0 and still process four bytes.');\n  }\n  if (destOffset < 0 || destOffset + 2 >= destination.length) {\n    throw new IllegalArgumentException_1('Destination array with length ' + destination.length + ' cannot have offset of ' + destOffset + ' and still store three bytes.');\n  }\n  DECODABET = _STANDARD_DECODABET;\n  if (source[2] == 61) {\n    outBuff = (DECODABET[source[0]] & 255) << 18 | (DECODABET[source[1]] & 255) << 12;\n    destination[destOffset] = narrow_byte(outBuff >>> 16);\n    return 1;\n  }\n   else if (source[3] == 61) {\n    outBuff = (DECODABET[source[0]] & 255) << 18 | (DECODABET[source[1]] & 255) << 12 | (DECODABET[source[2]] & 255) << 6;\n    destination[destOffset] = narrow_byte(outBuff >>> 16);\n    destination[destOffset + 1] = narrow_byte(outBuff >>> 8);\n    return 2;\n  }\n   else {\n    outBuff = (DECODABET[source[0]] & 255) << 18 | (DECODABET[source[1]] & 255) << 12 | (DECODABET[source[2]] & 255) << 6 | DECODABET[source[3]] & 255;\n    destination[destOffset] = narrow_byte(outBuff >> 16);\n    destination[destOffset + 1] = narrow_byte(outBuff >> 8);\n    destination[destOffset + 2] = narrow_byte(outBuff);\n    return 3;\n  }\n}\n\nfunction decodeEncfs(source){\n  $clinit_EncFSBase64();\n  var arrayIndex, decodedInput, dstIdx, i, output, outputLen, srcIdx, work, workBits;\n  decodedInput = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, source.length, 1);\n  for (i = 0; i < source.length; i++) {\n    arrayIndex = source[i];\n    arrayIndex >= 0?(decodedInput[i] = _ENCFS_DECODABET[source[i]]):(decodedInput[i] = -9);\n  }\n  outputLen = ~~(source.length * 6 / 8);\n  output = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, outputLen, 1);\n  srcIdx = 0;\n  dstIdx = 0;\n  workBits = 0;\n  work = P0_longLit;\n  while (srcIdx < source.length) {\n    work = or(work, fromInt(decodedInput[srcIdx++] << workBits));\n    workBits += 6;\n    while (workBits >= 8) {\n      output[dstIdx++] = narrow_byte(toInt(and(work, Pff_longLit)));\n      work = shru(work, 8);\n      workBits -= 8;\n    }\n  }\n  return output;\n}\n\nvar B642AsciiTable, _ENCFS_DECODABET, _STANDARD_DECODABET;\nfunction EncFSException_0(message){\n  Exception_1.call(this, message);\n}\n\nfunction EncFSException_1(cause){\n  Exception_2.call(this, cause);\n}\n\ndefineSeed(340, 7, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]));\nfunction EncFSChecksumException_0(message){\n  EncFSException_0.call(this, message);\n}\n\ndefineSeed(339, 340, makeCastMap([Q$EncFSChecksumException, Q$Serializable, Q$Exception, Q$Throwable]), EncFSChecksumException_0);\nfunction $setBase64EncodedVolumeKey(this$static, base64EncodedVolumeKey){\n  this$static.base64EncodedVolumeKey = base64EncodedVolumeKey;\n}\n\nfunction $setBase64Salt(this$static, salt_0){\n  this$static.base64Salt = salt_0;\n}\n\nfunction $setChainedNameIV(this$static, chainedNameIV){\n  this$static.chainedNameIV = chainedNameIV;\n}\n\nfunction $setEncodedKeyLengthInBytes(this$static, encodedKeyLengthInBytes){\n  this$static.encodedKeyLengthInBytes = encodedKeyLengthInBytes;\n}\n\nfunction $setEncryptedFileBlockSizeInBytes(this$static, encryptedFileBlockSizeInBytes){\n  this$static.encryptedFileBlockSizeInBytes = encryptedFileBlockSizeInBytes;\n}\n\nfunction $setFilenameAlgorithm(this$static, filenameAlgorithm){\n  this$static.filenameAlgorithm = filenameAlgorithm;\n}\n\nfunction $setHolesAllowedInFiles(this$static, holesAllowedInFiles){\n  this$static.holesAllowedInFiles = holesAllowedInFiles;\n}\n\nfunction $setIterationForPasswordKeyDerivationCount(this$static, iterationForPasswordKeyDerivationCount){\n  this$static.iterationForPasswordKeyDerivationCount = iterationForPasswordKeyDerivationCount;\n}\n\nfunction $setNumberOfMACBytesForEachFileBlock(this$static, numberOfMACBytesForEachFileBlock){\n  this$static.numberOfMACBytesForEachFileBlock = numberOfMACBytesForEachFileBlock;\n}\n\nfunction $setNumberOfRandomBytesInEachMACHeader(this$static, numberOfRandomBytesInEachMACHeader){\n  this$static.numberOfRandomBytesInEachMACHeader = numberOfRandomBytesInEachMACHeader;\n}\n\nfunction $setSaltLengthBytes(this$static, saltLengthBytes){\n  this$static.saltLengthBytes = saltLengthBytes;\n}\n\nfunction $setSupportedExternalIVChaining(this$static, supportedExternalIVChaining){\n  this$static.supportedExternalIVChaining = supportedExternalIVChaining;\n}\n\nfunction $setUseUniqueIV(this$static, useUniqueIV){\n  this$static.useUniqueIV = useUniqueIV;\n}\n\nfunction $setVolumeKeySizeInBits(this$static, volumeKeySizeInBits){\n  this$static.volumeKeySizeInBits = volumeKeySizeInBits;\n}\n\nfunction $validate(this$static){\n  if (this$static.supportedExternalIVChaining && (!this$static.chainedNameIV || !this$static.useUniqueIV)) {\n    throw new EncFSInvalidConfigException_0('External IV chaining requires chained name IV and unique IV to be enabled');\n  }\n}\n\nfunction EncFSConfig_0(){\n}\n\ndefineSeed(341, 1, makeCastMap([Q$EncFSConfig]), EncFSConfig_0);\n_.toString$ = function toString_15(){\n  return 'EncFSConfig [volumeKeySizeInBits=' + this.volumeKeySizeInBits + ', encryptedFileBlockSizeInBytes=' + this.encryptedFileBlockSizeInBytes + ', useUniqueIV=' + this.useUniqueIV + ', chainedNameIV=' + this.chainedNameIV + ', holesAllowedInFiles=' + this.holesAllowedInFiles + ', encodedKeyLengthInBytes=' + this.encodedKeyLengthInBytes + ', base64EncodedVolumeKey=' + this.base64EncodedVolumeKey + ', saltLengthBytes=' + this.saltLengthBytes + ', base64Salt=' + this.base64Salt + ', iterationForPasswordKeyDerivationCount=' + this.iterationForPasswordKeyDerivationCount + ', algorithm=' + this.filenameAlgorithm + ', numberOfMACBytesForEachFileBlock=' + this.numberOfMACBytesForEachFileBlock + ', numberOfRandomBytesInEachMACHeader=' + this.numberOfRandomBytesInEachMACHeader + ', supportedExternalIVChaining=' + this.supportedExternalIVChaining + ']';\n}\n;\n_.chainedNameIV = false;\n_.encodedKeyLengthInBytes = 0;\n_.encryptedFileBlockSizeInBytes = 0;\n_.holesAllowedInFiles = false;\n_.iterationForPasswordKeyDerivationCount = 0;\n_.numberOfMACBytesForEachFileBlock = 0;\n_.numberOfRandomBytesInEachMACHeader = 0;\n_.saltLengthBytes = 0;\n_.supportedExternalIVChaining = false;\n_.useUniqueIV = false;\n_.volumeKeySizeInBits = 0;\nfunction parseConfig(fileProvider, callback){\n  $exists_0(fileProvider, '/.encfs6.xml', new EncFSConfigParser$1_0(callback, fileProvider));\n}\n\nfunction parseFile(inputStream){\n  var algName, cfgNode, cfgNodeList, config, data_0, doc, i, j, nameAlgChildNode, nameAlgNodeList, config_0;\n  config = (config_0 = new EncFSConfig_0 , $setFilenameAlgorithm(config_0, ($clinit_EncFSFilenameEncryptionAlgorithm() , BLOCK)) , config_0.volumeKeySizeInBits = 192 , config_0.encryptedFileBlockSizeInBytes = 1024 , config_0.useUniqueIV = true , config_0.chainedNameIV = true , config_0.holesAllowedInFiles = true , config_0.iterationForPasswordKeyDerivationCount = 5000 , config_0.numberOfMACBytesForEachFileBlock = 0 , config_0.numberOfRandomBytesInEachMACHeader = 0 , config_0.supportedExternalIVChaining = false , config_0);\n  data_0 = readToString(inputStream);\n  doc = ($clinit_XMLParser() , $parse(impl_3, data_0));\n  cfgNodeList = new NodeListImpl_0(getChildNodes(build(item_0((new NodeListImpl_0(($clinit_XMLParserImpl() , doc.jsObject.getElementsByTagNameNS('*', 'cfg')))).jsObject, 0)).jsObject));\n  if (getLength(cfgNodeList.jsObject) == 0) {\n    throw new EncFSInvalidConfigException_0('<cfg> element not present in config file');\n  }\n  for (i = 0; i < getLength(cfgNodeList.jsObject); i++) {\n    cfgNode = build(item_0(cfgNodeList.jsObject, i));\n    if (getNodeType(cfgNode.jsObject) == 1) {\n      if ($equals(getNodeName(cfgNode.jsObject), 'nameAlg')) {\n        nameAlgNodeList = new NodeListImpl_0(getChildNodes(cfgNode.jsObject));\n        for (j = 0; j < getLength(nameAlgNodeList.jsObject); j++) {\n          nameAlgChildNode = build(item_0(nameAlgNodeList.jsObject, j));\n          if ($equals(getNodeName(nameAlgChildNode.jsObject), 'name')) {\n            algName = getNodeValue(build(item_0((new NodeListImpl_0(getChildNodes(nameAlgChildNode.jsObject))).jsObject, 0)).jsObject);\n            try {\n              $setFilenameAlgorithm(config, parse_0(algName));\n            }\n             catch ($e0) {\n              $e0 = wrap_0($e0);\n              if (instanceOf($e0, Q$IllegalArgumentException)) {\n                throw new EncFSInvalidConfigException_0('Unknown name algorithm in config file: ' + algName);\n              }\n               else \n                throw unwrap($e0);\n            }\n          }\n        }\n      }\n       else \n        $equals(getNodeName(cfgNode.jsObject), 'keySize')?$setVolumeKeySizeInBits(config, __parseAndValidateInt(getNodeValue(build(item_0((new NodeListImpl_0(getChildNodes(cfgNode.jsObject))).jsObject, 0)).jsObject))):$equals(getNodeName(cfgNode.jsObject), 'blockSize')?$setEncryptedFileBlockSizeInBytes(config, __parseAndValidateInt(getNodeValue(build(item_0((new NodeListImpl_0(getChildNodes(cfgNode.jsObject))).jsObject, 0)).jsObject))):$equals(getNodeName(cfgNode.jsObject), 'uniqueIV')?$setUseUniqueIV(config, __parseAndValidateInt(getNodeValue(build(item_0((new NodeListImpl_0(getChildNodes(cfgNode.jsObject))).jsObject, 0)).jsObject)) == 1):$equals(getNodeName(cfgNode.jsObject), 'chainedNameIV')?$setChainedNameIV(config, __parseAndValidateInt(getNodeValue(build(item_0((new NodeListImpl_0(getChildNodes(cfgNode.jsObject))).jsObject, 0)).jsObject)) == 1):$equals(getNodeName(cfgNode.jsObject), 'allowHoles')?$setHolesAllowedInFiles(config, __parseAndValidateInt(getNodeValue(build(item_0((new NodeListImpl_0(getChildNodes(cfgNode.jsObject))).jsObject, 0)).jsObject)) == 1):$equals(getNodeName(cfgNode.jsObject), 'encodedKeySize')?$setEncodedKeyLengthInBytes(config, __parseAndValidateInt(getNodeValue(build(item_0((new NodeListImpl_0(getChildNodes(cfgNode.jsObject))).jsObject, 0)).jsObject))):$equals(getNodeName(cfgNode.jsObject), 'encodedKeyData')?$setBase64EncodedVolumeKey(config, getNodeValue(build(item_0((new NodeListImpl_0(getChildNodes(cfgNode.jsObject))).jsObject, 0)).jsObject)):$equals(getNodeName(cfgNode.jsObject), 'saltLen')?$setSaltLengthBytes(config, __parseAndValidateInt(getNodeValue(build(item_0((new NodeListImpl_0(getChildNodes(cfgNode.jsObject))).jsObject, 0)).jsObject))):$equals(getNodeName(cfgNode.jsObject), 'saltData')?$setBase64Salt(config, getNodeValue(build(item_0((new NodeListImpl_0(getChildNodes(cfgNode.jsObject))).jsObject, 0)).jsObject)):$equals(getNodeName(cfgNode.jsObject), 'kdfIterations')?$setIterationForPasswordKeyDerivationCount(config, __parseAndValidateInt(getNodeValue(build(item_0((new NodeListImpl_0(getChildNodes(cfgNode.jsObject))).jsObject, 0)).jsObject))):$equals(getNodeName(cfgNode.jsObject), 'blockMACBytes')?$setNumberOfMACBytesForEachFileBlock(config, __parseAndValidateInt(getNodeValue(build(item_0((new NodeListImpl_0(getChildNodes(cfgNode.jsObject))).jsObject, 0)).jsObject))):$equals(getNodeName(cfgNode.jsObject), 'blockMACRandBytes')?$setNumberOfRandomBytesInEachMACHeader(config, __parseAndValidateInt(getNodeValue(build(item_0((new NodeListImpl_0(getChildNodes(cfgNode.jsObject))).jsObject, 0)).jsObject))):$equals(getNodeName(cfgNode.jsObject), 'externalIVChaining') && $setSupportedExternalIVChaining(config, __parseAndValidateInt(getNodeValue(build(item_0((new NodeListImpl_0(getChildNodes(cfgNode.jsObject))).jsObject, 0)).jsObject)) == 1);\n    }\n  }\n  return config;\n}\n\nfunction $onFailure_21(this$static, reason){\n  $onFailure_32(this$static.val$callback, reason);\n}\n\nfunction $onSuccess_20(this$static, result){\n  if (!result.value_0) {\n    $onFailure_32(this$static.val$callback, new EncFSInvalidConfigException_0('No EncFS configuration file found'));\n    return;\n  }\n  $openInputStream_0(this$static.val$fileProvider, '/' + this$static.val$path, new EncFSConfigParser$1$1_0(this$static.val$callback));\n}\n\nfunction EncFSConfigParser$1_0(val$callback, val$fileProvider){\n  this.val$callback = val$callback;\n  this.val$fileProvider = val$fileProvider;\n  this.val$path = '.encfs6.xml';\n}\n\ndefineSeed(344, 1, {}, EncFSConfigParser$1_0);\n_.onFailure = function onFailure_20(reason){\n  $onFailure_21(this, dynamicCast(reason, Q$IOException));\n}\n;\n_.onSuccess = function onSuccess_20(result){\n  $onSuccess_20(this, dynamicCast(result, Q$Boolean));\n}\n;\nfunction $onFailure_22(this$static, reason){\n  $onFailure_32(this$static.val$callback, reason);\n}\n\nfunction $onSuccess_21(this$static, result){\n  var config, e;\n  try {\n    config = parseFile(result);\n    $validate(config);\n    $onSuccess_31(this$static.val$callback, config);\n  }\n   catch ($e0) {\n    $e0 = wrap_0($e0);\n    if (instanceOf($e0, Q$Exception)) {\n      e = $e0;\n      $onFailure_32(this$static.val$callback, e);\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n\nfunction EncFSConfigParser$1$1_0(val$callback){\n  this.val$callback = val$callback;\n}\n\ndefineSeed(345, 1, {}, EncFSConfigParser$1$1_0);\n_.onFailure = function onFailure_21(reason){\n  $onFailure_22(this, dynamicCast(reason, Q$IOException));\n}\n;\n_.onSuccess = function onSuccess_21(result){\n  $onSuccess_21(this, dynamicCast(result, Q$InputStream));\n}\n;\nfunction EncFSCorruptDataException_0(message){\n  EncFSException_0.call(this, message);\n}\n\nfunction EncFSCorruptDataException_1(cause){\n  EncFSException_1.call(this, cause);\n}\n\ndefineSeed(346, 340, makeCastMap([Q$EncFSCorruptDataException, Q$Serializable, Q$Exception, Q$Throwable]), EncFSCorruptDataException_0, EncFSCorruptDataException_1);\nfunction cipherInit(key, mac, opMode, cipher, iv, ivSeed){\n  var e;\n  try {\n    $init_1(cipher, opMode, key, newIvSpec(mac, iv, ivSeed));\n  }\n   catch ($e0) {\n    $e0 = wrap_0($e0);\n    if (instanceOf($e0, Q$InvalidKeyException)) {\n      e = $e0;\n      $printStackTrace(e, ($clinit_System() , err));\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n\nfunction computeChainedIV(volume, volumePath, config){\n  var chainIv;\n  chainIv = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 8, 1);\n  config.chainedNameIV && (chainIv = computeChainIv(volume, volumePath));\n  return chainIv;\n}\n\nfunction computeFileIV(chainIv, macBytes){\n  var fileIv, i;\n  fileIv = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 8, 1);\n  for (i = 0; i < 8; i++) {\n    fileIv[i] = narrow_byte(macBytes[i] ^ chainIv[i]);\n  }\n  return fileIv;\n}\n\nfunction decodeName(volume, fileName, volumePath){\n  var algorithm;\n  algorithm = volume.volumeConfig.filenameAlgorithm;\n  switch (algorithm.ordinal) {\n    case 2:\n      return $decrypt(new NullFilenameDecryptionStrategy_0(volume, volumePath), fileName);\n    case 0:\n      return $decrypt(new BlockFilenameDecryptionStrategy_0(volume, volumePath), fileName);\n    case 1:\n      return $decrypt(new StreamFilenameDecryptionStrategy_0(volume, volumePath), fileName);\n    default:throw new IllegalStateException_1('not implemented:' + algorithm);\n  }\n}\n\nfunction encodeName(volume, fileName, volumePath){\n  var algorithm;\n  algorithm = volume.volumeConfig.filenameAlgorithm;\n  switch (algorithm.ordinal) {\n    case 2:\n      return $encrypt(new NullFilenameEncryptionStrategy_0(volume, volumePath), fileName);\n    case 0:\n      return $encrypt(new BlockFilenameEncryptionStrategy_0(volume, volumePath), fileName);\n    case 1:\n      return $encrypt(new StreamFilenameEncryptionStrategy_0(volume, volumePath), fileName);\n    default:throw new IllegalStateException_1('not implemented:' + algorithm);\n  }\n}\n\nfunction encodePath(volume, pathName){\n  var pathPart, pathPart$index, pathPart$max, pathParts, result, tmpVolumePath, toEncFileName;\n  pathParts = $split(pathName, '/', 0);\n  tmpVolumePath = '/';\n  result = '';\n  pathName.indexOf('/') == 0 && (result += '/');\n  for (pathPart$index = 0 , pathPart$max = pathParts.length; pathPart$index < pathPart$max; ++pathPart$index) {\n    pathPart = pathParts[pathPart$index];\n    if (pathPart.length > 0) {\n      toEncFileName = encodeName(volume, pathPart, tmpVolumePath);\n      result.length > 0 && !$endsWith(result, '/') && (result += '/');\n      result += toEncFileName;\n      $endsWith(tmpVolumePath, '/') || (tmpVolumePath += '/');\n      tmpVolumePath += pathPart;\n    }\n  }\n  return result;\n}\n\nfunction flipBytes(input_0){\n  var bytesLeft, i, offset, result, toFlip;\n  result = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, input_0.length, 1);\n  offset = 0;\n  bytesLeft = input_0.length;\n  while (bytesLeft > 0) {\n    toFlip = 64 < bytesLeft?64:bytesLeft;\n    for (i = 0; i < toFlip; i++)\n      result[offset + i] = input_0[offset + toFlip - i - 1];\n    bytesLeft -= toFlip;\n    offset += toFlip;\n  }\n  return result;\n}\n\nfunction getBytesForBlockAlgorithm(curPath){\n  var encodeBytes, i, i0, padLen;\n  padLen = 16 - curPath.length % 16;\n  padLen == 0 && (padLen = 16);\n  encodeBytes = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, curPath.length + padLen, 1);\n  for (i0 = 0; i0 < curPath.length; i0++) {\n    encodeBytes[i0] = getBytesUtf8(curPath)[i0];\n  }\n  for (i = 0; i < padLen; i++) {\n    encodeBytes[curPath.length + i] = narrow_byte(padLen);\n  }\n  return encodeBytes;\n}\n\nfunction getCipher(cipherSpec){\n  var e;\n  try {\n    return getInstance(cipherSpec);\n  }\n   catch ($e0) {\n    $e0 = wrap_0($e0);\n    if (instanceOf($e0, Q$NoSuchAlgorithmException)) {\n      e = $e0;\n      throw new EncFSUnsupportedException_1(e);\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n\nfunction getMacBytes(bytes){\n  var macBytes;\n  macBytes = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 8, 1);\n  macBytes[6] = bytes[0];\n  macBytes[7] = bytes[1];\n  return macBytes;\n}\n\nfunction incrementIvSeedByOne(ivSeed){\n  if (ivSeed.length == 4) {\n    return convertIntToByteArrayBigEndian(convertBigEndianByteArrayToInt(ivSeed) + 1);\n  }\n   else if (ivSeed.length == 8) {\n    return convertLongToByteArrayBigEndian(add_0(convertByteArrayToLong(ivSeed), P1_longLit));\n  }\n   else {\n    throw new EncFSUnsupportedException_0;\n  }\n}\n\nfunction mac16_0(mac, input_0){\n  var mac16, mac32, mac64, mac32_0;\n  mac32 = (mac64 = mac64_0(mac, input_0) , mac32_0 = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 4, 1) , mac32_0[0] = narrow_byte(mac64[4] ^ mac64[0]) , mac32_0[1] = narrow_byte(mac64[5] ^ mac64[1]) , mac32_0[2] = narrow_byte(mac64[6] ^ mac64[2]) , mac32_0[3] = narrow_byte(mac64[7] ^ mac64[3]) , mac32_0);\n  mac16 = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 2, 1);\n  mac16[0] = narrow_byte(mac32[2] ^ mac32[0]);\n  mac16[1] = narrow_byte(mac32[3] ^ mac32[1]);\n  return mac16;\n}\n\nfunction mac16_1(mac, input_0, chainedIv){\n  var mac16, mac32;\n  mac32 = mac32_1(mac, input_0, chainedIv);\n  mac16 = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 2, 1);\n  mac16[0] = narrow_byte(mac32[2] ^ mac32[0]);\n  mac16[1] = narrow_byte(mac32[3] ^ mac32[1]);\n  return mac16;\n}\n\nfunction mac32_1(mac, input_0, chainedIv){\n  var mac32, mac64;\n  mac64 = mac64_3(mac, input_0, chainedIv);\n  mac32 = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 4, 1);\n  mac32[0] = narrow_byte(mac64[4] ^ mac64[0]);\n  mac32[1] = narrow_byte(mac64[5] ^ mac64[1]);\n  mac32[2] = narrow_byte(mac64[6] ^ mac64[2]);\n  mac32[3] = narrow_byte(mac64[7] ^ mac64[3]);\n  return mac32;\n}\n\nfunction mac64_0(mac, input_0){\n  var i, mac64, macResult;\n  macResult = ($update(mac, input_0, 0, input_0.length) , $doFinal_1(mac));\n  mac64 = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 8, 1);\n  for (i = 0; i < 19; i++)\n    mac64[i % 8] = mac64[i % 8] ^ macResult[i];\n  return mac64;\n}\n\nfunction mac64_1(mac, input_0, inputOffset){\n  return mac64_2(mac, input_0, inputOffset, input_0.length - inputOffset);\n}\n\nfunction mac64_2(mac, input_0, inputOffset, inputLen){\n  var i, mac64, macResult;\n  mac.builder = new StringBuilder_0;\n  $update(mac, input_0, inputOffset, inputLen);\n  macResult = $doFinal_1(mac);\n  mac64 = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 8, 1);\n  for (i = 0; i < 19; i++)\n    mac64[i % 8] = mac64[i % 8] ^ macResult[i];\n  return mac64;\n}\n\nfunction mac64_3(mac, input_0, chainedIv){\n  var concat, i, i0, mac64, macResult;\n  concat = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, input_0.length + chainedIv.length, 1);\n  arraycopy(input_0, 0, concat, 0, input_0.length);\n  for (i0 = input_0.length; i0 < input_0.length + chainedIv.length; i0++) {\n    concat[i0] = chainedIv[7 - (i0 - input_0.length)];\n  }\n  macResult = ($update(mac, concat, 0, concat.length) , $doFinal_1(mac));\n  mac64 = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 8, 1);\n  for (i = 0; i < 19; i++)\n    mac64[i % 8] = mac64[i % 8] ^ macResult[i];\n  chainedIv.length > 0 && arraycopy(mac64, 0, chainedIv, 0, 8);\n  return mac64;\n}\n\nfunction newIvSpec(mac, iv, ivSeed){\n  var concat, i, i0, ivResult;\n  concat = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 24, 1);\n  arraycopy(iv, 0, concat, 0, 16);\n  if (ivSeed.length == 4) {\n    for (i = 16; i < 20; i++)\n      concat[i] = ivSeed[19 - i];\n    for (i0 = 20; i0 < 24; i0++)\n      concat[i0] = 0;\n  }\n   else {\n    for (i = 16; i < 24; i++)\n      concat[i] = ivSeed[23 - i];\n  }\n  ivResult = copyOfRange(($update(mac, concat, 0, concat.length) , $doFinal_1(mac)), 0, 16);\n  return new IvParameterSpec_0(ivResult);\n}\n\nfunction newMac(key){\n  var hmac, hmacKey;\n  try {\n    hmac = new Mac$HmacSHA1Wrapper_0;\n  }\n   catch ($e0) {\n    $e0 = wrap_0($e0);\n    if (!instanceOf($e0, Q$NoSuchAlgorithmException))\n      throw unwrap($e0);\n  }\n  hmacKey = new SecretKeySpec_0(clone(key.key), 'HmacSHA1');\n  hmac.key = hmacKey;\n  hmac.builder = new StringBuilder_0;\n  return hmac;\n}\n\nfunction shuffleBytes(buf){\n  var i, size_0;\n  size_0 = buf.length;\n  for (i = 0; i < size_0 - 1; ++i) {\n    buf[i + 1] = buf[i + 1] ^ buf[i];\n  }\n}\n\nfunction unshuffleBytes(input_0){\n  var i;\n  for (i = input_0.length - 1; i > 0; i--) {\n    input_0[i] = input_0[i] ^ input_0[i - 1];\n  }\n}\n\nfunction $clinit_EncFSFile(){\n  $clinit_EncFSFile = nullMethod;\n  LOG_5 = ($clinit_Logger() , $getLoggerHelper('de.voot.encfsgwt.shared.mrpdaemon.EncFSFile'));\n}\n\nfunction $listFiles_3(this$static, callback){\n  var dirName, encDirName;\n  this$static.plainFileInfo.directory || callback.onSuccess(null);\n  this$static == this$static.volume.rootDir?(encDirName = '/'):(encDirName = $getPath(this$static.cipherFileInfo));\n  dirName = $getPath(this$static.plainFileInfo);\n  $listFiles_2(this$static.volume.fileProvider, encDirName, new EncFSFile$2_0(this$static, callback, dirName));\n}\n\nfunction $openInputStream_1(this$static, callback){\n  $openInputStream_0(this$static.volume.fileProvider, $getPath(this$static.cipherFileInfo), new EncFSFile$3_0(this$static, callback));\n}\n\nfunction EncFSFile_0(volume, plainFileInfo, cipherFileInfo){\n  $clinit_EncFSFile();\n  this.volume = volume;\n  this.plainFileInfo = plainFileInfo;\n  this.cipherFileInfo = cipherFileInfo;\n}\n\ndefineSeed(348, 1, makeCastMap([Q$EncFSFile]), EncFSFile_0);\nvar LOG_5;\nfunction $onFailure_23(this$static, reason){\n  this$static.val$callback.onFailure(reason);\n}\n\nfunction $onSuccess_22(this$static, fileInfos){\n  var decEncFileInfo, decodedFileName, e, fileInfo, fileInfo$iterator, result;\n  result = new ArrayList_1(fileInfos.size_1());\n  for (fileInfo$iterator = fileInfos.iterator(); fileInfo$iterator.hasNext();) {\n    fileInfo = dynamicCast(fileInfo$iterator.next_0(), Q$EncFSFileInfo);\n    if ($equals('.encfs6.xml', fileInfo.name_0)) {\n      continue;\n    }\n    try {\n      decodedFileName = decodeName(this$static.this$0.volume, fileInfo.name_0, this$static.val$dirName);\n    }\n     catch ($e0) {\n      $e0 = wrap_0($e0);\n      if (instanceOf($e0, Q$EncFSCorruptDataException)) {\n        e = $e0;\n        $log_2(($clinit_EncFSFile() , LOG_5), ($clinit_Level() , WARNING), 'Skipping file <' + fileInfo.name_0 + '> due to a corrupted data exception', e);\n        decodedFileName = null;\n      }\n       else if (instanceOf($e0, Q$EncFSChecksumException)) {\n        e = $e0;\n        $log_2(($clinit_EncFSFile() , LOG_5), ($clinit_Level() , WARNING), 'Skipping file <' + fileInfo.name_0 + '> due to a checksum exception', e);\n        decodedFileName = null;\n      }\n       else \n        throw unwrap($e0);\n    }\n    if (decodedFileName != null) {\n      decEncFileInfo = getDecodedFileInfo(this$static.this$0.volume, this$static.val$dirName, decodedFileName, fileInfo);\n      $add_2(result, new EncFSFile_0(this$static.this$0.volume, decEncFileInfo, fileInfo));\n    }\n  }\n  this$static.val$callback.onSuccess(dynamicCast($toArray(result, initDim(_3Lde_voot_encfsgwt_shared_mrpdaemon_EncFSFile_2_classLit, makeCastMap([Q$EncFSFile_$1, Q$Serializable, Q$Object_$1]), Q$EncFSFile, result.size_0, 0)), Q$EncFSFile_$1));\n}\n\nfunction EncFSFile$2_0(this$0, val$callback, val$dirName){\n  this.this$0 = this$0;\n  this.val$callback = val$callback;\n  this.val$dirName = val$dirName;\n}\n\ndefineSeed(349, 1, {}, EncFSFile$2_0);\n_.onFailure = function onFailure_22(reason){\n  $onFailure_23(this, dynamicCast(reason, Q$IOException));\n}\n;\n_.onSuccess = function onSuccess_22(fileInfos){\n  $onSuccess_22(this, dynamicCast(fileInfos, Q$List));\n}\n;\nfunction $onFailure_24(this$static, reason){\n  this$static.val$callback.onFailure(reason);\n}\n\nfunction $onSuccess_23(this$static, result){\n  var e, inputStream;\n  try {\n    inputStream = new EncFSInputStream_0(this$static.this$0.volume, result, $getPath(this$static.this$0.plainFileInfo));\n    this$static.val$callback.onSuccess(inputStream);\n  }\n   catch ($e0) {\n    $e0 = wrap_0($e0);\n    if (instanceOf($e0, Q$Exception)) {\n      e = $e0;\n      this$static.val$callback.onFailure(e);\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n\nfunction EncFSFile$3_0(this$0, val$callback){\n  this.this$0 = this$0;\n  this.val$callback = val$callback;\n}\n\ndefineSeed(350, 1, {}, EncFSFile$3_0);\n_.onFailure = function onFailure_23(reason){\n  $onFailure_24(this, dynamicCast(reason, Q$IOException));\n}\n;\n_.onSuccess = function onSuccess_23(result){\n  $onSuccess_23(this, dynamicCast(result, Q$InputStream));\n}\n;\nfunction $getPath(this$static){\n  var result;\n  $endsWith(this$static.parentPath, '/') || this$static.name_0.indexOf('/') == 0?(result = this$static.parentPath + this$static.name_0):(result = combinePath(this$static.parentPath, this$static.name_0));\n  return result;\n}\n\nfunction EncFSFileInfo_0(name_0, parentPath, directory, lastModified, size_0, readable, writable, executable){\n  if (name_0.indexOf('/') == 0 && !$equals(name_0, '/')) {\n    throw new IllegalArgumentException_1('Invalid name ' + name_0);\n  }\n  this.name_0 = name_0;\n  this.parentPath = parentPath;\n  this.directory = directory;\n  this.lastModified = lastModified;\n  this.size_0 = size_0;\n  this.readable = readable;\n  this.writable = writable;\n  this.executable = executable;\n}\n\nfunction getDecodedFileInfo(volume, decodedParentPath, decodedFileName, fileInfo){\n  var size_0;\n  fileInfo.directory?(size_0 = P0_longLit):(size_0 = $getDecryptedFileLength(volume, fileInfo.size_0));\n  return new EncFSFileInfo_0(decodedFileName, decodedParentPath, fileInfo.directory, fileInfo.lastModified, size_0, fileInfo.readable, fileInfo.writable, fileInfo.executable);\n}\n\ndefineSeed(351, 1, makeCastMap([Q$EncFSFileInfo]), EncFSFileInfo_0);\n_.directory = false;\n_.executable = false;\n_.lastModified = P0_longLit;\n_.readable = false;\n_.size_0 = P0_longLit;\n_.writable = false;\nfunction $clinit_EncFSFilenameEncryptionAlgorithm(){\n  $clinit_EncFSFilenameEncryptionAlgorithm = nullMethod;\n  BLOCK = new EncFSFilenameEncryptionAlgorithm_0('BLOCK', 0, 'nameio/block');\n  STREAM = new EncFSFilenameEncryptionAlgorithm_0('STREAM', 1, 'nameio/stream');\n  NULL = new EncFSFilenameEncryptionAlgorithm_0('NULL', 2, 'nameio/null');\n  $VALUES_2 = initValues(_3Lde_voot_encfsgwt_shared_mrpdaemon_EncFSFilenameEncryptionAlgorithm_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$EncFSFilenameEncryptionAlgorithm, [BLOCK, STREAM, NULL]);\n}\n\nfunction EncFSFilenameEncryptionAlgorithm_0(enum$name, enum$ordinal, identifier){\n  Enum_0.call(this, enum$name, enum$ordinal);\n  this.identifier = identifier;\n}\n\n",
"function parse_0(identifier){\n  $clinit_EncFSFilenameEncryptionAlgorithm();\n  var a, a$array, a$index, a$max;\n  for (a$array = $VALUES_2 , a$index = 0 , a$max = a$array.length; a$index < a$max; ++a$index) {\n    a = a$array[a$index];\n    if ($equals(a.identifier, identifier)) {\n      return a;\n    }\n  }\n  throw new IllegalArgumentException_1('could not parse: ' + identifier);\n}\n\nfunction values_3(){\n  $clinit_EncFSFilenameEncryptionAlgorithm();\n  return $VALUES_2;\n}\n\ndefineSeed(352, 39, makeCastMap([Q$EncFSFilenameEncryptionAlgorithm, Q$Serializable, Q$Comparable, Q$Enum]), EncFSFilenameEncryptionAlgorithm_0);\nvar $VALUES_2, BLOCK, NULL, STREAM;\nfunction $getBlockIV(this$static){\n  var fileIvLong;\n  fileIvLong = convertByteArrayToLong(this$static.fileIv);\n  return convertLongToByteArrayBigEndian(xor(fromInt(this$static.blockNum), fileIvLong));\n}\n\nfunction $read(this$static, output, offset, size_0){\n  var bytesRead, bytesToCopy, destOffset, e, ret;\n  bytesRead = 0;\n  destOffset = offset;\n  while (bytesRead < size_0) {\n    if (this$static.blockBuf == null || this$static.bufCursor == this$static.blockBuf.length) {\n      try {\n        ret = $readBlock(this$static);\n      }\n       catch ($e0) {\n        $e0 = wrap_0($e0);\n        if (instanceOf($e0, Q$EncFSCorruptDataException)) {\n          e = $e0;\n          throw new IOException_1(e);\n        }\n         else if (instanceOf($e0, Q$EncFSUnsupportedException)) {\n          e = $e0;\n          throw new IOException_1(e);\n        }\n         else \n          throw unwrap($e0);\n      }\n      if (ret < 0) {\n        return bytesRead == 0?-1:bytesRead;\n      }\n    }\n    bytesToCopy = min_0(this$static.blockBuf.length - this$static.bufCursor, size_0 - bytesRead);\n    arraycopy(this$static.blockBuf, this$static.bufCursor, output, destOffset, bytesToCopy);\n    this$static.bufCursor += bytesToCopy;\n    bytesRead += bytesToCopy;\n    destOffset += bytesToCopy;\n  }\n  return bytesRead;\n}\n\nfunction $readBlock(this$static){\n  var aCipherBuf, aCipherBuf$index, aCipherBuf$max, bytesRead, cipherBuf, i, lastBytesRead, mac, zeroBlock;\n  cipherBuf = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, this$static.blockSize, 1);\n  zeroBlock = false;\n  bytesRead = 0;\n  while (bytesRead < this$static.blockSize) {\n    lastBytesRead = this$static.in_$.read_2(cipherBuf, bytesRead, this$static.blockSize - bytesRead);\n    if (lastBytesRead > 0) {\n      bytesRead += lastBytesRead;\n    }\n     else if (lastBytesRead < 0) {\n      bytesRead == 0 && (bytesRead = -1);\n      break;\n    }\n  }\n  if (bytesRead == this$static.blockSize) {\n    if (this$static.config.holesAllowedInFiles) {\n      zeroBlock = true;\n      for (aCipherBuf$index = 0 , aCipherBuf$max = cipherBuf.length; aCipherBuf$index < aCipherBuf$max; ++aCipherBuf$index) {\n        aCipherBuf = cipherBuf[aCipherBuf$index];\n        if (aCipherBuf != 0) {\n          zeroBlock = false;\n          break;\n        }\n      }\n    }\n    zeroBlock?(this$static.blockBuf = cipherBuf):(this$static.blockBuf = blockOperation(this$static.volume, $getBlockIV(this$static), cipherBuf, 2));\n    this$static.bufCursor = this$static.blockHeaderSize;\n    ++this$static.blockNum;\n  }\n   else if (bytesRead > 0) {\n    this$static.blockBuf = streamDecrypt_2(this$static.volume, $getBlockIV(this$static), cipherBuf, bytesRead);\n    this$static.bufCursor = this$static.blockHeaderSize;\n    ++this$static.blockNum;\n  }\n  if (bytesRead > 0 && this$static.blockHeaderSize > 0 && !zeroBlock) {\n    mac = mac64_1(this$static.volume.volumeMAC, this$static.blockBuf, this$static.numMACBytes);\n    for (i = 0; i < this$static.numMACBytes; i++) {\n      if (mac[7 - i] != this$static.blockBuf[i]) {\n        throw new EncFSCorruptDataException_0('Block MAC mismatch');\n      }\n    }\n  }\n  return bytesRead;\n}\n\nfunction EncFSInputStream_0(volume, in_$, volumePath){\n  var fileHeader, initIv, numRandBytes;\n  this.in_$ = in_$;\n  this.volume = volume;\n  this.config = volume.volumeConfig;\n  this.blockSize = this.config.encryptedFileBlockSizeInBytes;\n  this.numMACBytes = this.config.numberOfMACBytesForEachFileBlock;\n  numRandBytes = this.config.numberOfRandomBytesInEachMACHeader;\n  this.blockHeaderSize = this.numMACBytes + numRandBytes;\n  this.blockBuf = null;\n  this.bufCursor = 0;\n  this.blockNum = 0;\n  if (this.config.useUniqueIV) {\n    fileHeader = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 8, 1);\n    try {\n      in_$.read_1(fileHeader);\n    }\n     catch ($e0) {\n      $e0 = wrap_0($e0);\n      if (instanceOf($e0, Q$IOException)) {\n        throw new EncFSCorruptDataException_0(\"Could't read file IV\");\n      }\n       else \n        throw unwrap($e0);\n    }\n    this.config.supportedExternalIVChaining?(initIv = computeChainIv(volume, volumePath)):(initIv = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 8, 1));\n    this.fileIv = streamDecrypt_1(volume, initIv, fileHeader);\n  }\n   else {\n    this.fileIv = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 8, 1);\n  }\n}\n\ndefineSeed(353, 323, makeCastMap([Q$InputStream, Q$EncFSInputStream]), EncFSInputStream_0);\n_.read = function read_6(){\n  var oneByte, ret;\n  oneByte = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 1, 1);\n  ret = $read(this, oneByte, 0, 1);\n  if (ret == 1) {\n    return oneByte[0];\n  }\n  return ret;\n}\n;\n_.read_1 = function read_7(b){\n  return $read(this, b, 0, b.length);\n}\n;\n_.read_2 = function read_8(output, offset, size_0){\n  return $read(this, output, offset, size_0);\n}\n;\n_.blockHeaderSize = 0;\n_.blockNum = 0;\n_.blockSize = 0;\n_.bufCursor = 0;\n_.numMACBytes = 0;\nfunction EncFSInvalidConfigException_0(message){\n  EncFSException_0.call(this, message);\n}\n\nfunction EncFSInvalidConfigException_1(cause){\n  EncFSException_1.call(this, cause);\n}\n\ndefineSeed(354, 340, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), EncFSInvalidConfigException_0, EncFSInvalidConfigException_1);\nfunction EncFSInvalidPasswordException_0(cause){\n  EncFSException_1.call(this, cause);\n}\n\ndefineSeed(355, 340, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), EncFSInvalidPasswordException_0);\nfunction EncFSUnsupportedException_0(){\n  EncFSException_0.call(this, 'Unsupported IV length');\n}\n\nfunction EncFSUnsupportedException_1(cause){\n  EncFSException_1.call(this, cause);\n}\n\ndefineSeed(356, 340, makeCastMap([Q$EncFSUnsupportedException, Q$Serializable, Q$Exception, Q$Throwable]), EncFSUnsupportedException_0, EncFSUnsupportedException_1);\nfunction convertBigEndianByteArrayToInt(b){\n  var i, result, shift_0;\n  if (b.length > 4) {\n    return -1;\n  }\n  result = 0;\n  for (i = 0; i < b.length; i++) {\n    shift_0 = (b.length - 1 - i) * 8;\n    result |= (b[i] & 255) << shift_0;\n  }\n  return result;\n}\n\nfunction convertByteArrayToLong(b){\n  var i, result, shift_0;\n  if (b.length > 8) {\n    return N1_longLit;\n  }\n  result = P0_longLit;\n  for (i = 0; i < b.length; i++) {\n    shift_0 = (b.length - 1 - i) * 8;\n    result = or(result, shl(fromInt(b[i] & 255), shift_0));\n  }\n  return result;\n}\n\nfunction convertIntToByteArrayBigEndian(i){\n  var j, result, shift_0;\n  result = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 4, 1);\n  for (j = 0; j < result.length; j++) {\n    shift_0 = (result.length - 1 - j) * 8;\n    result[j] = narrow_byte(i >> shift_0 & 255);\n  }\n  return result;\n}\n\nfunction convertLongToByteArrayBigEndian(l_0){\n  var j, result, shift_0;\n  result = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 8, 1);\n  for (j = 0; j < result.length; j++) {\n    shift_0 = (result.length - 1 - j) * 8;\n    result[j] = toInt(and(shr(l_0, shift_0), Pff_longLit)) << 24 >> 24;\n  }\n  return result;\n}\n\nfunction $copyIVdata(keyData, keyLength){\n  var ivLength;\n  ivLength = keyData.length - keyLength;\n  if (ivLength != 16) {\n    throw new EncFSInvalidConfigException_0('Non-standard IV length');\n  }\n  return copyOfRange(keyData, keyLength, keyLength + 16);\n}\n\nfunction $createVolumeMAC(this$static){\n  var e;\n  try {\n    return newMac(this$static.volumeKey);\n  }\n   catch ($e0) {\n    $e0 = wrap_0($e0);\n    if (instanceOf($e0, Q$InvalidKeyException)) {\n      e = $e0;\n      throw new EncFSInvalidConfigException_1(e);\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n\nfunction $getDecodedFileInfo(this$static, filePath, fileInfo){\n  var decDirName, decFilename, decodedFileInfo, lastIndexOfSeparator;\n  if ($equals(filePath, '/')) {\n    decodedFileInfo = getDecodedFileInfo(this$static, '', '/', fileInfo);\n  }\n   else {\n    lastIndexOfSeparator = filePath.lastIndexOf('/');\n    if (filePath.lastIndexOf('/') == 0) {\n      decDirName = '/';\n      decFilename = $substring(filePath, 1);\n    }\n     else {\n      decDirName = $substring_0(filePath, 0, lastIndexOfSeparator);\n      decFilename = $substring(filePath, lastIndexOfSeparator + 1);\n    }\n    decodedFileInfo = getDecodedFileInfo(this$static, decDirName, decFilename, fileInfo);\n  }\n  return decodedFileInfo;\n}\n\nfunction $getDecryptedFileLength(this$static, encryptedFileLength){\n  var blockLength, headerLength, numBlocks, size_0;\n  size_0 = encryptedFileLength;\n  if (eq(encryptedFileLength, P0_longLit)) {\n    return P0_longLit;\n  }\n  this$static.volumeConfig.useUniqueIV && (size_0 = sub_0(size_0, P8_longLit));\n  headerLength = fromInt(this$static.volumeConfig.numberOfMACBytesForEachFileBlock + this$static.volumeConfig.numberOfRandomBytesInEachMACHeader);\n  if (gt(headerLength, P0_longLit)) {\n    blockLength = add_0(fromInt(this$static.volumeConfig.encryptedFileBlockSizeInBytes), headerLength);\n    numBlocks = add_0(div(sub_0(size_0, P1_longLit), blockLength), P1_longLit);\n    size_0 = sub_0(size_0, mul(numBlocks, headerLength));\n  }\n  return size_0;\n}\n\nfunction $getFile(this$static, filePath, callback){\n  var e, encryptedPath;\n  $validateAbsoluteFileName(filePath);\n  try {\n    encryptedPath = encodePath(this$static, filePath);\n  }\n   catch ($e0) {\n    $e0 = wrap_0($e0);\n    if (instanceOf($e0, Q$EncFSCorruptDataException)) {\n      e = $e0;\n      callback.onFailure(e);\n      return;\n    }\n     else \n      throw unwrap($e0);\n  }\n  $exists_0(this$static.fileProvider, encryptedPath, new EncFSVolume$2_0(this$static, callback, encryptedPath, filePath, this$static));\n}\n\nfunction $readConfigAndInitVolume(this$static, callback){\n  var e, keyData, keyLength;\n  try {\n    keyData = decryptVolumeKey(this$static.volumeConfig, this$static.passwordDerivedKeyData);\n  }\n   catch ($e0) {\n    $e0 = wrap_0($e0);\n    if (instanceOf($e0, Q$EncFSChecksumException)) {\n      e = $e0;\n      throw new EncFSInvalidPasswordException_0(e);\n    }\n     else \n      throw unwrap($e0);\n  }\n  keyLength = ~~(this$static.volumeConfig.volumeKeySizeInBits / 8);\n  if (keyData.length < keyLength) {\n    throw new EncFSInvalidConfigException_0('Key size too large');\n  }\n  this$static.volumeKey = new SecretKeySpec_0(copyOfRange(keyData, 0, keyLength), 'AES');\n  this$static.volumeIV = $copyIVdata(keyData, keyLength);\n  this$static.volumeMAC = $createVolumeMAC(this$static);\n  this$static.streamCipher = getCipher('AES/CFB/NoPadding');\n  this$static.blockCipher = getCipher('AES/CBC/NoPadding');\n  $getFile(this$static, '/', new EncFSVolume$1_0(this$static, callback));\n}\n\nfunction $setPasswordDerivedKeyData(this$static, passwordDerivedKeyData){\n  this$static.passwordDerivedKeyData = passwordDerivedKeyData;\n}\n\nfunction $setVolumeConfig(this$static, volumeConfig){\n  this$static.volumeConfig = volumeConfig;\n}\n\nfunction $validateAbsoluteFileName(fileName){\n  if (fileName == null) {\n    throw new IllegalArgumentException_1('filePath must not be null');\n  }\n  if (fileName.length == 0) {\n    throw new IllegalArgumentException_1('filePath must not be blank');\n  }\n  if (fileName.indexOf('/') != 0) {\n    throw new IllegalArgumentException_1('filePath must absolute');\n  }\n}\n\nfunction EncFSVolume_0(){\n}\n\nfunction combinePath(dirPath, fileName){\n  return $equals(dirPath, '/')?'/' + fileName:dirPath + '/' + fileName;\n}\n\ndefineSeed(358, 1, makeCastMap([Q$EncFSVolume]), EncFSVolume_0);\nfunction $onFailure_25(this$static, reason){\n  $onFailure_35(this$static.val$callback, reason);\n}\n\nfunction $onSuccess_24(this$static, result){\n  this$static.this$0.rootDir = result;\n  $onSuccess_34(this$static.val$callback);\n}\n\nfunction EncFSVolume$1_0(this$0, val$callback){\n  this.this$0 = this$0;\n  this.val$callback = val$callback;\n}\n\ndefineSeed(359, 1, {}, EncFSVolume$1_0);\n_.onFailure = function onFailure_24(reason){\n  $onFailure_25(this, dynamicCast(reason, Q$Exception));\n}\n;\n_.onSuccess = function onSuccess_24(result){\n  $onSuccess_24(this, dynamicCast(result, Q$EncFSFile));\n}\n;\nfunction $onFailure_26(this$static, reason){\n  this$static.val$callback.onFailure(reason);\n}\n\nfunction $onSuccess_25(this$static, result){\n  if (!result.value_0) {\n    this$static.val$callback.onFailure(new FileNotFoundException_0);\n    return;\n  }\n  $getFileInfo_0(this$static.this$0.fileProvider, this$static.val$encryptedPath, new EncFSVolume$2$1_0(this$static, this$static.val$callback, this$static.val$filePath, this$static.val$v));\n}\n\nfunction EncFSVolume$2_0(this$0, val$callback, val$encryptedPath, val$filePath, val$v){\n  this.this$0 = this$0;\n  this.val$callback = val$callback;\n  this.val$encryptedPath = val$encryptedPath;\n  this.val$filePath = val$filePath;\n  this.val$v = val$v;\n}\n\ndefineSeed(360, 1, {}, EncFSVolume$2_0);\n_.onFailure = function onFailure_25(reason){\n  $onFailure_26(this, dynamicCast(reason, Q$IOException));\n}\n;\n_.onSuccess = function onSuccess_25(result){\n  $onSuccess_25(this, dynamicCast(result, Q$Boolean));\n}\n;\nfunction $onFailure_27(this$static, reason){\n  this$static.val$callback.onFailure(reason);\n}\n\nfunction $onSuccess_26(this$static, fileInfo){\n  var decodedFileInfo, f;\n  decodedFileInfo = $getDecodedFileInfo(this$static.this$1.this$0, this$static.val$filePath, fileInfo);\n  f = new EncFSFile_0(this$static.val$v, decodedFileInfo, fileInfo);\n  this$static.val$callback.onSuccess(f);\n}\n\nfunction EncFSVolume$2$1_0(this$1, val$callback, val$filePath, val$v){\n  this.this$1 = this$1;\n  this.val$callback = val$callback;\n  this.val$filePath = val$filePath;\n  this.val$v = val$v;\n}\n\ndefineSeed(361, 1, {}, EncFSVolume$2$1_0);\n_.onFailure = function onFailure_26(reason){\n  $onFailure_27(this, dynamicCast(reason, Q$IOException));\n}\n;\n_.onSuccess = function onSuccess_26(fileInfo){\n  $onSuccess_26(this, dynamicCast(fileInfo, Q$EncFSFileInfo));\n}\n;\nfunction $onFailure_28(this$static, reason){\n  $onFailure_12(this$static.val$callback, reason);\n}\n\nfunction $onSuccess_27(this$static, file){\n  $listFiles_3(file, new EncFSVolume$5$1_0(this$static.val$callback));\n}\n\nfunction EncFSVolume$5_0(val$callback){\n  this.val$callback = val$callback;\n}\n\ndefineSeed(362, 1, {}, EncFSVolume$5_0);\n_.onFailure = function onFailure_27(reason){\n  $onFailure_28(this, dynamicCast(reason, Q$Exception));\n}\n;\n_.onSuccess = function onSuccess_27(file){\n  $onSuccess_27(this, dynamicCast(file, Q$EncFSFile));\n}\n;\nfunction $onFailure_29(this$static, reason){\n  $onFailure_12(this$static.val$callback, reason);\n}\n\nfunction $onSuccess_28(this$static, result){\n  $onSuccess_11(this$static.val$callback, result);\n}\n\nfunction EncFSVolume$5$1_0(val$callback){\n  this.val$callback = val$callback;\n}\n\ndefineSeed(363, 1, {}, EncFSVolume$5$1_0);\n_.onFailure = function onFailure_28(reason){\n  $onFailure_29(this, dynamicCast(reason, Q$Exception));\n}\n;\n_.onSuccess = function onSuccess_28(result){\n  $onSuccess_28(this, dynamicCast(result, Q$EncFSFile_$1));\n}\n;\nfunction $onFailure_30(this$static, reason){\n  $onFailure_14(this$static.val$callback, reason);\n}\n\nfunction $onSuccess_29(this$static, result){\n  $openInputStream_1(result, new EncFSVolume$6$1_0(this$static.val$callback));\n}\n\nfunction EncFSVolume$6_0(val$callback){\n  this.val$callback = val$callback;\n}\n\ndefineSeed(364, 1, {}, EncFSVolume$6_0);\n_.onFailure = function onFailure_29(reason){\n  $onFailure_30(this, dynamicCast(reason, Q$Exception));\n}\n;\n_.onSuccess = function onSuccess_29(result){\n  $onSuccess_29(this, dynamicCast(result, Q$EncFSFile));\n}\n;\nfunction $onFailure_31(this$static, reason){\n  $onFailure_14(this$static.val$callback, reason);\n}\n\nfunction $onSuccess_30(this$static, result){\n  $onSuccess_13(this$static.val$callback, result);\n}\n\nfunction EncFSVolume$6$1_0(val$callback){\n  this.val$callback = val$callback;\n}\n\ndefineSeed(365, 1, {}, EncFSVolume$6$1_0);\n_.onFailure = function onFailure_30(reason){\n  $onFailure_31(this, dynamicCast(reason, Q$Exception));\n}\n;\n_.onSuccess = function onSuccess_30(result){\n  $onSuccess_30(this, dynamicCast(result, Q$EncFSInputStream));\n}\n;\nfunction EncFSVolumeBuilder$ConfigBuilder_0(volume){\n  this.volume = volume;\n}\n\nfunction getInstance_0(volume, callback){\n  var fileProvider;\n  fileProvider = volume.fileProvider;\n  parseConfig(fileProvider, new EncFSVolumeBuilder$ConfigBuilder$1_0(callback, volume));\n}\n\ndefineSeed(366, 1, makeCastMap([Q$EncFSVolumeBuilder$ConfigBuilder]), EncFSVolumeBuilder$ConfigBuilder_0);\nfunction $onFailure_32(this$static, reason){\n  $onFailure_33(this$static.val$callback, reason);\n}\n\nfunction $onSuccess_31(this$static, volumeConfiguration){\n  $setVolumeConfig(this$static.val$volume, volumeConfiguration);\n  $onSuccess_32(this$static.val$callback, new EncFSVolumeBuilder$ConfigBuilder_0(this$static.val$volume));\n}\n\nfunction EncFSVolumeBuilder$ConfigBuilder$1_0(val$callback, val$volume){\n  this.val$callback = val$callback;\n  this.val$volume = val$volume;\n}\n\ndefineSeed(367, 1, {}, EncFSVolumeBuilder$ConfigBuilder$1_0);\n_.onFailure = function onFailure_31(reason){\n  $onFailure_32(this, dynamicCast(reason, Q$Exception));\n}\n;\n_.onSuccess = function onSuccess_31(volumeConfiguration){\n  $onSuccess_31(this, dynamicCast(volumeConfiguration, Q$EncFSConfig));\n}\n;\nfunction $withPassword(this$static, password, callback){\n  $withPbkdf2Provider(this$static, new EncFSVolumeBuilder$FileProviderBuilder$2_0(callback, password));\n}\n\nfunction $withPbkdf2Provider(this$static, callback){\n  getInstance_0(this$static.volume, new EncFSVolumeBuilder$FileProviderBuilder$1_0(callback));\n}\n\nfunction EncFSVolumeBuilder$FileProviderBuilder_0(volume, fileProvider){\n  this.volume = volume;\n  volume.fileProvider = fileProvider;\n}\n\ndefineSeed(368, 1, {}, EncFSVolumeBuilder$FileProviderBuilder_0);\nfunction $onFailure_33(this$static, reason){\n  $onFailure_34(this$static.val$callback, reason);\n}\n\nfunction $onSuccess_32(this$static, result){\n  $onSuccess_33(this$static.val$callback, new EncFSVolumeBuilder$Pbkdf2ProviderBuilder_0(result.volume));\n}\n\nfunction EncFSVolumeBuilder$FileProviderBuilder$1_0(val$callback){\n  this.val$callback = val$callback;\n}\n\ndefineSeed(369, 1, {}, EncFSVolumeBuilder$FileProviderBuilder$1_0);\n_.onFailure = function onFailure_32(reason){\n  $onFailure_33(this, dynamicCast(reason, Q$Exception));\n}\n;\n_.onSuccess = function onSuccess_32(result){\n  $onSuccess_32(this, dynamicCast(result, Q$EncFSVolumeBuilder$ConfigBuilder));\n}\n;\nfunction $onFailure_34(this$static, reason){\n  $onFailure_7(this$static.val$callback, reason);\n}\n\nfunction $onSuccess_33(this$static, result){\n  $onSuccess_6(this$static.val$callback, $withPassword_0(result, this$static.val$password));\n}\n\nfunction EncFSVolumeBuilder$FileProviderBuilder$2_0(val$callback, val$password){\n  this.val$callback = val$callback;\n  this.val$password = val$password;\n}\n\ndefineSeed(370, 1, {}, EncFSVolumeBuilder$FileProviderBuilder$2_0);\n_.onFailure = function onFailure_33(reason){\n  $onFailure_34(this, dynamicCast(reason, Q$Exception));\n}\n;\n_.onSuccess = function onSuccess_33(result){\n  $onSuccess_33(this, dynamicCast(result, Q$EncFSVolumeBuilder$Pbkdf2ProviderBuilder));\n}\n;\nfunction $buildVolume(this$static, callback){\n  var config, derivedPassword;\n  config = this$static.volume.volumeConfig;\n  if (this$static.password != null) {\n    derivedPassword = derivePasswordKey(config, this$static.password);\n    $setPasswordDerivedKeyData(this$static.volume, derivedPassword);\n  }\n  $readConfigAndInitVolume(this$static.volume, new EncFSVolumeBuilder$PasswordBuilder$1_0(this$static, callback));\n}\n\nfunction EncFSVolumeBuilder$PasswordBuilder_0(volume, password){\n  this.volume = volume;\n  this.password = password;\n}\n\ndefineSeed(371, 1, makeCastMap([Q$EncFSVolumeBuilder$PasswordBuilder]), EncFSVolumeBuilder$PasswordBuilder_0);\nfunction $onFailure_35(this$static, reason){\n  $onFailure_8(this$static.val$callback, reason);\n}\n\nfunction $onSuccess_34(this$static){\n  $onSuccess_7(this$static.val$callback, this$static.this$1.volume);\n}\n\nfunction EncFSVolumeBuilder$PasswordBuilder$1_0(this$1, val$callback){\n  this.this$1 = this$1;\n  this.val$callback = val$callback;\n}\n\ndefineSeed(372, 1, {}, EncFSVolumeBuilder$PasswordBuilder$1_0);\n_.onFailure = function onFailure_34(reason){\n  $onFailure_35(this, dynamicCast(reason, Q$Exception));\n}\n;\n_.onSuccess = function onSuccess_34(result){\n  $onSuccess_34(this, throwClassCastExceptionUnlessNull(result));\n}\n;\nfunction $withPassword_0(this$static, password){\n  return new EncFSVolumeBuilder$PasswordBuilder_0(this$static.volume, password);\n}\n\nfunction EncFSVolumeBuilder$Pbkdf2ProviderBuilder_0(volume){\n  this.volume = volume;\n}\n\ndefineSeed(373, 1, makeCastMap([Q$EncFSVolumeBuilder$Pbkdf2ProviderBuilder]), EncFSVolumeBuilder$Pbkdf2ProviderBuilder_0);\nfunction NullFilenameDecryptionStrategy_0(volume, volumePath){\n  FilenameDecryptionStrategy_0.call(this, volume, volumePath, ($clinit_EncFSFilenameEncryptionAlgorithm() , NULL));\n}\n\ndefineSeed(374, 332, {}, NullFilenameDecryptionStrategy_0);\n_.decryptImpl = function decryptImpl_0(fileName){\n  var rootDir;\n  rootDir = this.volume.rootDir;\n  if ($equals(this.volumePath, $getPath(rootDir.plainFileInfo)) && $equals(fileName, '.encfs6.xml')) {\n    return null;\n  }\n  return fileName;\n}\n;\nfunction NullFilenameEncryptionStrategy_0(volume, volumePath){\n  FilenameEncryptionStrategy_0.call(this, volume, volumePath, ($clinit_EncFSFilenameEncryptionAlgorithm() , NULL));\n}\n\ndefineSeed(375, 334, {}, NullFilenameEncryptionStrategy_0);\n_.encryptImpl = function encryptImpl_0(fileName){\n  return fileName;\n}\n;\nfunction computeChainIv(volume, volumePath){\n  var chainIv, curPath, curPath$array, curPath$index, curPath$max, encodeBytes;\n  chainIv = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 8, 1);\n  for (curPath$array = $split(volumePath, '/', 0) , curPath$index = 0 , curPath$max = curPath$array.length; curPath$index < curPath$max; ++curPath$index) {\n    curPath = curPath$array[curPath$index];\n    if (curPath.length > 0 && !$equals(curPath, '/')) {\n      volume.volumeConfig.filenameAlgorithm == ($clinit_EncFSFilenameEncryptionAlgorithm() , BLOCK)?(encodeBytes = getBytesForBlockAlgorithm(curPath)):(encodeBytes = getBytesUtf8(curPath));\n      mac64_3(volume.volumeMAC, encodeBytes, chainIv);\n    }\n  }\n  return chainIv;\n}\n\nfunction streamDecrypt(cipher, mac, key, iv, ivSeed, data_0){\n  return streamDecrypt_0(cipher, mac, key, iv, ivSeed, data_0, data_0.length);\n}\n\nfunction streamDecrypt_0(cipher, mac, key, iv, ivSeed, data_0, len){\n  var firstDecResult, flipBytesResult, ivSeedPlusOne, result;\n  ivSeedPlusOne = incrementIvSeedByOne(ivSeed);\n  cipherInit(key, mac, 2, cipher, iv, ivSeedPlusOne);\n  firstDecResult = $doFinal_0(cipher, data_0, len);\n  unshuffleBytes(firstDecResult);\n  flipBytesResult = flipBytes(firstDecResult);\n  cipherInit(key, mac, 2, cipher, iv, ivSeed);\n  result = $doFinal(cipher, flipBytesResult);\n  unshuffleBytes(result);\n  return result;\n}\n\nfunction streamDecrypt_1(volume, ivSeed, data_0){\n  var streamCipher;\n  streamCipher = volume.streamCipher;\n  return streamDecrypt(streamCipher, volume.volumeMAC, volume.volumeKey, volume.volumeIV, ivSeed, data_0);\n}\n\nfunction streamDecrypt_2(volume, ivSeed, data_0, len){\n  return streamDecrypt_0(volume.streamCipher, volume.volumeMAC, volume.volumeKey, volume.volumeIV, ivSeed, data_0, len);\n}\n\nfunction streamEncrypt(cipher, mac, key, iv, ivSeed, data_0){\n  return streamEncrypt_0(cipher, mac, key, iv, ivSeed, data_0, data_0.length);\n}\n\nfunction streamEncrypt_0(cipher, mac, key, iv, ivSeed, data_0, len){\n  var encBuf, firstEncResult, flipBytesResult, ivSeedPlusOne;\n  ivSeedPlusOne = incrementIvSeedByOne(ivSeed);\n  encBuf = copyOfRange(data_0, 0, len);\n  shuffleBytes(encBuf);\n  cipherInit(key, mac, 1, cipher, iv, ivSeed);\n  firstEncResult = $doFinal(cipher, encBuf);\n  flipBytesResult = flipBytes(firstEncResult);\n  shuffleBytes(flipBytesResult);\n  cipherInit(key, mac, 1, cipher, iv, ivSeedPlusOne);\n  return $doFinal(cipher, flipBytesResult);\n}\n\nfunction StreamFilenameDecryptionStrategy_0(volume, volumePath){\n  BasicFilenameDecryptionStrategy_0.call(this, volume, volumePath, ($clinit_EncFSFilenameEncryptionAlgorithm() , STREAM));\n}\n\ndefineSeed(377, 331, {}, StreamFilenameDecryptionStrategy_0);\n_.decryptConcrete = function decryptConcrete_0(volume, encFileName, fileIv){\n  var e;\n  try {\n    return streamDecrypt_1(volume, fileIv, encFileName);\n  }\n   catch ($e0) {\n    $e0 = wrap_0($e0);\n    if (instanceOf($e0, Q$EncFSUnsupportedException)) {\n      e = $e0;\n      throw new EncFSCorruptDataException_1(e);\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n;\n_.decryptPost = function decryptPost_0(fileName){\n  return utf8ToString(fileName, fileName.length);\n}\n;\nfunction StreamFilenameEncryptionStrategy_0(volume, volumePath){\n  BasicFilenameEncryptionStrategy_0.call(this, volume, volumePath, ($clinit_EncFSFilenameEncryptionAlgorithm() , STREAM));\n}\n\ndefineSeed(378, 333, {}, StreamFilenameEncryptionStrategy_0);\n_.encryptConcrete = function encryptConcrete_0(volume, paddedDecFileName, fileIv){\n  var e;\n  try {\n    return streamEncrypt(volume.streamCipher, volume.volumeMAC, volume.volumeKey, volume.volumeIV, fileIv, paddedDecFileName);\n  }\n   catch ($e0) {\n    $e0 = wrap_0($e0);\n    if (instanceOf($e0, Q$EncFSUnsupportedException)) {\n      e = $e0;\n      throw new EncFSCorruptDataException_1(e);\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n;\n_.getPaddedDecFilename = function getPaddedDecFilename_0(decFileName){\n  return decFileName;\n}\n;\nfunction decryptVolumeKey(config, pbkdf2Data){\n  var cipherVolKeyData, clearVolKeyData, encryptedVolKey, ivSeed, keySizeInBytes, mac, mac32, passIvData, passKey, passKeyData;\n  try {\n    cipherVolKeyData = ($clinit_EncFSBase64() , decode(config.base64EncodedVolumeKey));\n  }\n   catch ($e0) {\n    $e0 = wrap_0($e0);\n    if (instanceOf($e0, Q$IOException)) {\n      throw new EncFSInvalidConfigException_0('Corrupt key data in config');\n    }\n     else \n      throw unwrap($e0);\n  }\n  encryptedVolKey = copyOfRange(cipherVolKeyData, 4, cipherVolKeyData.length);\n  keySizeInBytes = ~~(config.volumeKeySizeInBits / 8);\n  passKeyData = copyOfRange(pbkdf2Data, 0, keySizeInBytes);\n  passIvData = copyOfRange(pbkdf2Data, keySizeInBytes, keySizeInBytes + 16);\n  passKey = new SecretKeySpec_0(passKeyData, 'AES');\n  ivSeed = copyOfRange(cipherVolKeyData, 0, 4);\n  mac = encryptVolumeKeyData(passKey);\n  clearVolKeyData = streamDecrypt(getCipher('AES/CFB/NoPadding'), mac, passKey, passIvData, ivSeed, encryptedVolKey);\n  mac32 = mac32_1(mac, clearVolKeyData, initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 0, 1));\n  if (!equals_12(ivSeed, mac32)) {\n    throw new EncFSChecksumException_0('Volume key checksum mismatch');\n  }\n  return clearVolKeyData;\n}\n\nfunction derivePasswordKey(config, password){\n  var cipherSaltData, ks, pbkdf2Key, key, bytes;\n  try {\n    cipherSaltData = ($clinit_EncFSBase64() , decode(config.base64Salt));\n  }\n   catch ($e0) {\n    $e0 = wrap_0($e0);\n    if (instanceOf($e0, Q$IOException)) {\n      throw new EncFSInvalidConfigException_0('Corrupt salt data in config');\n    }\n     else \n      throw unwrap($e0);\n  }\n  ks = new PBEKeySpec_0($toCharArray(password), cipherSaltData, config.iterationForPasswordKeyDerivationCount, config.volumeKeySizeInBits + 128);\n  pbkdf2Key = (key = generateSecret(valueOf_0($getPassword(ks)), ks.iterationCount, ($clinit_Base64() , byteArrayToBase64(ks.salt != null?clone(ks.salt):null)), ks.keyLength) , bytes = base64ToByteArray(key) , new PBKDF2SHA1SecretKey_0(bytes));\n  return pbkdf2Key.encoded;\n}\n\nfunction encryptVolumeKeyData(passKey){\n  var e, mac;\n  try {\n    mac = newMac(passKey);\n  }\n   catch ($e0) {\n    $e0 = wrap_0($e0);\n    if (instanceOf($e0, Q$InvalidKeyException)) {\n      e = $e0;\n      throw new EncFSInvalidConfigException_1(e);\n    }\n     else \n      throw unwrap($e0);\n  }\n  return mac;\n}\n\nfunction clone(original){\n  return copyOf(original, original.length);\n}\n\nfunction clone_0(original){\n  return copyOf_0(original, original.length);\n}\n\nfunction copyOf(original, newLength){\n  var copy;\n  copy = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, newLength, 1);\n  arraycopy(original, 0, copy, 0, min_0(original.length, newLength));\n  return copy;\n}\n\nfunction copyOf_0(original, newLength){\n  var copy;\n  copy = initDim(_3C_classLit, makeCastMap([Q$Serializable]), -1, newLength, 1);\n  arraycopy(original, 0, copy, 0, min_0(original.length, newLength));\n  return copy;\n}\n\nfunction copyOfRange(original, from, to){\n  var copy, newLength;\n  newLength = to - from;\n  if (newLength < 0)\n    throw new IllegalArgumentException_1(from + ' > ' + to);\n  copy = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, newLength, 1);\n  arraycopy(original, from, copy, 0, min_0(original.length - from, newLength));\n  return copy;\n}\n\nfunction readToString(inputStream){\n  var buf, builder, length_0, s;\n  builder = new StringBuilder_0;\n  buf = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, 1024, 1);\n  while ((length_0 = inputStream.read_1(buf)) > -1) {\n    length_0 < 1024?(s = _String(copyOf(buf, length_0))):(s = utf8ToString(buf, buf.length));\n    $append_0(builder.impl, s);\n  }\n  return builder.impl.string;\n}\n\nfunction UnsupportedEncodingException_0(){\n  IOException_0.call(this, 'US-ASCII is not supported');\n}\n\ndefineSeed(382, 322, makeCastMap([Q$IOException, Q$Serializable, Q$UnsupportedEncodingException, Q$Exception, Q$Throwable]), UnsupportedEncodingException_0);\nfunction ArithmeticException_0(){\n  RuntimeException_1.call(this, 'divide by zero');\n}\n\n",
"defineSeed(383, 6, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), ArithmeticException_0);\nfunction IndexOutOfBoundsException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction IndexOutOfBoundsException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(385, 6, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), IndexOutOfBoundsException_0, IndexOutOfBoundsException_1);\nfunction ArrayIndexOutOfBoundsException_0(){\n  IndexOutOfBoundsException_1.call(this, 'len is negative');\n}\n\ndefineSeed(384, 385, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), ArrayIndexOutOfBoundsException_0);\nfunction ArrayStoreException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction ArrayStoreException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(386, 6, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), ArrayStoreException_0, ArrayStoreException_1);\nfunction $clinit_Boolean(){\n  $clinit_Boolean = nullMethod;\n  FALSE = new Boolean_1(false);\n  TRUE = new Boolean_1(true);\n}\n\nfunction $compareTo_0(this$static, b){\n  return compare_0(this$static.value_0, b.value_0);\n}\n\nfunction Boolean_1(value_0){\n  this.value_0 = value_0;\n}\n\nfunction compare_0(x_0, y_0){\n  return x_0 == y_0?0:x_0?1:-1;\n}\n\ndefineSeed(387, 1, makeCastMap([Q$Serializable, Q$Boolean, Q$Comparable]), Boolean_1);\n_.compareTo$ = function compareTo_0(b){\n  return $compareTo_0(this, dynamicCast(b, Q$Boolean));\n}\n;\n_.equals$ = function equals_5(o){\n  return instanceOf(o, Q$Boolean) && dynamicCast(o, Q$Boolean).value_0 == this.value_0;\n}\n;\n_.hashCode$ = function hashCode_7(){\n  return this.value_0?1231:1237;\n}\n;\n_.toString$ = function toString_16(){\n  return this.value_0?'true':'false';\n}\n;\n_.value_0 = false;\nvar FALSE, TRUE;\nfunction codePointAt(cs, index_0, limit){\n  var hiSurrogate, loSurrogate;\n  hiSurrogate = $charAt(cs, index_0++);\n  if (hiSurrogate >= 55296 && hiSurrogate <= 56319 && index_0 < limit && isLowSurrogate(loSurrogate = cs.charCodeAt(index_0))) {\n    return 65536 + ((hiSurrogate & 1023) << 10) + (loSurrogate & 1023);\n  }\n  return hiSurrogate;\n}\n\nfunction digit_0(c){\n  if (c >= 48 && c < 58) {\n    return c - 48;\n  }\n  if (c >= 97 && c < 97) {\n    return c - 97 + 10;\n  }\n  if (c >= 65 && c < 65) {\n    return c - 65 + 10;\n  }\n  return -1;\n}\n\nfunction isLowSurrogate(ch_0){\n  return ch_0 >= 56320 && ch_0 <= 57343;\n}\n\nfunction toChars(codePoint, dst, dstIndex){\n  if (codePoint < 0 || codePoint > 1114111) {\n    throw new IllegalArgumentException_0;\n  }\n  if (codePoint >= 65536) {\n    dst[dstIndex++] = 55296 + (codePoint - 65536 >> 10 & 1023) & 65535;\n    dst[dstIndex] = 56320 + (codePoint - 65536 & 1023) & 65535;\n    return 2;\n  }\n   else {\n    dst[dstIndex] = codePoint & 65535;\n    return 1;\n  }\n}\n\nfunction Class_0(){\n}\n\nfunction createForArray(packageName, className, seedId, componentType){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  isInstantiable(seedId != 0?-seedId:0) && setClassLiteral(seedId != 0?-seedId:0, clazz);\n  clazz.modifiers = 4;\n  clazz.componentType = componentType;\n  return clazz;\n}\n\nfunction createForClass(packageName, className, seedId){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  isInstantiable(seedId) && setClassLiteral(seedId, clazz);\n  return clazz;\n}\n\nfunction createForEnum(packageName, className, seedId, enumConstantsFunc){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  isInstantiable(seedId) && setClassLiteral(seedId, clazz);\n  clazz.modifiers = enumConstantsFunc?8:0;\n  return clazz;\n}\n\nfunction createForInterface(packageName, className){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  isInstantiable(0) && setClassLiteral(0, clazz);\n  clazz.modifiers = 2;\n  return clazz;\n}\n\nfunction createForPrimitive(className, seedId){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = '' + className;\n  isInstantiable(seedId) && setClassLiteral(seedId, clazz);\n  clazz.modifiers = 1;\n  return clazz;\n}\n\nfunction getSeedFunction(clazz){\n  var func = seedTable[clazz.seedId];\n  clazz = null;\n  return func;\n}\n\nfunction isInstantiable(seedId){\n  return typeof seedId == 'number' && seedId > 0;\n}\n\nfunction setClassLiteral(seedId, clazz){\n  var proto;\n  clazz.seedId = seedId;\n  if (seedId == 2) {\n    proto = String.prototype;\n  }\n   else {\n    if (seedId > 0) {\n      var seed = getSeedFunction(clazz);\n      if (seed) {\n        proto = seed.prototype;\n      }\n       else {\n        seed = seedTable[seedId] = function(){\n        }\n        ;\n        seed.___clazz$ = clazz;\n        return;\n      }\n    }\n     else {\n      return;\n    }\n  }\n  proto.___clazz$ = clazz;\n}\n\ndefineSeed(389, 1, {}, Class_0);\n_.toString$ = function toString_17(){\n  return ((this.modifiers & 2) != 0?'interface ':(this.modifiers & 1) != 0?'':'class ') + this.typeName;\n}\n;\n_.modifiers = 0;\n_.seedId = 0;\nfunction ClassCastException_0(){\n  RuntimeException_0.call(this);\n}\n\ndefineSeed(390, 6, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), ClassCastException_0);\nfunction __parseAndValidateInt(s){\n  var i, isTooLow, length_0, startIndex, toReturn;\n  if (s == null) {\n    throw new NumberFormatException_0('null');\n  }\n  length_0 = s.length;\n  startIndex = length_0 > 0 && (s.charCodeAt(0) == 45 || s.charCodeAt(0) == 43)?1:0;\n  for (i = startIndex; i < length_0; i++) {\n    if (digit_0(s.charCodeAt(i)) == -1) {\n      throw new NumberFormatException_0('For input string: \"' + s + '\"');\n    }\n  }\n  toReturn = parseInt(s, 10);\n  isTooLow = toReturn < -2147483648;\n  if (isNaN(toReturn)) {\n    throw new NumberFormatException_0('For input string: \"' + s + '\"');\n  }\n   else if (isTooLow || toReturn > 2147483647) {\n    throw new NumberFormatException_0('For input string: \"' + s + '\"');\n  }\n  return toReturn;\n}\n\ndefineSeed(392, 1, makeCastMap([Q$Serializable, Q$Number]));\nfunction IllegalArgumentException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction IllegalArgumentException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(393, 6, makeCastMap([Q$Serializable, Q$Exception, Q$IllegalArgumentException, Q$Throwable]), IllegalArgumentException_0, IllegalArgumentException_1);\nfunction IllegalStateException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction IllegalStateException_1(s){\n  RuntimeException_1.call(this, s);\n}\n\ndefineSeed(394, 6, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), IllegalStateException_0, IllegalStateException_1);\nfunction numberOfLeadingZeros_0(i){\n  var m_0, n, y_0;\n  if (i < 0) {\n    return 0;\n  }\n   else if (i == 0) {\n    return 32;\n  }\n   else {\n    y_0 = -(i >> 16);\n    m_0 = y_0 >> 16 & 16;\n    n = 16 - m_0;\n    i = i >> m_0;\n    y_0 = i - 256;\n    m_0 = y_0 >> 16 & 8;\n    n += m_0;\n    i <<= m_0;\n    y_0 = i - 4096;\n    m_0 = y_0 >> 16 & 4;\n    n += m_0;\n    i <<= m_0;\n    y_0 = i - 16384;\n    m_0 = y_0 >> 16 & 2;\n    n += m_0;\n    i <<= m_0;\n    y_0 = i >> 14;\n    m_0 = y_0 & ~(y_0 >> 1);\n    return n + 2 - m_0;\n  }\n}\n\nfunction numberOfTrailingZeros(i){\n  var r, rtn;\n  if (i == 0) {\n    return 32;\n  }\n   else {\n    rtn = 0;\n    for (r = 1; (r & i) == 0; r <<= 1) {\n      ++rtn;\n    }\n    return rtn;\n  }\n}\n\nfunction toPowerOfTwoString(value_0){\n  var buf, digits, pos;\n  buf = initDim(_3C_classLit, makeCastMap([Q$Serializable]), -1, 8, 1);\n  digits = ($clinit_Number$__Digits() , digits_0);\n  pos = 7;\n  if (value_0 >= 0) {\n    while (value_0 > 15) {\n      buf[pos--] = digits[value_0 & 15];\n      value_0 >>= 4;\n    }\n  }\n   else {\n    while (pos > 0) {\n      buf[pos--] = digits[value_0 & 15];\n      value_0 >>= 4;\n    }\n  }\n  buf[pos] = digits[value_0 & 15];\n  return __valueOf(buf, pos, 8);\n}\n\nfunction signum(i){\n  return eq(i, P0_longLit)?0:lt(i, P0_longLit)?-1:1;\n}\n\nfunction max_0(x_0, y_0){\n  return x_0 > y_0?x_0:y_0;\n}\n\nfunction min_0(x_0, y_0){\n  return x_0 < y_0?x_0:y_0;\n}\n\nfunction NullPointerException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction NullPointerException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(398, 6, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), NullPointerException_0, NullPointerException_1);\nfunction $clinit_Number$__Digits(){\n  $clinit_Number$__Digits = nullMethod;\n  digits_0 = initValues(_3C_classLit, makeCastMap([Q$Serializable]), -1, [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]);\n}\n\nvar digits_0;\nfunction NumberFormatException_0(message){\n  IllegalArgumentException_1.call(this, message);\n}\n\ndefineSeed(400, 393, makeCastMap([Q$Serializable, Q$Exception, Q$IllegalArgumentException, Q$Throwable]), NumberFormatException_0);\nfunction StackTraceElement_0(methodName){\n  this.className_0 = 'Unknown';\n  this.methodName = methodName;\n  this.lineNumber = -1;\n}\n\ndefineSeed(401, 1, makeCastMap([Q$Serializable, Q$StackTraceElement]), StackTraceElement_0);\n_.toString$ = function toString_18(){\n  return this.className_0 + '.' + this.methodName + '(Unknown Source' + (this.lineNumber >= 0?':' + this.lineNumber:'') + ')';\n}\n;\n_.lineNumber = 0;\nfunction $charAt(this$static, index_0){\n  return this$static.charCodeAt(index_0);\n}\n\nfunction $endsWith(this$static, suffix){\n  return this$static.lastIndexOf(suffix) != -1 && this$static.lastIndexOf(suffix) == this$static.length - suffix.length;\n}\n\nfunction $equals(this$static, other){\n  if (!instanceOf(other, Q$String)) {\n    return false;\n  }\n  return String(this$static) == other;\n}\n\nfunction $equalsIgnoreCase(this$static, other){\n  if (other == null)\n    return false;\n  return this$static == other || this$static.toLowerCase() == other.toLowerCase();\n}\n\nfunction $getBytes(){\n  throw new UnsupportedEncodingException_0;\n}\n\nfunction $getChars(this$static, srcEnd, dst, dstBegin){\n  var srcIdx;\n  for (srcIdx = 0; srcIdx < srcEnd; ++srcIdx) {\n    dst[dstBegin++] = this$static.charCodeAt(srcIdx);\n  }\n}\n\nfunction $indexOf_0(this$static, str){\n  return this$static.indexOf(str);\n}\n\nfunction $indexOf_1(this$static, str, startIndex){\n  return this$static.indexOf(str, startIndex);\n}\n\nfunction $lastIndexOf(this$static, str){\n  return this$static.lastIndexOf(str);\n}\n\nfunction $replaceAll(this$static, regex, replace){\n  replace = __translateReplaceString(replace);\n  return this$static.replace(RegExp(regex, 'g'), replace);\n}\n\nfunction $split(this$static, regex, maxMatch){\n  var compiled = new RegExp(regex, 'g');\n  var out = [];\n  var count = 0;\n  var trail = this$static;\n  var lastTrail = null;\n  while (true) {\n    var matchObj = compiled.exec(trail);\n    if (matchObj == null || trail == '' || count == maxMatch - 1 && maxMatch > 0) {\n      out[count] = trail;\n      break;\n    }\n     else {\n      out[count] = trail.substring(0, matchObj.index);\n      trail = trail.substring(matchObj.index + matchObj[0].length, trail.length);\n      compiled.lastIndex = 0;\n      if (lastTrail == trail) {\n        out[count] = trail.substring(0, 1);\n        trail = trail.substring(1);\n      }\n      lastTrail = trail;\n      count++;\n    }\n  }\n  if (maxMatch == 0 && this$static.length > 0) {\n    var lastNonEmpty = out.length;\n    while (lastNonEmpty > 0 && out[lastNonEmpty - 1] == '') {\n      --lastNonEmpty;\n    }\n    lastNonEmpty < out.length && out.splice(lastNonEmpty, out.length - lastNonEmpty);\n  }\n  var jr = __createArray(out.length);\n  for (var i = 0; i < out.length; ++i) {\n    jr[i] = out[i];\n  }\n  return jr;\n}\n\nfunction $substring(this$static, beginIndex){\n  return this$static.substr(beginIndex, this$static.length - beginIndex);\n}\n\nfunction $substring_0(this$static, beginIndex, endIndex){\n  return this$static.substr(beginIndex, endIndex - beginIndex);\n}\n\nfunction $toCharArray(this$static){\n  var charArr, n;\n  n = this$static.length;\n  charArr = initDim(_3C_classLit, makeCastMap([Q$Serializable]), -1, n, 1);\n  $getChars(this$static, n, charArr, 0);\n  return charArr;\n}\n\nfunction $trim(this$static){\n  if (this$static.length == 0 || this$static[0] > ' ' && this$static[this$static.length - 1] > ' ') {\n    return this$static;\n  }\n  var r1 = this$static.replace(/^(\\s*)/, '');\n  var r2 = r1.replace(/\\s*$/, '');\n  return r2;\n}\n\nfunction _String(bytes){\n  return utf8ToString(bytes, bytes.length);\n}\n\nfunction __checkBounds(legalCount, start_0, end){\n  if (start_0 < 0) {\n    throw new StringIndexOutOfBoundsException_0(start_0);\n  }\n  if (end < start_0) {\n    throw new StringIndexOutOfBoundsException_0(end - start_0);\n  }\n  if (end > legalCount) {\n    throw new StringIndexOutOfBoundsException_0(end);\n  }\n}\n\nfunction __createArray(numElements){\n  return initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$String, numElements, 0);\n}\n\nfunction __translateReplaceString(replaceStr){\n  var pos;\n  pos = 0;\n  while (0 <= (pos = replaceStr.indexOf('\\\\', pos))) {\n    replaceStr.charCodeAt(pos + 1) == 36?(replaceStr = $substring_0(replaceStr, 0, pos) + '$' + $substring(replaceStr, ++pos)):(replaceStr = $substring_0(replaceStr, 0, pos) + $substring(replaceStr, ++pos));\n  }\n  return replaceStr;\n}\n\nfunction __valueOf(x_0, start_0, end){\n  x_0 = x_0.slice(start_0, end);\n  return String.fromCharCode.apply(null, x_0);\n}\n\nfunction compareTo_2(thisStr, otherStr){\n  thisStr = String(thisStr);\n  if (thisStr == otherStr) {\n    return 0;\n  }\n  return thisStr < otherStr?-1:1;\n}\n\nfunction encodeUtf8(bytes, ofs, codePoint){\n  if (codePoint < 128) {\n    bytes[ofs] = narrow_byte(codePoint & 127);\n    return 1;\n  }\n   else if (codePoint < 2048) {\n    bytes[ofs++] = narrow_byte(codePoint >> 6 & 31 | 192);\n    bytes[ofs] = narrow_byte(codePoint & 63 | 128);\n    return 2;\n  }\n   else if (codePoint < 65536) {\n    bytes[ofs++] = narrow_byte(codePoint >> 12 & 15 | 224);\n    bytes[ofs++] = narrow_byte(codePoint >> 6 & 63 | 128);\n    bytes[ofs] = narrow_byte(codePoint & 63 | 128);\n    return 3;\n  }\n   else if (codePoint < 2097152) {\n    bytes[ofs++] = narrow_byte(codePoint >> 18 & 7 | 240);\n    bytes[ofs++] = narrow_byte(codePoint >> 12 & 63 | 128);\n    bytes[ofs++] = narrow_byte(codePoint >> 6 & 63 | 128);\n    bytes[ofs] = narrow_byte(codePoint & 63 | 128);\n    return 4;\n  }\n   else if (codePoint < 67108864) {\n    bytes[ofs++] = narrow_byte(codePoint >> 24 & 3 | 248);\n    bytes[ofs++] = narrow_byte(codePoint >> 18 & 63 | 128);\n    bytes[ofs++] = narrow_byte(codePoint >> 12 & 63 | 128);\n    bytes[ofs++] = narrow_byte(codePoint >> 6 & 63 | 128);\n    bytes[ofs] = narrow_byte(codePoint & 63 | 128);\n    return 5;\n  }\n  throw new IllegalArgumentException_1('Character out of range: ' + codePoint);\n}\n\nfunction fromCharCode(ch_0){\n  return String.fromCharCode(ch_0);\n}\n\nfunction fromCodePoint(codePoint){\n  var hiSurrogate, loSurrogate;\n  if (codePoint >= 65536) {\n    hiSurrogate = 55296 + (codePoint - 65536 >> 10 & 1023) & 65535;\n    loSurrogate = 56320 + (codePoint - 65536 & 1023) & 65535;\n    return fromCharCode(hiSurrogate) + fromCharCode(loSurrogate);\n  }\n   else {\n    return String.fromCharCode(codePoint & 65535);\n  }\n}\n\nfunction getBytesUtf8(str){\n  var byteCount, bytes, ch_0, i, i0, n, out;\n  n = str.length;\n  byteCount = 0;\n  for (i = 0; i < n;) {\n    ch_0 = codePointAt(str, i, str.length);\n    i += ch_0 >= 65536?2:1;\n    ch_0 < 128?++byteCount:ch_0 < 2048?(byteCount += 2):ch_0 < 65536?(byteCount += 3):ch_0 < 2097152?(byteCount += 4):ch_0 < 67108864 && (byteCount += 5);\n  }\n  bytes = initDim(_3B_classLit, makeCastMap([Q$Serializable]), -1, byteCount, 1);\n  out = 0;\n  for (i0 = 0; i0 < n;) {\n    ch_0 = codePointAt(str, i0, str.length);\n    i0 += ch_0 >= 65536?2:1;\n    out += encodeUtf8(bytes, out, ch_0);\n  }\n  return bytes;\n}\n\nfunction utf8ToString(bytes, len){\n  var b, ch_0, charCount, chars, count, i, i0, outIdx;\n  charCount = 0;\n  for (i = 0; i < len;) {\n    ++charCount;\n    ch_0 = bytes[i];\n    if ((ch_0 & 192) == 128) {\n      throw new IllegalArgumentException_1('Invalid UTF8 sequence');\n    }\n     else if ((ch_0 & 128) == 0) {\n      ++i;\n    }\n     else if ((ch_0 & 224) == 192) {\n      i += 2;\n    }\n     else if ((ch_0 & 240) == 224) {\n      i += 3;\n    }\n     else if ((ch_0 & 248) == 240) {\n      i += 4;\n    }\n     else {\n      throw new IllegalArgumentException_1('Invalid UTF8 sequence');\n    }\n    if (i > len) {\n      throw new IndexOutOfBoundsException_1('Invalid UTF8 sequence');\n    }\n  }\n  chars = initDim(_3C_classLit, makeCastMap([Q$Serializable]), -1, charCount, 1);\n  outIdx = 0;\n  count = 0;\n  for (i0 = 0; i0 < len;) {\n    ch_0 = bytes[i0++];\n    if ((ch_0 & 128) == 0) {\n      count = 1;\n      ch_0 &= 127;\n    }\n     else if ((ch_0 & 224) == 192) {\n      count = 2;\n      ch_0 &= 31;\n    }\n     else if ((ch_0 & 240) == 224) {\n      count = 3;\n      ch_0 &= 15;\n    }\n     else if ((ch_0 & 248) == 240) {\n      count = 4;\n      ch_0 &= 7;\n    }\n     else if ((ch_0 & 252) == 248) {\n      count = 5;\n      ch_0 &= 3;\n    }\n    while (--count > 0) {\n      b = bytes[i0++];\n      if ((b & 192) != 128) {\n        throw new IllegalArgumentException_1('Invalid UTF8 sequence at ' + (i0 - 1) + ', byte=' + toPowerOfTwoString(b));\n      }\n      ch_0 = ch_0 << 6 | b & 63;\n    }\n    outIdx += toChars(ch_0, chars, outIdx);\n  }\n  return valueOf_0(chars);\n}\n\nfunction valueOf(x_0){\n  return String.fromCharCode(x_0);\n}\n\nfunction valueOf_0(x_0){\n  return String.fromCharCode.apply(null, x_0);\n}\n\nfunction valueOf_1(x_0, offset, count){\n  var end;\n  end = offset + count;\n  __checkBounds(x_0.length, offset, end);\n  return __valueOf(x_0, offset, end);\n}\n\n_ = String.prototype;\n_.castableTypeMap$ = makeCastMap([Q$String, Q$Serializable, Q$CharSequence, Q$Comparable]);\n_.compareTo$ = function compareTo_1(other){\n  return compareTo_2(this, dynamicCast(other, Q$String));\n}\n;\n_.equals$ = function equals_6(other){\n  return $equals(this, other);\n}\n;\n_.hashCode$ = function hashCode_8(){\n  return getHashCode_0(this);\n}\n;\n_.toString$ = _.toString;\nfunction $clinit_String$HashCache(){\n  $clinit_String$HashCache = nullMethod;\n  back_0 = {};\n  front = {};\n}\n\nfunction compute(str){\n  var hashCode, i, n, nBatch;\n  hashCode = 0;\n  n = str.length;\n  nBatch = n - 4;\n  i = 0;\n  while (i < nBatch) {\n    hashCode = str.charCodeAt(i + 3) + 31 * (str.charCodeAt(i + 2) + 31 * (str.charCodeAt(i + 1) + 31 * (str.charCodeAt(i) + 31 * hashCode))) | 0;\n    i += 4;\n  }\n  while (i < n) {\n    hashCode = hashCode * 31 + $charAt(str, i++);\n  }\n  return hashCode | 0;\n}\n\nfunction getHashCode_0(str){\n  $clinit_String$HashCache();\n  var key = ':' + str;\n  var result = front[key];\n  if (result != null) {\n    return result;\n  }\n  result = back_0[key];\n  result == null && (result = compute(str));\n  increment();\n  return front[key] = result;\n}\n\nfunction increment(){\n  if (count_0 == 256) {\n    back_0 = front;\n    front = {};\n    count_0 = 0;\n  }\n  ++count_0;\n}\n\nvar back_0, count_0 = 0, front;\nfunction $$init(this$static){\n  this$static.impl = new StringBufferImplAppend_0;\n}\n\nfunction $append_1(this$static, x_0){\n  $appendNonNull(this$static.impl, valueOf(x_0));\n  return this$static;\n}\n\nfunction $append_2(this$static, x_0){\n  $append_0(this$static.impl, x_0);\n  return this$static;\n}\n\nfunction $delete(this$static, end){\n  return $replace(this$static.impl, 0, end, '') , this$static;\n}\n\nfunction StringBuffer_0(){\n  $$init(this);\n}\n\nfunction StringBuffer_1(){\n  $$init(this);\n}\n\nfunction StringBuffer_2(s){\n  $$init(this);\n  $append_0(this.impl, s);\n}\n\ndefineSeed(403, 1, makeCastMap([Q$CharSequence]), StringBuffer_0, StringBuffer_1, StringBuffer_2);\n_.toString$ = function toString_19(){\n  return this.impl.string;\n}\n;\nfunction $$init_0(this$static){\n  this$static.impl = new StringBufferImplAppend_0;\n}\n\nfunction $append_3(this$static, x_0){\n  $append_0(this$static.impl, x_0);\n  return this$static;\n}\n\nfunction $charAt_0(this$static, index_0){\n  return $charAt(this$static.impl.string, index_0);\n}\n\nfunction $delete_0(this$static, start_0, end){\n  return $replace(this$static.impl, start_0, end, '') , this$static;\n}\n\nfunction $insert_0(this$static, index_0, x_0){\n  return $replace(this$static.impl, index_0, index_0, x_0) , this$static;\n}\n\nfunction $replace_1(this$static, start_0, end, toInsert){\n  $replace(this$static.impl, start_0, end, toInsert);\n  return this$static;\n}\n\nfunction $setCharAt(this$static, index_0, x_0){\n  $replace_1(this$static, index_0, index_0 + 1, valueOf(x_0));\n}\n\nfunction StringBuilder_0(){\n  $$init_0(this);\n}\n\nfunction StringBuilder_1(){\n  $$init_0(this);\n}\n\nfunction StringBuilder_2(s){\n  $$init_0(this);\n  $append_0(this.impl, s);\n}\n\ndefineSeed(404, 1, makeCastMap([Q$CharSequence]), StringBuilder_0, StringBuilder_1, StringBuilder_2);\n_.toString$ = function toString_20(){\n  return this.impl.string;\n}\n;\nfunction StringIndexOutOfBoundsException_0(index_0){\n  IndexOutOfBoundsException_1.call(this, 'String index out of range: ' + index_0);\n}\n\ndefineSeed(405, 385, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), StringIndexOutOfBoundsException_0);\nfunction $clinit_System(){\n  $clinit_System = nullMethod;\n  err = new PrintStream_0;\n}\n\nfunction arraycopy(src_0, srcOfs, dest, destOfs, len){\n  $clinit_System();\n  var destArray, destComp, destEnd, destType, destlen, srcArray, srcComp, srcType, srclen;\n  if (src_0 == null || dest == null) {\n    throw new NullPointerException_0;\n  }\n  srcType = getClass__devirtual$(src_0);\n  destType = getClass__devirtual$(dest);\n  if ((srcType.modifiers & 4) == 0 || (destType.modifiers & 4) == 0) {\n    throw new ArrayStoreException_1('Must be array types');\n  }\n  srcComp = srcType.componentType;\n  destComp = destType.componentType;\n  if (!((srcComp.modifiers & 1) != 0?srcComp == destComp:(destComp.modifiers & 1) == 0)) {\n    throw new ArrayStoreException_1('Array types must match');\n  }\n  srclen = src_0.length;\n  destlen = dest.length;\n  if (srcOfs < 0 || destOfs < 0 || len < 0 || srcOfs + len > srclen || destOfs + len > destlen) {\n    throw new IndexOutOfBoundsException_0;\n  }\n  if (((srcComp.modifiers & 1) == 0 || (srcComp.modifiers & 4) != 0) && srcType != destType) {\n    srcArray = dynamicCast(src_0, Q$Object_$1);\n    destArray = dynamicCast(dest, Q$Object_$1);\n    if (maskUndefined(src_0) === maskUndefined(dest) && srcOfs < destOfs) {\n      srcOfs += len;\n      for (destEnd = destOfs + len; destEnd-- > destOfs;) {\n        setCheck(destArray, destEnd, srcArray[--srcOfs]);\n      }\n    }\n     else {\n      for (destEnd = destOfs + len; destOfs < destEnd;) {\n        setCheck(destArray, destOfs++, srcArray[srcOfs++]);\n      }\n    }\n  }\n   else {\n    Array.prototype.splice.apply(dest, [destOfs, len].concat(src_0.slice(srcOfs, srcOfs + len)));\n  }\n}\n\nvar err;\nfunction UnsupportedOperationException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction UnsupportedOperationException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(407, 6, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable]), UnsupportedOperationException_0, UnsupportedOperationException_1);\nfunction $clinit_BigInteger(){\n  $clinit_BigInteger = nullMethod;\n  var i;\n  ONE_0 = new BigInteger_0(1, 1);\n  TEN = new BigInteger_0(1, 10);\n  ZERO_0 = new BigInteger_0(0, 0);\n  MINUS_ONE = new BigInteger_0(-1, 1);\n  SMALL_VALUES = initValues(_3Ljava_math_BigInteger_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$BigInteger, [ZERO_0, ONE_0, new BigInteger_0(1, 2), new BigInteger_0(1, 3), new BigInteger_0(1, 4), new BigInteger_0(1, 5), new BigInteger_0(1, 6), new BigInteger_0(1, 7), new BigInteger_0(1, 8), new BigInteger_0(1, 9), TEN]);\n  TWO_POWS = initDim(_3Ljava_math_BigInteger_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$BigInteger, 32, 0);\n  for (i = 0; i < TWO_POWS.length; i++) {\n    TWO_POWS[i] = valueOf_2(shl(P1_longLit, i));\n  }\n}\n\nfunction $$init_1(this$static){\n}\n\nfunction $compareTo_1(this$static, val){\n  if (this$static.sign > val.sign) {\n    return 1;\n  }\n  if (this$static.sign < val.sign) {\n    return -1;\n  }\n  if (this$static.numberLength > val.numberLength) {\n    return this$static.sign;\n  }\n  if (this$static.numberLength < val.numberLength) {\n    return -val.sign;\n  }\n  return this$static.sign * compareArrays(this$static.digits, val.digits, this$static.numberLength);\n}\n\nfunction $cutOffLeadingZeroes(this$static){\n  while (this$static.numberLength > 0 && this$static.digits[--this$static.numberLength] == 0) {\n  }\n  this$static.digits[this$static.numberLength++] == 0 && (this$static.sign = 0);\n}\n\nfunction $equals_0(this$static, x_0){\n  var x1;\n  if (this$static === x_0) {\n    return true;\n  }\n  if (instanceOf(x_0, Q$BigInteger)) {\n    x1 = dynamicCast(x_0, Q$BigInteger);\n    return this$static.sign == x1.sign && this$static.numberLength == x1.numberLength && $equalsArrays(this$static, x1.digits);\n  }\n  return false;\n}\n\nfunction $equalsArrays(this$static, b){\n  var i;\n  for (i = this$static.numberLength - 1; i >= 0 && this$static.digits[i] == b[i]; i--) {\n  }\n  return i < 0;\n}\n\nfunction $getFirstNonzeroDigit(this$static){\n  var i;\n  if (this$static.firstNonzeroDigit == -2) {\n    if (this$static.sign == 0) {\n      i = -1;\n    }\n     else {\n      for (i = 0; this$static.digits[i] == 0; i++) {\n      }\n    }\n    this$static.firstNonzeroDigit = i;\n  }\n  return this$static.firstNonzeroDigit;\n}\n\nfunction $intValue(this$static){\n  return this$static.sign * this$static.digits[0];\n}\n\nfunction $shiftLeft(this$static, n){\n  if (n == 0 || this$static.sign == 0) {\n    return this$static;\n  }\n  return n > 0?shiftLeft(this$static, n):shiftRight(this$static, -n);\n}\n\nfunction $shiftRight(this$static, n){\n  if (n == 0 || this$static.sign == 0) {\n    return this$static;\n  }\n  return n > 0?shiftRight(this$static, n):shiftLeft(this$static, -n);\n}\n\nfunction BigInteger_0(sign, value_0){\n  $$init_1(this);\n  this.sign = sign;\n  this.numberLength = 1;\n  this.digits = initValues(_3I_classLit, makeCastMap([Q$Serializable]), -1, [value_0]);\n}\n\nfunction BigInteger_1(sign, numberLength, digits){\n  $clinit_BigInteger();\n  $$init_1(this);\n  this.sign = sign;\n  this.numberLength = numberLength;\n  this.digits = digits;\n}\n\nfunction BigInteger_2(sign, val){\n  $$init_1(this);\n  this.sign = sign;\n  if (eq(and(val, N100000000_longLit), P0_longLit)) {\n    this.numberLength = 1;\n    this.digits = initValues(_3I_classLit, makeCastMap([Q$Serializable]), -1, [toInt(val)]);\n  }\n   else {\n    this.numberLength = 2;\n    this.digits = initValues(_3I_classLit, makeCastMap([Q$Serializable]), -1, [toInt(val), toInt(shr(val, 32))]);\n  }\n}\n\nfunction valueOf_2(val){\n  $clinit_BigInteger();\n  if (lt(val, P0_longLit)) {\n    if (neq(val, N1_longLit)) {\n      return new BigInteger_2(-1, neg(val));\n    }\n    return MINUS_ONE;\n  }\n   else \n    return lte(val, Pa_longLit)?SMALL_VALUES[toInt(val)]:new BigInteger_2(1, val);\n}\n\ndefineSeed(408, 392, makeCastMap([Q$Serializable, Q$Comparable, Q$Number, Q$BigInteger]), BigInteger_0, BigInteger_1, BigInteger_2);\n_.compareTo$ = function compareTo_3(val){\n  return $compareTo_1(this, dynamicCast(val, Q$BigInteger));\n}\n;\n_.equals$ = function equals_7(x_0){\n  return $equals_0(this, x_0);\n}\n;\n_.hashCode$ = function hashCode_9(){\n  var i;\n  if (this.hashCode != 0) {\n    return this.hashCode;\n  }\n  for (i = 0; i < this.digits.length; i++) {\n    this.hashCode = this.hashCode * 33 + (this.digits[i] & -1);\n  }\n  this.hashCode = this.hashCode * this.sign;\n  return this.hashCode;\n}\n;\n_.toString$ = function toString_21(){\n  return toDecimalScaledString(this, 0);\n}\n;\n_.firstNonzeroDigit = -2;\n_.hashCode = 0;\n_.numberLength = 0;\n_.sign = 0;\nvar MINUS_ONE, ONE_0, SMALL_VALUES, TEN, TWO_POWS, ZERO_0;\nfunction shiftLeft(source, count){\n  var intCount, resDigits, resLength, result;\n  intCount = count >> 5;\n  count &= 31;\n  resLength = source.numberLength + intCount + (count == 0?0:1);\n  resDigits = initDim(_3I_classLit, makeCastMap([Q$Serializable]), -1, resLength, 1);\n  shiftLeft_0(resDigits, source.digits, intCount, count);\n  result = new BigInteger_1(source.sign, resLength, resDigits);\n  $cutOffLeadingZeroes(result);\n  return result;\n}\n\nfunction shiftLeft_0(result, source, intCount, count){\n  var i, i0, rightShiftCount;\n  if (count == 0) {\n    arraycopy(source, 0, result, intCount, result.length - intCount);\n  }\n   else {\n    rightShiftCount = 32 - count;\n    result[result.length - 1] = 0;\n    for (i = result.length - 1; i > intCount; i--) {\n      result[i] |= source[i - intCount - 1] >>> rightShiftCount;\n      result[i - 1] = source[i - intCount - 1] << count;\n    }\n  }\n  for (i0 = 0; i0 < intCount; i0++) {\n    result[i0] = 0;\n  }\n}\n\nfunction shiftRight(source, count){\n  var i, intCount, resDigits, resLength, result;\n  intCount = count >> 5;\n  count &= 31;\n  if (intCount >= source.numberLength) {\n    return source.sign < 0?($clinit_BigInteger() , MINUS_ONE):($clinit_BigInteger() , ZERO_0);\n  }\n  resLength = source.numberLength - intCount;\n  resDigits = initDim(_3I_classLit, makeCastMap([Q$Serializable]), -1, resLength + 1, 1);\n  shiftRight_0(resDigits, resLength, source.digits, intCount, count);\n  if (source.sign < 0) {\n    for (i = 0; i < intCount && source.digits[i] == 0; i++) {\n    }\n    if (i < intCount || count > 0 && source.digits[i] << 32 - count != 0) {\n      for (i = 0; i < resLength && resDigits[i] == -1; i++) {\n        resDigits[i] = 0;\n      }\n      i == resLength && ++resLength;\n      ++resDigits[i];\n    }\n  }\n  result = new BigInteger_1(source.sign, resLength, resDigits);\n  $cutOffLeadingZeroes(result);\n  return result;\n}\n\nfunction shiftRight_0(result, resultLen, source, intCount, count){\n  var allZero, i, leftShiftCount;\n  allZero = true;\n  for (i = 0; i < intCount; i++) {\n    allZero = allZero & source[i] == 0;\n  }\n  if (count == 0) {\n    arraycopy(source, intCount, result, 0, resultLen);\n  }\n   else {\n    leftShiftCount = 32 - count;\n    allZero = allZero & source[i] << leftShiftCount == 0;\n    for (i = 0; i < resultLen - 1; i++) {\n      result[i] = source[i + intCount] >>> count | source[i + intCount + 1] << leftShiftCount;\n    }\n    result[i] = source[i + intCount] >>> count;\n    ++i;\n  }\n  return allZero;\n}\n\n",
"function divideLongByBillion(a){\n  var aPos, quot, rem;\n  if (gte_0(a, P0_longLit)) {\n    quot = div(a, P3b9aca00_longLit);\n    rem = mod(a, P3b9aca00_longLit);\n  }\n   else {\n    aPos = shru(a, 1);\n    quot = div(aPos, P1dcd6500_longLit);\n    rem = mod(aPos, P1dcd6500_longLit);\n    rem = add_0(shl(rem, 1), and(a, P1_longLit));\n  }\n  return or(shl(rem, 32), and(quot, Pffffffff_longLit));\n}\n\nfunction toDecimalScaledString(val, scale){\n  var currentChar, delta, digits, exponent, highDigit, i, i1, insertPoint, j, j0, negNumber, numberLength, prev, previous, res, resDigit, resLengthInChars, result, result1, result10, result11, sign, startPoint, temp, temp1, tempLen, v;\n  sign = val.sign;\n  numberLength = val.numberLength;\n  digits = val.digits;\n  if (sign == 0) {\n    switch (scale) {\n      case 0:\n        return '0';\n      case 1:\n        return '0.0';\n      case 2:\n        return '0.00';\n      case 3:\n        return '0.000';\n      case 4:\n        return '0.0000';\n      case 5:\n        return '0.00000';\n      case 6:\n        return '0.000000';\n      default:result1 = new StringBuilder_0;\n        scale < 0?($append_0(result1.impl, '0E+') , result1):($append_0(result1.impl, '0E') , result1);\n        $append(result1.impl, -scale);\n        return result1.impl.string;\n    }\n  }\n  resLengthInChars = numberLength * 10 + 1 + 7;\n  result = initDim(_3C_classLit, makeCastMap([Q$Serializable]), -1, resLengthInChars + 1, 1);\n  currentChar = resLengthInChars;\n  if (numberLength == 1) {\n    highDigit = digits[0];\n    if (highDigit < 0) {\n      v = and(fromInt(highDigit), Pffffffff_longLit);\n      do {\n        prev = v;\n        v = div(v, Pa_longLit);\n        result[--currentChar] = 48 + toInt(sub_0(prev, mul(v, Pa_longLit))) & 65535;\n      }\n       while (neq(v, P0_longLit));\n    }\n     else {\n      v = highDigit;\n      do {\n        prev = v;\n        v = ~~(v / 10);\n        result[--currentChar] = 48 + (prev - v * 10) & 65535;\n      }\n       while (v != 0);\n    }\n  }\n   else {\n    temp = initDim(_3I_classLit, makeCastMap([Q$Serializable]), -1, numberLength, 1);\n    tempLen = numberLength;\n    arraycopy(digits, 0, temp, 0, numberLength);\n    BIG_LOOP: while (true) {\n      result11 = P0_longLit;\n      for (i1 = tempLen - 1; i1 >= 0; i1--) {\n        temp1 = add_0(shl(result11, 32), and(fromInt(temp[i1]), Pffffffff_longLit));\n        res = divideLongByBillion(temp1);\n        temp[i1] = toInt(res);\n        result11 = fromInt(toInt(shr(res, 32)));\n      }\n      resDigit = toInt(result11);\n      previous = currentChar;\n      do {\n        result[--currentChar] = 48 + resDigit % 10 & 65535;\n      }\n       while ((resDigit = ~~(resDigit / 10)) != 0 && currentChar != 0);\n      delta = 9 - previous + currentChar;\n      for (i = 0; i < delta && currentChar > 0; i++) {\n        result[--currentChar] = 48;\n      }\n      j = tempLen - 1;\n      for (; temp[j] == 0; j--) {\n        if (j == 0) {\n          break BIG_LOOP;\n        }\n      }\n      tempLen = j + 1;\n    }\n    while (result[currentChar] == 48) {\n      ++currentChar;\n    }\n  }\n  negNumber = sign < 0;\n  exponent = resLengthInChars - currentChar - scale - 1;\n  if (scale == 0) {\n    negNumber && (result[--currentChar] = 45);\n    return valueOf_1(result, currentChar, resLengthInChars - currentChar);\n  }\n  if (scale > 0 && exponent >= -6) {\n    if (exponent >= 0) {\n      insertPoint = currentChar + exponent;\n      for (j = resLengthInChars - 1; j >= insertPoint; j--) {\n        result[j + 1] = result[j];\n      }\n      result[++insertPoint] = 46;\n      negNumber && (result[--currentChar] = 45);\n      return valueOf_1(result, currentChar, resLengthInChars - currentChar + 1);\n    }\n    for (j0 = 2; j0 < -exponent + 1; j0++) {\n      result[--currentChar] = 48;\n    }\n    result[--currentChar] = 46;\n    result[--currentChar] = 48;\n    negNumber && (result[--currentChar] = 45);\n    return valueOf_1(result, currentChar, resLengthInChars - currentChar);\n  }\n  startPoint = currentChar + 1;\n  result10 = new StringBuilder_1;\n  negNumber && ($appendNonNull(result10.impl, '-') , result10);\n  if (resLengthInChars - startPoint >= 1) {\n    $appendNonNull(result10.impl, String.fromCharCode(result[currentChar]));\n    $appendNonNull(result10.impl, '.');\n    $appendNonNull(result10.impl, valueOf_1(result, currentChar + 1, resLengthInChars - currentChar - 1));\n  }\n   else {\n    $appendNonNull(result10.impl, valueOf_1(result, currentChar, resLengthInChars - currentChar));\n  }\n  $appendNonNull(result10.impl, 'E');\n  exponent > 0 && ($appendNonNull(result10.impl, '+') , result10);\n  $append_0(result10.impl, '' + exponent);\n  return result10.impl.string;\n}\n\nfunction compareArrays(a, b, size_0){\n  var i;\n  for (i = size_0 - 1; i >= 0 && a[i] == b[i]; i--) {\n  }\n  return i < 0?0:lt(and(fromInt(a[i]), Pffffffff_longLit), and(fromInt(b[i]), Pffffffff_longLit))?-1:1;\n}\n\nfunction and_0(val, that){\n  if (that.sign == 0 || val.sign == 0) {\n    return $clinit_BigInteger() , ZERO_0;\n  }\n  if ($equals_0(that, ($clinit_BigInteger() , MINUS_ONE))) {\n    return val;\n  }\n  if ($equals_0(val, MINUS_ONE)) {\n    return that;\n  }\n  return val.sign > 0?that.sign > 0?andPositive(val, that):andDiffSigns(val, that):that.sign > 0?andDiffSigns(that, val):val.numberLength > that.numberLength?andNegative(val, that):andNegative(that, val);\n}\n\nfunction andDiffSigns(positive, negative){\n  var i, iNeg, iPos, limit, resDigits, resLength, result;\n  iPos = $getFirstNonzeroDigit(positive);\n  iNeg = $getFirstNonzeroDigit(negative);\n  if (iNeg >= positive.numberLength) {\n    return $clinit_BigInteger() , ZERO_0;\n  }\n  resLength = positive.numberLength;\n  resDigits = initDim(_3I_classLit, makeCastMap([Q$Serializable]), -1, resLength, 1);\n  i = iPos > iNeg?iPos:iNeg;\n  if (i == iNeg) {\n    resDigits[i] = -negative.digits[i] & positive.digits[i];\n    ++i;\n  }\n  limit = min_0(negative.numberLength, positive.numberLength);\n  for (; i < limit; i++) {\n    resDigits[i] = ~negative.digits[i] & positive.digits[i];\n  }\n  if (i >= negative.numberLength) {\n    for (; i < positive.numberLength; i++) {\n      resDigits[i] = positive.digits[i];\n    }\n  }\n  result = new BigInteger_1(1, resLength, resDigits);\n  $cutOffLeadingZeroes(result);\n  return result;\n}\n\nfunction andNegative(longer, shorter){\n  var digit, i, iLonger, iShorter, resDigits, resLength, result, result0;\n  iLonger = $getFirstNonzeroDigit(longer);\n  iShorter = $getFirstNonzeroDigit(shorter);\n  if (iLonger >= shorter.numberLength) {\n    return longer;\n  }\n  i = iShorter > iLonger?iShorter:iLonger;\n  iShorter > iLonger?(digit = -shorter.digits[i] & ~longer.digits[i]):iShorter < iLonger?(digit = ~shorter.digits[i] & -longer.digits[i]):(digit = -shorter.digits[i] & -longer.digits[i]);\n  if (digit == 0) {\n    for (++i; i < shorter.numberLength && (digit = ~(longer.digits[i] | shorter.digits[i])) == 0; i++) {\n    }\n    if (digit == 0) {\n      for (; i < longer.numberLength && (digit = ~longer.digits[i]) == 0; i++) {\n      }\n      if (digit == 0) {\n        resLength = longer.numberLength + 1;\n        resDigits = initDim(_3I_classLit, makeCastMap([Q$Serializable]), -1, resLength, 1);\n        resDigits[resLength - 1] = 1;\n        result = new BigInteger_1(-1, resLength, resDigits);\n        return result;\n      }\n    }\n  }\n  resLength = longer.numberLength;\n  resDigits = initDim(_3I_classLit, makeCastMap([Q$Serializable]), -1, resLength, 1);\n  resDigits[i] = -digit;\n  for (++i; i < shorter.numberLength; i++) {\n    resDigits[i] = longer.digits[i] | shorter.digits[i];\n  }\n  for (; i < longer.numberLength; i++) {\n    resDigits[i] = longer.digits[i];\n  }\n  result0 = new BigInteger_1(-1, resLength, resDigits);\n  return result0;\n}\n\nfunction andPositive(val, that){\n  var i, resDigits, resLength, result;\n  resLength = min_0(val.numberLength, that.numberLength);\n  i = max_0($getFirstNonzeroDigit(val), $getFirstNonzeroDigit(that));\n  if (i >= resLength) {\n    return $clinit_BigInteger() , ZERO_0;\n  }\n  resDigits = initDim(_3I_classLit, makeCastMap([Q$Serializable]), -1, resLength, 1);\n  for (; i < resLength; i++) {\n    resDigits[i] = val.digits[i] & that.digits[i];\n  }\n  result = new BigInteger_1(1, resLength, resDigits);\n  $cutOffLeadingZeroes(result);\n  return result;\n}\n\nfunction or_0(val, that){\n  if ($equals_0(that, ($clinit_BigInteger() , MINUS_ONE)) || $equals_0(val, MINUS_ONE)) {\n    return MINUS_ONE;\n  }\n  if (that.sign == 0) {\n    return val;\n  }\n  if (val.sign == 0) {\n    return that;\n  }\n  return val.sign > 0?that.sign > 0?val.numberLength > that.numberLength?orPositive(val, that):orPositive(that, val):orDiffSigns(val, that):that.sign > 0?orDiffSigns(that, val):$getFirstNonzeroDigit(that) > $getFirstNonzeroDigit(val)?orNegative(that, val):orNegative(val, that);\n}\n\nfunction orDiffSigns(positive, negative){\n  var i, iNeg, iPos, limit, resDigits, resLength, result;\n  iNeg = $getFirstNonzeroDigit(negative);\n  iPos = $getFirstNonzeroDigit(positive);\n  if (iPos >= negative.numberLength) {\n    return negative;\n  }\n  resLength = negative.numberLength;\n  resDigits = initDim(_3I_classLit, makeCastMap([Q$Serializable]), -1, resLength, 1);\n  if (iNeg < iPos) {\n    for (i = iNeg; i < iPos; i++) {\n      resDigits[i] = negative.digits[i];\n    }\n  }\n   else if (iPos < iNeg) {\n    i = iPos;\n    resDigits[iPos] = -positive.digits[iPos];\n    limit = min_0(positive.numberLength, iNeg);\n    for (++i; i < limit; i++) {\n      resDigits[i] = ~positive.digits[i];\n    }\n    if (i != positive.numberLength) {\n      resDigits[i] = ~(-negative.digits[i] | positive.digits[i]);\n    }\n     else {\n      for (; i < iNeg; i++) {\n        resDigits[i] = -1;\n      }\n      resDigits[i] = negative.digits[i] - 1;\n    }\n    ++i;\n  }\n   else {\n    i = iPos;\n    resDigits[iPos] = -(-negative.digits[iPos] | positive.digits[iPos]);\n    ++i;\n  }\n  limit = min_0(negative.numberLength, positive.numberLength);\n  for (; i < limit; i++) {\n    resDigits[i] = negative.digits[i] & ~positive.digits[i];\n  }\n  for (; i < negative.numberLength; i++) {\n    resDigits[i] = negative.digits[i];\n  }\n  result = new BigInteger_1(-1, resLength, resDigits);\n  $cutOffLeadingZeroes(result);\n  return result;\n}\n\nfunction orNegative(val, that){\n  var i, iThat, iVal, resDigits, resLength, result;\n  iThat = $getFirstNonzeroDigit(that);\n  iVal = $getFirstNonzeroDigit(val);\n  if (iVal >= that.numberLength) {\n    return that;\n  }\n   else if (iThat >= val.numberLength) {\n    return val;\n  }\n  resLength = min_0(val.numberLength, that.numberLength);\n  resDigits = initDim(_3I_classLit, makeCastMap([Q$Serializable]), -1, resLength, 1);\n  if (iThat == iVal) {\n    resDigits[iVal] = -(-val.digits[iVal] | -that.digits[iVal]);\n    i = iVal;\n  }\n   else {\n    for (i = iThat; i < iVal; i++) {\n      resDigits[i] = that.digits[i];\n    }\n    resDigits[i] = that.digits[i] & val.digits[i] - 1;\n  }\n  for (++i; i < resLength; i++) {\n    resDigits[i] = val.digits[i] & that.digits[i];\n  }\n  result = new BigInteger_1(-1, resLength, resDigits);\n  $cutOffLeadingZeroes(result);\n  return result;\n}\n\nfunction orPositive(longer, shorter){\n  var i, resDigits, resLength, result;\n  resLength = longer.numberLength;\n  resDigits = initDim(_3I_classLit, makeCastMap([Q$Serializable]), -1, resLength, 1);\n  $getFirstNonzeroDigit(longer);\n  $getFirstNonzeroDigit(shorter);\n  for (i = 0; i < shorter.numberLength; i++) {\n    resDigits[i] = longer.digits[i] | shorter.digits[i];\n  }\n  for (; i < resLength; i++) {\n    resDigits[i] = longer.digits[i];\n  }\n  result = new BigInteger_1(1, resLength, resDigits);\n  return result;\n}\n\nfunction $advanceToFind(iter, o){\n  var t;\n  while (iter.hasNext()) {\n    t = iter.next_0();\n    if (o == null?t == null:equals__devirtual$(o, t)) {\n      return iter;\n    }\n  }\n  return null;\n}\n\nfunction $toString_1(this$static){\n  var comma, iter, sb, value_0;\n  sb = new StringBuffer_0;\n  comma = null;\n  $append_0(sb.impl, '[');\n  iter = this$static.iterator();\n  while (iter.hasNext()) {\n    comma != null?($append_0(sb.impl, comma) , sb):(comma = ', ');\n    value_0 = iter.next_0();\n    $append_0(sb.impl, value_0 === this$static?'(this Collection)':'' + value_0);\n  }\n  $append_0(sb.impl, ']');\n  return sb.impl.string;\n}\n\ndefineSeed(413, 1, {});\n_.add_1 = function add_5(o){\n  throw new UnsupportedOperationException_1('Add not supported on this collection');\n}\n;\n_.contains = function contains(o){\n  var iter;\n  iter = $advanceToFind(this.iterator(), o);\n  return !!iter;\n}\n;\n_.toString$ = function toString_22(){\n  return $toString_1(this);\n}\n;\nfunction $implFindEntry(this$static, key){\n  var entry, iter, k;\n  for (iter = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(this$static)).this$0); $hasNext(iter.iter);) {\n    entry = iter.last = dynamicCast($next_2(iter.iter), Q$Map$Entry);\n    k = entry.getKey();\n    if (key == null?k == null:equals__devirtual$(key, k)) {\n      return entry;\n    }\n  }\n  return null;\n}\n\nfunction $keySet(this$static){\n  var entrySet;\n  entrySet = new AbstractHashMap$EntrySet_0(this$static);\n  return new AbstractMap$1_0(this$static, entrySet);\n}\n\ndefineSeed(415, 1, makeCastMap([Q$Map]));\n_.equals$ = function equals_8(obj){\n  var entry, entry$iterator, otherKey, otherMap, otherValue;\n  if (obj === this) {\n    return true;\n  }\n  if (!instanceOf(obj, Q$Map)) {\n    return false;\n  }\n  otherMap = dynamicCast(obj, Q$Map);\n  if (this.size_0 != otherMap.size_1()) {\n    return false;\n  }\n  for (entry$iterator = otherMap.entrySet_0().iterator(); entry$iterator.hasNext();) {\n    entry = dynamicCast(entry$iterator.next_0(), Q$Map$Entry);\n    otherKey = entry.getKey();\n    otherValue = entry.getValue();\n    if (!(otherKey == null?this.nullSlotLive:instanceOf(otherKey, Q$String)?$hasStringValue(this, dynamicCast(otherKey, Q$String)):$hasHashValue(this, otherKey, ~~hashCode__devirtual$(otherKey)))) {\n      return false;\n    }\n    if (!equalsWithNullCheck(otherValue, otherKey == null?this.nullSlot:instanceOf(otherKey, Q$String)?$getStringValue(this, dynamicCast(otherKey, Q$String)):$getHashValue(this, otherKey, ~~hashCode__devirtual$(otherKey)))) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.get_0 = function get_1(key){\n  var entry;\n  entry = $implFindEntry(this, key);\n  return !entry?null:entry.getValue();\n}\n;\n_.hashCode$ = function hashCode_10(){\n  var entry, entry$iterator, hashCode;\n  hashCode = 0;\n  for (entry$iterator = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(this)).this$0); $hasNext(entry$iterator.iter);) {\n    entry = entry$iterator.last = dynamicCast($next_2(entry$iterator.iter), Q$Map$Entry);\n    hashCode += entry.hashCode$();\n    hashCode = ~~hashCode;\n  }\n  return hashCode;\n}\n;\n_.put = function put(key, value_0){\n  throw new UnsupportedOperationException_1('Put not supported on this map');\n}\n;\n_.size_1 = function size_1(){\n  return (new AbstractHashMap$EntrySet_0(this)).this$0.size_0;\n}\n;\n_.toString$ = function toString_23(){\n  var comma, entry, iter, s;\n  s = '{';\n  comma = false;\n  for (iter = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(this)).this$0); $hasNext(iter.iter);) {\n    entry = iter.last = dynamicCast($next_2(iter.iter), Q$Map$Entry);\n    comma?(s += ', '):(comma = true);\n    s += '' + entry.getKey();\n    s += '=';\n    s += '' + entry.getValue();\n  }\n  return s + '}';\n}\n;\nfunction $addAllHashEntries(this$static, dest){\n  var hashCodeMap = this$static.hashCodeMap;\n  for (var hashCode in hashCodeMap) {\n    var hashCodeInt = parseInt(hashCode, 10);\n    if (hashCode == hashCodeInt) {\n      var array = hashCodeMap[hashCodeInt];\n      for (var i = 0, c = array.length; i < c; ++i) {\n        dest.add_1(array[i]);\n      }\n    }\n  }\n}\n\nfunction $addAllStringEntries(this$static, dest){\n  var stringMap = this$static.stringMap;\n  for (var key in stringMap) {\n    if (key.charCodeAt(0) == 58) {\n      var entry = new AbstractHashMap$MapEntryString_0(this$static, key.substring(1));\n      dest.add_1(entry);\n    }\n  }\n}\n\nfunction $clearImpl(this$static){\n  this$static.hashCodeMap = [];\n  this$static.stringMap = {};\n  this$static.nullSlotLive = false;\n  this$static.nullSlot = null;\n  this$static.size_0 = 0;\n}\n\nfunction $containsKey(this$static, key){\n  return key == null?this$static.nullSlotLive:instanceOf(key, Q$String)?$hasStringValue(this$static, dynamicCast(key, Q$String)):$hasHashValue(this$static, key, ~~hashCode__devirtual$(key));\n}\n\nfunction $get_1(this$static, key){\n  return key == null?this$static.nullSlot:instanceOf(key, Q$String)?$getStringValue(this$static, dynamicCast(key, Q$String)):$getHashValue(this$static, key, ~~hashCode__devirtual$(key));\n}\n\nfunction $getHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        return entry.getValue();\n      }\n    }\n  }\n  return null;\n}\n\nfunction $getStringValue(this$static, key){\n  return this$static.stringMap[':' + key];\n}\n\nfunction $hasHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction $hasStringValue(this$static, key){\n  return ':' + key in this$static.stringMap;\n}\n\nfunction $put_0(this$static, key, value_0){\n  return key == null?$putNullSlot(this$static, value_0):instanceOf(key, Q$String)?$putStringValue(this$static, dynamicCast(key, Q$String), value_0):$putHashValue(this$static, key, value_0, ~~hashCode__devirtual$(key));\n}\n\nfunction $putHashValue(this$static, key, value_0, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        var previous = entry.getValue();\n        entry.setValue(value_0);\n        return previous;\n      }\n    }\n  }\n   else {\n    array = this$static.hashCodeMap[hashCode] = [];\n  }\n  var entry = new MapEntryImpl_0(key, value_0);\n  array.push(entry);\n  ++this$static.size_0;\n  return null;\n}\n\nfunction $putNullSlot(this$static, value_0){\n  var result;\n  result = this$static.nullSlot;\n  this$static.nullSlot = value_0;\n  if (!this$static.nullSlotLive) {\n    this$static.nullSlotLive = true;\n    ++this$static.size_0;\n  }\n  return result;\n}\n\nfunction $putStringValue(this$static, key, value_0){\n  var result, stringMap = this$static.stringMap;\n  key = ':' + key;\n  key in stringMap?(result = stringMap[key]):++this$static.size_0;\n  stringMap[key] = value_0;\n  return result;\n}\n\nfunction $remove_5(this$static, key){\n  return key == null?$removeNullSlot(this$static):instanceOf(key, Q$String)?$removeStringValue(this$static, dynamicCast(key, Q$String)):$removeHashValue(this$static, key, ~~hashCode__devirtual$(key));\n}\n\nfunction $removeHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        array.length == 1?delete this$static.hashCodeMap[hashCode]:array.splice(i, 1);\n        --this$static.size_0;\n        return entry.getValue();\n      }\n    }\n  }\n  return null;\n}\n\nfunction $removeNullSlot(this$static){\n  var result;\n  result = this$static.nullSlot;\n  this$static.nullSlot = null;\n  if (this$static.nullSlotLive) {\n    this$static.nullSlotLive = false;\n    --this$static.size_0;\n  }\n  return result;\n}\n\nfunction $removeStringValue(this$static, key){\n  var result, stringMap = this$static.stringMap;\n  key = ':' + key;\n  if (key in stringMap) {\n    result = stringMap[key];\n    --this$static.size_0;\n    delete stringMap[key];\n  }\n  return result;\n}\n\ndefineSeed(414, 415, makeCastMap([Q$Map]));\n_.entrySet_0 = function entrySet_0(){\n  return new AbstractHashMap$EntrySet_0(this);\n}\n;\n_.equalsBridge = function equalsBridge(value1, value2){\n  return maskUndefined(value1) === maskUndefined(value2) || value1 != null && equals__devirtual$(value1, value2);\n}\n;\n_.get_0 = function get_2(key){\n  return $get_1(this, key);\n}\n;\n_.put = function put_0(key, value_0){\n  return $put_0(this, key, value_0);\n}\n;\n_.size_1 = function size_2(){\n  return this.size_0;\n}\n;\n_.nullSlotLive = false;\n_.size_0 = 0;\ndefineSeed(417, 413, makeCastMap([Q$Set]));\n_.equals$ = function equals_9(o){\n  var iter, other, otherItem;\n  if (o === this) {\n    return true;\n  }\n  if (!instanceOf(o, Q$Set)) {\n    return false;\n  }\n  other = dynamicCast(o, Q$Set);\n  if (other.size_1() != this.size_1()) {\n    return false;\n  }\n  for (iter = other.iterator(); iter.hasNext();) {\n    otherItem = iter.next_0();\n    if (!this.contains(otherItem)) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.hashCode$ = function hashCode_11(){\n  var hashCode, iter, next;\n  hashCode = 0;\n  for (iter = this.iterator(); iter.hasNext();) {\n    next = iter.next_0();\n    if (next != null) {\n      hashCode += hashCode__devirtual$(next);\n      hashCode = ~~hashCode;\n    }\n  }\n  return hashCode;\n}\n;\nfunction $contains(this$static, o){\n  var entry, key, value_0;\n  if (instanceOf(o, Q$Map$Entry)) {\n    entry = dynamicCast(o, Q$Map$Entry);\n    key = entry.getKey();\n    if ($containsKey(this$static.this$0, key)) {\n      value_0 = $get_1(this$static.this$0, key);\n      return $equals_1(entry.getValue(), value_0);\n    }\n  }\n  return false;\n}\n\nfunction AbstractHashMap$EntrySet_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(416, 417, makeCastMap([Q$Set]), AbstractHashMap$EntrySet_0);\n_.contains = function contains_0(o){\n  return $contains(this, o);\n}\n;\n_.iterator = function iterator_4(){\n  return new AbstractHashMap$EntrySetIterator_0(this.this$0);\n}\n;\n_.size_1 = function size_3(){\n  return this.this$0.size_0;\n}\n;\nfunction $next_1(this$static){\n  return this$static.last = dynamicCast($next_2(this$static.iter), Q$Map$Entry);\n}\n\nfunction $remove_6(this$static){\n  if (!this$static.last) {\n    throw new IllegalStateException_1('Must call next() before remove().');\n  }\n   else {\n    $remove_7(this$static.iter);\n    $remove_5(this$static.this$0, this$static.last.getKey());\n    this$static.last = null;\n  }\n}\n\nfunction AbstractHashMap$EntrySetIterator_0(this$0){\n  var list;\n  this.this$0 = this$0;\n  list = new ArrayList_0;\n  this$0.nullSlotLive && $add_2(list, new AbstractHashMap$MapEntryNull_0(this$0));\n  $addAllStringEntries(this$0, list);\n  $addAllHashEntries(this$0, list);\n  this.iter = new AbstractList$IteratorImpl_0(list);\n}\n\ndefineSeed(418, 1, {}, AbstractHashMap$EntrySetIterator_0);\n_.hasNext = function hasNext_1(){\n  return $hasNext(this.iter);\n}\n;\n_.next_0 = function next_2(){\n  return $next_1(this);\n}\n;\n_.remove_1 = function remove_5(){\n  $remove_6(this);\n}\n;\n_.last = null;\ndefineSeed(420, 1, makeCastMap([Q$Map$Entry]));\n_.equals$ = function equals_10(other){\n  var entry;\n  if (instanceOf(other, Q$Map$Entry)) {\n    entry = dynamicCast(other, Q$Map$Entry);\n    if (equalsWithNullCheck(this.getKey(), entry.getKey()) && equalsWithNullCheck(this.getValue(), entry.getValue())) {\n      return true;\n    }\n  }\n  return false;\n}\n;\n_.hashCode$ = function hashCode_12(){\n  var keyHash, valueHash;\n  keyHash = 0;\n  valueHash = 0;\n  this.getKey() != null && (keyHash = hashCode__devirtual$(this.getKey()));\n  this.getValue() != null && (valueHash = hashCode__devirtual$(this.getValue()));\n  return keyHash ^ valueHash;\n}\n;\n_.toString$ = function toString_24(){\n  return this.getKey() + '=' + this.getValue();\n}\n;\nfunction AbstractHashMap$MapEntryNull_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(419, 420, makeCastMap([Q$Map$Entry]), AbstractHashMap$MapEntryNull_0);\n_.getKey = function getKey(){\n  return null;\n}\n;\n_.getValue = function getValue(){\n  return this.this$0.nullSlot;\n}\n;\n_.setValue = function setValue(object){\n  return $putNullSlot(this.this$0, object);\n}\n;\nfunction AbstractHashMap$MapEntryString_0(this$0, key){\n  this.this$0 = this$0;\n  this.key = key;\n}\n\ndefineSeed(421, 420, makeCastMap([Q$Map$Entry]), AbstractHashMap$MapEntryString_0);\n_.getKey = function getKey_0(){\n  return this.key;\n}\n;\n_.getValue = function getValue_0(){\n  return $getStringValue(this.this$0, this.key);\n}\n;\n_.setValue = function setValue_0(object){\n  return $putStringValue(this.this$0, this.key, object);\n}\n;\nfunction checkIndex(index_0, size_0){\n  (index_0 < 0 || index_0 >= size_0) && indexOutOfBounds(index_0, size_0);\n}\n\nfunction indexOutOfBounds(index_0, size_0){\n  throw new IndexOutOfBoundsException_1('Index: ' + index_0 + ', Size: ' + size_0);\n}\n\ndefineSeed(422, 413, makeCastMap([Q$List]));\n_.add_2 = function add_6(index_0, element){\n  throw new UnsupportedOperationException_1('Add not supported on this list');\n}\n;\n_.add_1 = function add_7(obj){\n  this.add_2(this.size_1(), obj);\n  return true;\n}\n;\n_.equals$ = function equals_11(o){\n  var elem, elemOther, iter, iterOther, other;\n  if (o === this) {\n    return true;\n  }\n  if (!instanceOf(o, Q$List)) {\n    return false;\n  }\n  other = dynamicCast(o, Q$List);\n  if (this.size_1() != other.size_1()) {\n    return false;\n  }\n  iter = this.iterator();\n  iterOther = other.iterator();\n  while (iter.hasNext()) {\n    elem = iter.next_0();\n    elemOther = iterOther.next_0();\n    if (!(elem == null?elemOther == null:equals__devirtual$(elem, elemOther))) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.hashCode$ = function hashCode_13(){\n  var iter, k, obj;\n  k = 1;\n  iter = this.iterator();\n  while (iter.hasNext()) {\n    obj = iter.next_0();\n    k = 31 * k + (obj == null?0:hashCode__devirtual$(obj));\n    k = ~~k;\n  }\n  return k;\n}\n;\n_.iterator = function iterator_5(){\n  return new AbstractList$IteratorImpl_0(this);\n}\n;\n_.listIterator = function listIterator(){\n  return this.listIterator_0(0);\n}\n;\n_.listIterator_0 = function listIterator_0(from){\n  return new AbstractList$ListIteratorImpl_0(this, from);\n}\n;\n_.remove_2 = function remove_6(index_0){\n  throw new UnsupportedOperationException_1('Remove not supported on this list');\n}\n;\nfunction $hasNext(this$static){\n  return this$static.i < this$static.this$0_0.size_1();\n}\n\nfunction $next_2(this$static){\n  if (this$static.i >= this$static.this$0_0.size_1()) {\n    throw new NoSuchElementException_0;\n  }\n  return this$static.this$0_0.get_1(this$static.last = this$static.i++);\n}\n\nfunction $remove_7(this$static){\n  if (this$static.last < 0) {\n    throw new IllegalStateException_0;\n  }\n  this$static.this$0_0.remove_2(this$static.last);\n  this$static.i = this$static.last;\n  this$static.last = -1;\n}\n\nfunction AbstractList$IteratorImpl_0(this$0){\n  this.this$0_0 = this$0;\n}\n\ndefineSeed(423, 1, {}, AbstractList$IteratorImpl_0);\n_.hasNext = function hasNext_2(){\n  return $hasNext(this);\n}\n;\n_.next_0 = function next_3(){\n  return $next_2(this);\n}\n;\n_.remove_1 = function remove_7(){\n  $remove_7(this);\n}\n;\n_.i = 0;\n_.last = -1;\nfunction AbstractList$ListIteratorImpl_0(this$0, start_0){\n  var size_0;\n  this.this$0 = this$0;\n  AbstractList$IteratorImpl_0.call(this, this$0);\n  size_0 = this$0.size_1();\n  (start_0 < 0 || start_0 > size_0) && indexOutOfBounds(start_0, size_0);\n  this.i = start_0;\n}\n\ndefineSeed(424, 423, {}, AbstractList$ListIteratorImpl_0);\n_.hasPrevious = function hasPrevious(){\n  return this.i > 0;\n}\n;\n_.previous = function previous_0(){\n  if (this.i <= 0) {\n    throw new NoSuchElementException_0;\n  }\n  return this.this$0.get_1(this.last = --this.i);\n}\n;\nfunction $iterator(this$static){\n  var outerIter;\n  outerIter = new AbstractHashMap$EntrySetIterator_0(this$static.val$entrySet.this$0);\n  return new AbstractMap$1$1_0(outerIter);\n}\n\nfunction AbstractMap$1_0(this$0, val$entrySet){\n  this.this$0 = this$0;\n  this.val$entrySet = val$entrySet;\n}\n\ndefineSeed(425, 417, makeCastMap([Q$Set]), AbstractMap$1_0);\n_.contains = function contains_1(key){\n  return $containsKey(this.this$0, key);\n}\n;\n_.iterator = function iterator_6(){\n  return $iterator(this);\n}\n;\n_.size_1 = function size_4(){\n  return this.val$entrySet.this$0.size_0;\n}\n;\nfunction $next_3(this$static){\n  var entry;\n  entry = $next_1(this$static.val$outerIter);\n  return entry.getKey();\n}\n\nfunction AbstractMap$1$1_0(val$outerIter){\n  this.val$outerIter = val$outerIter;\n}\n\ndefineSeed(426, 1, {}, AbstractMap$1$1_0);\n_.hasNext = function hasNext_3(){\n  return $hasNext(this.val$outerIter.iter);\n}\n;\n_.next_0 = function next_4(){\n  return $next_3(this);\n}\n;\n_.remove_1 = function remove_8(){\n  $remove_6(this.val$outerIter);\n}\n;\nfunction $get_2(this$static, index_0){\n  var iter;\n  iter = $listIterator(this$static, index_0);\n  try {\n    return $next_4(iter);\n  }\n   catch ($e0) {\n    $e0 = wrap_0($e0);\n    if (instanceOf($e0, Q$NoSuchElementException)) {\n      throw new IndexOutOfBoundsException_1(\"Can't get element \" + index_0);\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n\nfunction $remove_8(this$static, index_0){\n  var iter, old;\n  iter = $listIterator(this$static, index_0);\n  try {\n    old = $next_4(iter);\n  }\n   catch ($e0) {\n    $e0 = wrap_0($e0);\n    if (instanceOf($e0, Q$NoSuchElementException)) {\n      throw new IndexOutOfBoundsException_1(\"Can't remove element \" + index_0);\n    }\n     else \n      throw unwrap($e0);\n  }\n  $remove_10(iter);\n  return old;\n}\n\ndefineSeed(427, 422, makeCastMap([Q$List]));\n_.add_2 = function add_8(index_0, element){\n  var iter;\n  iter = $listIterator(this, index_0);\n  $addBefore(iter.this$0, element, iter.currentNode);\n  ++iter.currentIndex;\n  iter.lastNode = null;\n}\n;\n_.get_1 = function get_3(index_0){\n  return $get_2(this, index_0);\n}\n;\n_.iterator = function iterator_7(){\n  return $listIterator(this, 0);\n}\n;\n_.remove_2 = function remove_9(index_0){\n  return $remove_8(this, index_0);\n}\n;\n",
"function $$init_2(this$static){\n  this$static.array = initDim(_3Ljava_lang_Object_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$Object, 0, 0);\n}\n\nfunction $add_2(this$static, o){\n  setCheck(this$static.array, this$static.size_0++, o);\n  return true;\n}\n\nfunction $get_3(this$static, index_0){\n  checkIndex(index_0, this$static.size_0);\n  return this$static.array[index_0];\n}\n\nfunction $indexOf_2(this$static, o, index_0){\n  for (; index_0 < this$static.size_0; ++index_0) {\n    if (equalsWithNullCheck(o, this$static.array[index_0])) {\n      return index_0;\n    }\n  }\n  return -1;\n}\n\nfunction $set(this$static, index_0, o){\n  var previous;\n  previous = (checkIndex(index_0, this$static.size_0) , this$static.array[index_0]);\n  setCheck(this$static.array, index_0, o);\n  return previous;\n}\n\nfunction $toArray(this$static, out){\n  var i;\n  out.length < this$static.size_0 && (out = createFrom(out, this$static.size_0));\n  for (i = 0; i < this$static.size_0; ++i) {\n    setCheck(out, i, this$static.array[i]);\n  }\n  out.length > this$static.size_0 && setCheck(out, this$static.size_0, null);\n  return out;\n}\n\nfunction ArrayList_0(){\n  $$init_2(this);\n}\n\nfunction ArrayList_1(initialCapacity){\n  $$init_2(this);\n  setCapacity(this.array, initialCapacity);\n}\n\nfunction setCapacity(array, newSize){\n  array.length = newSize;\n}\n\nfunction splice_0(array, index_0, deleteCount){\n  array.splice(index_0, deleteCount);\n}\n\nfunction splice_1(array, index_0, deleteCount, value_0){\n  array.splice(index_0, deleteCount, value_0);\n}\n\ndefineSeed(428, 422, makeCastMap([Q$Serializable, Q$List, Q$RandomAccess]), ArrayList_0, ArrayList_1);\n_.add_2 = function add_9(index_0, o){\n  (index_0 < 0 || index_0 > this.size_0) && indexOutOfBounds(index_0, this.size_0);\n  splice_1(this.array, index_0, 0, o);\n  ++this.size_0;\n}\n;\n_.add_1 = function add_10(o){\n  return $add_2(this, o);\n}\n;\n_.contains = function contains_2(o){\n  return $indexOf_2(this, o, 0) != -1;\n}\n;\n_.get_1 = function get_4(index_0){\n  return $get_3(this, index_0);\n}\n;\n_.remove_2 = function remove_10(index_0){\n  var previous;\n  return previous = (checkIndex(index_0, this.size_0) , this.array[index_0]) , splice_0(this.array, index_0, 1) , --this.size_0 , previous;\n}\n;\n_.size_1 = function size_5(){\n  return this.size_0;\n}\n;\n_.size_0 = 0;\nfunction equals_12(array1, array2){\n  var i;\n  if (maskUndefined(array1) === maskUndefined(array2)) {\n    return true;\n  }\n  if (array1 == null || array2 == null) {\n    return false;\n  }\n  if (array1.length != array2.length) {\n    return false;\n  }\n  for (i = 0; i < array1.length; ++i) {\n    if (array1[i] != array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction fill(a, fromIndex, toIndex, val){\n  var i;\n  for (i = fromIndex; i < toIndex; ++i) {\n    a[i] = val;\n  }\n}\n\nfunction insertionSort(array, low, high, comp){\n  var i, j, t;\n  for (i = low + 1; i < high; ++i) {\n    for (j = i; j > low && comp.compare(array[j - 1], array[j]) > 0; --j) {\n      t = array[j];\n      setCheck(array, j, array[j - 1]);\n      setCheck(array, j - 1, t);\n    }\n  }\n}\n\nfunction merge(src_0, srcLow, srcMid, srcHigh, dest, destLow, destHigh, comp){\n  var topIdx;\n  topIdx = srcMid;\n  while (destLow < destHigh) {\n    topIdx >= srcHigh || srcLow < srcMid && comp.compare(src_0[srcLow], src_0[topIdx]) <= 0?setCheck(dest, destLow++, src_0[srcLow++]):setCheck(dest, destLow++, src_0[topIdx++]);\n  }\n}\n\nfunction mergeSort(x_0, fromIndex, toIndex, comp){\n  var temp;\n  temp = cloneSubrange(x_0, fromIndex, toIndex);\n  mergeSort_0(temp, x_0, fromIndex, toIndex, -fromIndex, comp);\n}\n\nfunction mergeSort_0(temp, array, low, high, ofs, comp){\n  var length_0, tempHigh, tempLow, tempMid;\n  length_0 = high - low;\n  if (length_0 < 7) {\n    insertionSort(array, low, high, comp);\n    return;\n  }\n  tempLow = low + ofs;\n  tempHigh = high + ofs;\n  tempMid = tempLow + (tempHigh - tempLow >> 1);\n  mergeSort_0(array, temp, tempLow, tempMid, -ofs, comp);\n  mergeSort_0(array, temp, tempMid, tempHigh, -ofs, comp);\n  if (comp.compare(temp[tempMid - 1], temp[tempMid]) <= 0) {\n    while (low < high) {\n      setCheck(array, low++, temp[tempLow++]);\n    }\n    return;\n  }\n  merge(temp, tempLow, tempMid, tempHigh, array, low, high, comp);\n}\n\nfunction $clinit_Collections(){\n  $clinit_Collections = nullMethod;\n  EMPTY_LIST = new Collections$EmptyList_0;\n}\n\nfunction replaceContents(target, x_0){\n  var i, size_0;\n  size_0 = target.size_0;\n  for (i = 0; i < size_0; i++) {\n    $set(target, i, x_0[i]);\n  }\n}\n\nfunction sort_0(target, c){\n  $clinit_Collections();\n  var x_0;\n  x_0 = cloneSubrange(target.array, 0, target.size_0);\n  mergeSort(x_0, 0, x_0.length, c?c:($clinit_Comparators() , $clinit_Comparators() , NATURAL));\n  replaceContents(target, x_0);\n}\n\nfunction unmodifiableList(list){\n  $clinit_Collections();\n  return instanceOf(list, Q$RandomAccess)?new Collections$UnmodifiableRandomAccessList_0(list):new Collections$UnmodifiableList_0(list);\n}\n\nvar EMPTY_LIST;\nfunction Collections$EmptyList_0(){\n}\n\ndefineSeed(431, 422, makeCastMap([Q$Serializable, Q$List, Q$RandomAccess]), Collections$EmptyList_0);\n_.contains = function contains_3(object){\n  return false;\n}\n;\n_.get_1 = function get_5(location_0){\n  throw new IndexOutOfBoundsException_0;\n}\n;\n_.size_1 = function size_6(){\n  return 0;\n}\n;\nfunction Collections$UnmodifiableCollection_0(coll){\n  this.coll = coll;\n}\n\ndefineSeed(432, 1, {});\n_.add_1 = function add_11(o){\n  throw new UnsupportedOperationException_0;\n}\n;\n_.iterator = function iterator_8(){\n  return new Collections$UnmodifiableCollectionIterator_0(this.coll.iterator());\n}\n;\n_.size_1 = function size_7(){\n  return this.coll.size_1();\n}\n;\n_.toString$ = function toString_25(){\n  return this.coll.toString$();\n}\n;\nfunction Collections$UnmodifiableCollectionIterator_0(it){\n  this.it = it;\n}\n\ndefineSeed(433, 1, {}, Collections$UnmodifiableCollectionIterator_0);\n_.hasNext = function hasNext_4(){\n  return this.it.hasNext();\n}\n;\n_.next_0 = function next_5(){\n  return this.it.next_0();\n}\n;\n_.remove_1 = function remove_11(){\n  throw new UnsupportedOperationException_0;\n}\n;\nfunction Collections$UnmodifiableList_0(list){\n  Collections$UnmodifiableCollection_0.call(this, list);\n  this.list = list;\n}\n\ndefineSeed(434, 432, makeCastMap([Q$List]), Collections$UnmodifiableList_0);\n_.equals$ = function equals_13(o){\n  return this.list.equals$(o);\n}\n;\n_.get_1 = function get_6(index_0){\n  return this.list.get_1(index_0);\n}\n;\n_.hashCode$ = function hashCode_14(){\n  return this.list.hashCode$();\n}\n;\n_.listIterator = function listIterator_1(){\n  return new Collections$UnmodifiableListIterator_0(this.list.listIterator_0(0));\n}\n;\n_.listIterator_0 = function listIterator_2(from){\n  return new Collections$UnmodifiableListIterator_0(this.list.listIterator_0(from));\n}\n;\nfunction Collections$UnmodifiableListIterator_0(lit){\n  Collections$UnmodifiableCollectionIterator_0.call(this, lit);\n  this.lit = lit;\n}\n\ndefineSeed(435, 433, {}, Collections$UnmodifiableListIterator_0);\n_.hasPrevious = function hasPrevious_0(){\n  return this.lit.hasPrevious();\n}\n;\n_.previous = function previous_1(){\n  return this.lit.previous();\n}\n;\nfunction Collections$UnmodifiableMap_0(map_0){\n  this.map_0 = map_0;\n}\n\ndefineSeed(436, 1, makeCastMap([Q$Map]), Collections$UnmodifiableMap_0);\n_.entrySet_0 = function entrySet_1(){\n  !this.entrySet && (this.entrySet = new Collections$UnmodifiableMap$UnmodifiableEntrySet_0(this.map_0.entrySet_0()));\n  return this.entrySet;\n}\n;\n_.equals$ = function equals_14(o){\n  return this.map_0.equals$(o);\n}\n;\n_.get_0 = function get_7(key){\n  return this.map_0.get_0(key);\n}\n;\n_.hashCode$ = function hashCode_15(){\n  return this.map_0.hashCode$();\n}\n;\n_.put = function put_1(key, value_0){\n  throw new UnsupportedOperationException_0;\n}\n;\n_.size_1 = function size_8(){\n  return this.map_0.size_1();\n}\n;\n_.toString$ = function toString_26(){\n  return this.map_0.toString$();\n}\n;\ndefineSeed(438, 432, makeCastMap([Q$Set]));\n_.equals$ = function equals_15(o){\n  return this.coll.equals$(o);\n}\n;\n_.hashCode$ = function hashCode_16(){\n  return this.coll.hashCode$();\n}\n;\nfunction Collections$UnmodifiableMap$UnmodifiableEntrySet_0(s){\n  Collections$UnmodifiableCollection_0.call(this, s);\n}\n\ndefineSeed(437, 438, makeCastMap([Q$Set]), Collections$UnmodifiableMap$UnmodifiableEntrySet_0);\n_.iterator = function iterator_9(){\n  var it;\n  it = this.coll.iterator();\n  return new Collections$UnmodifiableMap$UnmodifiableEntrySet$1_0(it);\n}\n;\nfunction Collections$UnmodifiableMap$UnmodifiableEntrySet$1_0(val$it){\n  this.val$it = val$it;\n}\n\ndefineSeed(439, 1, {}, Collections$UnmodifiableMap$UnmodifiableEntrySet$1_0);\n_.hasNext = function hasNext_5(){\n  return this.val$it.hasNext();\n}\n;\n_.next_0 = function next_6(){\n  return new Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry_0(dynamicCast(this.val$it.next_0(), Q$Map$Entry));\n}\n;\n_.remove_1 = function remove_12(){\n  throw new UnsupportedOperationException_0;\n}\n;\nfunction Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry_0(entry){\n  this.entry = entry;\n}\n\ndefineSeed(440, 1, makeCastMap([Q$Map$Entry]), Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry_0);\n_.equals$ = function equals_16(o){\n  return this.entry.equals$(o);\n}\n;\n_.getKey = function getKey_1(){\n  return this.entry.getKey();\n}\n;\n_.getValue = function getValue_1(){\n  return this.entry.getValue();\n}\n;\n_.hashCode$ = function hashCode_17(){\n  return this.entry.hashCode$();\n}\n;\n_.setValue = function setValue_1(value_0){\n  throw new UnsupportedOperationException_0;\n}\n;\n_.toString$ = function toString_27(){\n  return this.entry.toString$();\n}\n;\nfunction Collections$UnmodifiableRandomAccessList_0(list){\n  Collections$UnmodifiableList_0.call(this, list);\n}\n\ndefineSeed(441, 434, makeCastMap([Q$List, Q$RandomAccess]), Collections$UnmodifiableRandomAccessList_0);\nfunction $clinit_Comparators(){\n  $clinit_Comparators = nullMethod;\n  NATURAL = new Comparators$1_0;\n}\n\nvar NATURAL;\nfunction Comparators$1_0(){\n}\n\ndefineSeed(443, 1, {}, Comparators$1_0);\n_.compare = function compare_1(o1, o2){\n  return dynamicCast(o1, Q$Comparable).compareTo$(o2);\n}\n;\nfunction $compareTo_2(this$static, other){\n  return signum(sub_0(fromDouble(this$static.jsdate.getTime()), fromDouble(other.jsdate.getTime())));\n}\n\nfunction $toString_2(this$static){\n  var hourOffset, minuteOffset, offset;\n  offset = -this$static.jsdate.getTimezoneOffset();\n  hourOffset = (offset >= 0?'+':'') + ~~(offset / 60);\n  minuteOffset = (offset < 0?-offset:offset) % 60 < 10?'0' + (offset < 0?-offset:offset) % 60:'' + (offset < 0?-offset:offset) % 60;\n  return ($clinit_Date$StringData() , DAYS)[this$static.jsdate.getDay()] + ' ' + MONTHS[this$static.jsdate.getMonth()] + ' ' + padTwo(this$static.jsdate.getDate()) + ' ' + padTwo(this$static.jsdate.getHours()) + ':' + padTwo(this$static.jsdate.getMinutes()) + ':' + padTwo(this$static.jsdate.getSeconds()) + ' GMT' + hourOffset + minuteOffset + ' ' + this$static.jsdate.getFullYear();\n}\n\nfunction Date_1(){\n  this.jsdate = new Date;\n}\n\nfunction Date_2(date){\n  this.jsdate = create(toDouble(date));\n}\n\nfunction padTwo(number){\n  return number < 10?'0' + number:'' + number;\n}\n\ndefineSeed(444, 1, makeCastMap([Q$Serializable, Q$Comparable, Q$Date]), Date_1, Date_2);\n_.compareTo$ = function compareTo_4(other){\n  return $compareTo_2(this, dynamicCast(other, Q$Date));\n}\n;\n_.equals$ = function equals_17(obj){\n  return instanceOf(obj, Q$Date) && eq(fromDouble(this.jsdate.getTime()), fromDouble(dynamicCast(obj, Q$Date).jsdate.getTime()));\n}\n;\n_.hashCode$ = function hashCode_18(){\n  var time;\n  time = fromDouble(this.jsdate.getTime());\n  return toInt(xor(time, shru(time, 32)));\n}\n;\n_.toString$ = function toString_28(){\n  return $toString_2(this);\n}\n;\nfunction $clinit_Date$StringData(){\n  $clinit_Date$StringData = nullMethod;\n  DAYS = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$String, ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']);\n  MONTHS = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable, Q$Object_$1]), Q$String, ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']);\n}\n\nvar DAYS, MONTHS;\nfunction $equals_1(value1, value2){\n  return maskUndefined(value1) === maskUndefined(value2) || value1 != null && equals__devirtual$(value1, value2);\n}\n\nfunction HashMap_0(){\n  $clearImpl(this);\n}\n\ndefineSeed(446, 414, makeCastMap([Q$Serializable, Q$Map]), HashMap_0);\nfunction $add_3(this$static, o){\n  var old;\n  old = $put_0(this$static.map_0, o, this$static);\n  return old == null;\n}\n\nfunction $contains_0(this$static, o){\n  return $containsKey(this$static.map_0, o);\n}\n\nfunction $remove_9(this$static, o){\n  return $remove_5(this$static.map_0, o) != null;\n}\n\nfunction HashSet_0(){\n  this.map_0 = new HashMap_0;\n}\n\ndefineSeed(447, 417, makeCastMap([Q$Serializable, Q$Set]), HashSet_0);\n_.add_1 = function add_12(o){\n  return $add_3(this, o);\n}\n;\n_.contains = function contains_4(o){\n  return $contains_0(this, o);\n}\n;\n_.iterator = function iterator_10(){\n  return $iterator($keySet(this.map_0));\n}\n;\n_.size_1 = function size_9(){\n  return this.map_0.size_0;\n}\n;\n_.toString$ = function toString_29(){\n  return $toString_1($keySet(this.map_0));\n}\n;\nfunction $add_4(this$static, o){\n  new LinkedList$Node_1(o, this$static.header);\n  ++this$static.size_0;\n  return true;\n}\n\nfunction $addBefore(this$static, o, target){\n  new LinkedList$Node_1(o, target);\n  ++this$static.size_0;\n}\n\nfunction $listIterator(this$static, index_0){\n  var i, node;\n  (index_0 < 0 || index_0 > this$static.size_0) && indexOutOfBounds(index_0, this$static.size_0);\n  if (index_0 >= this$static.size_0 >> 1) {\n    node = this$static.header;\n    for (i = this$static.size_0; i > index_0; --i) {\n      node = node.prev;\n    }\n  }\n   else {\n    node = this$static.header.next;\n    for (i = 0; i < index_0; ++i) {\n      node = node.next;\n    }\n  }\n  return new LinkedList$ListIteratorImpl_0(this$static, index_0, node);\n}\n\nfunction LinkedList_0(){\n  this.header = new LinkedList$Node_0;\n  this.size_0 = 0;\n}\n\ndefineSeed(448, 427, makeCastMap([Q$Serializable, Q$List]), LinkedList_0);\n_.add_1 = function add_13(o){\n  return $add_4(this, o);\n}\n;\n_.listIterator_0 = function listIterator_3(index_0){\n  return $listIterator(this, index_0);\n}\n;\n_.size_1 = function size_10(){\n  return this.size_0;\n}\n;\n_.size_0 = 0;\nfunction $next_4(this$static){\n  if (this$static.currentNode == this$static.this$0.header) {\n    throw new NoSuchElementException_0;\n  }\n  this$static.lastNode = this$static.currentNode;\n  this$static.currentNode = this$static.currentNode.next;\n  ++this$static.currentIndex;\n  return this$static.lastNode.value_0;\n}\n\nfunction $remove_10(this$static){\n  $verifyCurrentElement(this$static);\n  this$static.currentNode == this$static.lastNode?(this$static.currentNode = this$static.lastNode.next):--this$static.currentIndex;\n  $remove_11(this$static.lastNode);\n  this$static.lastNode = null;\n  --this$static.this$0.size_0;\n}\n\nfunction $verifyCurrentElement(this$static){\n  if (!this$static.lastNode) {\n    throw new IllegalStateException_0;\n  }\n}\n\nfunction LinkedList$ListIteratorImpl_0(this$0, index_0, startNode){\n  this.this$0 = this$0;\n  this.currentNode = startNode;\n  this.currentIndex = index_0;\n}\n\ndefineSeed(449, 1, {}, LinkedList$ListIteratorImpl_0);\n_.hasNext = function hasNext_6(){\n  return this.currentNode != this.this$0.header;\n}\n;\n_.hasPrevious = function hasPrevious_1(){\n  return this.currentNode.prev != this.this$0.header;\n}\n;\n_.next_0 = function next_7(){\n  return $next_4(this);\n}\n;\n_.previous = function previous_2(){\n  if (this.currentNode.prev == this.this$0.header) {\n    throw new NoSuchElementException_0;\n  }\n  this.lastNode = this.currentNode = this.currentNode.prev;\n  --this.currentIndex;\n  return this.lastNode.value_0;\n}\n;\n_.remove_1 = function remove_13(){\n  $remove_10(this);\n}\n;\n_.currentIndex = 0;\n_.lastNode = null;\nfunction $remove_11(this$static){\n  this$static.next.prev = this$static.prev;\n  this$static.prev.next = this$static.next;\n  this$static.next = this$static.prev = this$static;\n}\n\nfunction LinkedList$Node_0(){\n  this.next = this.prev = this;\n}\n\nfunction LinkedList$Node_1(value_0, nextNode){\n  this.value_0 = value_0;\n  this.next = nextNode;\n  this.prev = nextNode.prev;\n  nextNode.prev.next = this;\n  nextNode.prev = this;\n}\n\ndefineSeed(450, 1, {}, LinkedList$Node_0, LinkedList$Node_1);\nfunction MapEntryImpl_0(key, value_0){\n  this.key = key;\n  this.value_0 = value_0;\n}\n\ndefineSeed(451, 420, makeCastMap([Q$Map$Entry]), MapEntryImpl_0);\n_.getKey = function getKey_2(){\n  return this.key;\n}\n;\n_.getValue = function getValue_2(){\n  return this.value_0;\n}\n;\n_.setValue = function setValue_2(value_0){\n  var old;\n  old = this.value_0;\n  this.value_0 = value_0;\n  return old;\n}\n;\nfunction NoSuchElementException_0(){\n  RuntimeException_0.call(this);\n}\n\ndefineSeed(452, 6, makeCastMap([Q$Serializable, Q$Exception, Q$Throwable, Q$NoSuchElementException]), NoSuchElementException_0);\nfunction equalsWithNullCheck(a, b){\n  return maskUndefined(a) === maskUndefined(b) || a != null && equals__devirtual$(a, b);\n}\n\nfunction $clinit_Level(){\n  $clinit_Level = nullMethod;\n  ALL = new Level$LevelAll_0;\n  CONFIG = new Level$LevelConfig_0;\n  FINE = new Level$LevelFine_0;\n  FINER = new Level$LevelFiner_0;\n  FINEST = new Level$LevelFinest_0;\n  INFO = new Level$LevelInfo_0;\n  OFF = new Level$LevelOff_0;\n  SEVERE = new Level$LevelSevere_0;\n  WARNING = new Level$LevelWarning_0;\n}\n\ndefineSeed(454, 1, makeCastMap([Q$Serializable]));\n_.getName = function getName(){\n  return 'DUMMY';\n}\n;\n_.intValue = function intValue(){\n  return -1;\n}\n;\n_.toString$ = function toString_30(){\n  return this.getName();\n}\n;\nvar ALL, CONFIG, FINE, FINER, FINEST, INFO, OFF, SEVERE, WARNING;\nfunction Level$LevelAll_0(){\n}\n\ndefineSeed(455, 454, makeCastMap([Q$Serializable]), Level$LevelAll_0);\n_.getName = function getName_0(){\n  return 'ALL';\n}\n;\n_.intValue = function intValue_0(){\n  return -2147483648;\n}\n;\nfunction Level$LevelConfig_0(){\n}\n\ndefineSeed(456, 454, makeCastMap([Q$Serializable]), Level$LevelConfig_0);\n_.getName = function getName_1(){\n  return 'CONFIG';\n}\n;\n_.intValue = function intValue_1(){\n  return 700;\n}\n;\nfunction Level$LevelFine_0(){\n}\n\ndefineSeed(457, 454, makeCastMap([Q$Serializable]), Level$LevelFine_0);\n_.getName = function getName_2(){\n  return 'FINE';\n}\n;\n_.intValue = function intValue_2(){\n  return 500;\n}\n;\nfunction Level$LevelFiner_0(){\n}\n\ndefineSeed(458, 454, makeCastMap([Q$Serializable]), Level$LevelFiner_0);\n_.getName = function getName_3(){\n  return 'FINER';\n}\n;\n_.intValue = function intValue_3(){\n  return 400;\n}\n;\nfunction Level$LevelFinest_0(){\n}\n\ndefineSeed(459, 454, makeCastMap([Q$Serializable]), Level$LevelFinest_0);\n_.getName = function getName_4(){\n  return 'FINEST';\n}\n;\n_.intValue = function intValue_4(){\n  return 300;\n}\n;\nfunction Level$LevelInfo_0(){\n}\n\ndefineSeed(460, 454, makeCastMap([Q$Serializable]), Level$LevelInfo_0);\n_.getName = function getName_5(){\n  return 'INFO';\n}\n;\n_.intValue = function intValue_5(){\n  return 800;\n}\n;\nfunction Level$LevelOff_0(){\n}\n\ndefineSeed(461, 454, makeCastMap([Q$Serializable]), Level$LevelOff_0);\n_.getName = function getName_6(){\n  return 'OFF';\n}\n;\n_.intValue = function intValue_6(){\n  return 2147483647;\n}\n;\nfunction Level$LevelSevere_0(){\n}\n\ndefineSeed(462, 454, makeCastMap([Q$Serializable]), Level$LevelSevere_0);\n_.getName = function getName_7(){\n  return 'SEVERE';\n}\n;\n_.intValue = function intValue_7(){\n  return 1000;\n}\n;\nfunction Level$LevelWarning_0(){\n}\n\ndefineSeed(463, 454, makeCastMap([Q$Serializable]), Level$LevelWarning_0);\n_.getName = function getName_8(){\n  return 'WARNING';\n}\n;\n_.intValue = function intValue_8(){\n  return 900;\n}\n;\nfunction $addLogger(this$static, logger){\n  if ($getLogger(this$static, logger.impl.name_0)) {\n    return false;\n  }\n  $addLoggerWithoutDuplicationChecking(this$static, logger);\n  return true;\n}\n\nfunction $addLoggerWithoutDuplicationChecking(this$static, logger){\n  var name_0, parent_0, parentName;\n  name_0 = logger.impl.name_0;\n  parentName = $substring_0(name_0, 0, max_0(0, $lastIndexOf(name_0, fromCodePoint(46))));\n  parent_0 = $getOrAddLogger(this$static, parentName);\n  $put_0(this$static.loggerList, logger.impl.name_0, logger);\n  $setParent(logger.impl, parent_0);\n}\n\nfunction $getLogger(this$static, name_0){\n  return dynamicCast($get_1(this$static.loggerList, name_0), Q$Logger);\n}\n\nfunction $getOrAddLogger(this$static, name_0){\n  var logger, newLogger;\n  logger = dynamicCast($get_1(this$static.loggerList, name_0), Q$Logger);\n  if (!logger) {\n    newLogger = new Logger_0(name_0);\n    $addLoggerWithoutDuplicationChecking(this$static, newLogger);\n    return newLogger;\n  }\n  return logger;\n}\n\nfunction LogManager_0(){\n  this.loggerList = new HashMap_0;\n  this.rootLogger = new LogManager$RootLogger_0;\n  $put_0(this.loggerList, '', this.rootLogger);\n}\n\ndefineSeed(464, 1, {}, LogManager_0);\nvar singleton;\nfunction LogManager$RootLogger_0(){\n  $clinit_Logger();\n  Logger_0.call(this, '');\n  $setLevel_1(this, ($clinit_Level() , ALL));\n}\n\ndefineSeed(465, 117, makeCastMap([Q$Logger]), LogManager$RootLogger_0);\nfunction $setLoggerName(this$static, newName){\n  this$static.loggerName = newName;\n}\n\nfunction LogRecord_0(level, msg){\n  this.level = level;\n  this.msg = msg;\n  this.millis = fromDouble((new Date_1).jsdate.getTime());\n}\n\ndefineSeed(466, 1, makeCastMap([Q$Serializable]), LogRecord_0);\n_.loggerName = '';\n_.millis = P0_longLit;\n_.thrown = null;\nvar $entry = registerEntry();\nfunction gwtOnLoad(errFn, modName, modBase, softPermutationId){\n  $moduleName = modName;\n  $moduleBase = modBase;\n  if (errFn)\n    try {\n      $entry(init)();\n    }\n     catch (e) {\n      errFn(modName);\n    }\n   else {\n    $entry(init)();\n  }\n}\n\n",
"var Ljava_lang_Object_2_classLit = createForClass('java.lang.', 'Object', 1), Lcom_google_gwt_core_client_Scheduler_2_classLit = createForClass('com.google.gwt.core.client.', 'Scheduler', 14), Lcom_google_gwt_core_client_JavaScriptObject_2_classLit = createForClass('com.google.gwt.core.client.', 'JavaScriptObject$', 9), I_classLit = createForPrimitive('int', ' I'), _3I_classLit = createForArray('', '[I', 472, I_classLit), _3Ljava_lang_Object_2_classLit = createForArray('[Ljava.lang.', 'Object;', 470, Ljava_lang_Object_2_classLit), Ljava_lang_Throwable_2_classLit = createForClass('java.lang.', 'Throwable', 8), Ljava_lang_Exception_2_classLit = createForClass('java.lang.', 'Exception', 7), Ljava_lang_RuntimeException_2_classLit = createForClass('java.lang.', 'RuntimeException', 6), Ljava_lang_StackTraceElement_2_classLit = createForClass('java.lang.', 'StackTraceElement', 401), _3Ljava_lang_StackTraceElement_2_classLit = createForArray('[Ljava.lang.', 'StackTraceElement;', 473, Ljava_lang_StackTraceElement_2_classLit), Lcom_google_gwt_lang_LongLibBase$LongEmul_2_classLit = createForClass('com.google.gwt.lang.', 'LongLibBase$LongEmul', null), _3Lcom_google_gwt_lang_LongLibBase$LongEmul_2_classLit = createForArray('[Lcom.google.gwt.lang.', 'LongLibBase$LongEmul;', 474, Lcom_google_gwt_lang_LongLibBase$LongEmul_2_classLit), Lcom_google_gwt_lang_SeedUtil_2_classLit = createForClass('com.google.gwt.lang.', 'SeedUtil', 92), Lcom_google_gwt_logging_client_LogConfiguration_2_classLit = createForClass('com.google.gwt.logging.client.', 'LogConfiguration', null), Lcom_google_gwt_logging_client_LogConfiguration$LogConfigurationImplRegular_2_classLit = createForClass('com.google.gwt.logging.client.', 'LogConfiguration$LogConfigurationImplRegular', 110), Lcom_google_gwt_logging_client_LogConfiguration$1_2_classLit = createForClass('com.google.gwt.logging.client.', 'LogConfiguration$1', 109), Ljava_lang_Enum_2_classLit = createForClass('java.lang.', 'Enum', 39), Ljava_lang_Boolean_2_classLit = createForClass('java.lang.', 'Boolean', 387), B_classLit = createForPrimitive('byte', ' B'), Ljava_lang_Number_2_classLit = createForClass('java.lang.', 'Number', 392), C_classLit = createForPrimitive('char', ' C'), _3C_classLit = createForArray('', '[C', 475, C_classLit), Ljava_lang_Class_2_classLit = createForClass('java.lang.', 'Class', 389), Ljava_lang_String_2_classLit = createForClass('java.lang.', 'String', 2), _3Ljava_lang_String_2_classLit = createForArray('[Ljava.lang.', 'String;', 471, Ljava_lang_String_2_classLit), _3B_classLit = createForArray('', '[B', 476, B_classLit), Ljava_lang_ClassCastException_2_classLit = createForClass('java.lang.', 'ClassCastException', 390), Lcom_google_gwt_core_client_JavaScriptException_2_classLit = createForClass('com.google.gwt.core.client.', 'JavaScriptException', 5), Ljava_lang_StringBuilder_2_classLit = createForClass('java.lang.', 'StringBuilder', 404), Ljava_lang_ArrayStoreException_2_classLit = createForClass('java.lang.', 'ArrayStoreException', 386), Ljava_util_logging_Logger_2_classLit = createForClass('java.util.logging.', 'Logger', 117), Lde_voot_encfsanywhere_client_controller_AppController_2_classLit = createForClass('de.voot.encfsanywhere.client.controller.', 'AppController', 229), Lde_voot_encfsanywhere_client_controller_Controller_2_classLit = createForInterface('de.voot.encfsanywhere.client.controller.', 'Controller'), _3Lde_voot_encfsanywhere_client_controller_Controller_2_classLit = createForArray('[Lde.voot.encfsanywhere.client.controller.', 'Controller;', 477, Lde_voot_encfsanywhere_client_controller_Controller_2_classLit), Ljava_util_logging_Handler_2_classLit = createForClass('java.util.logging.', 'Handler', 96), Lde_voot_encfsanywhere_client_logging_AlertEventLogHandler_2_classLit = createForClass('de.voot.encfsanywhere.client.logging.', 'AlertEventLogHandler', 253), Lcom_google_gwt_user_client_ui_UIObject_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'UIObject', 158), Lcom_google_gwt_user_client_ui_Widget_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Widget', 157), Lcom_google_gwt_user_client_ui_Panel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Panel', 156), Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ComplexPanel', 155), Lcom_google_gwt_user_client_ui_AbsolutePanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AbsolutePanel', 154), Lcom_google_gwt_user_client_ui_RootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel', 189), Lcom_google_gwt_user_client_ui_RootPanel$DefaultRootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$DefaultRootPanel', 192), Lcom_google_gwt_user_client_ui_RootPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$1', 190), Lcom_google_gwt_user_client_ui_RootPanel$3_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$3', 191), Lcom_google_web_bindery_event_shared_UmbrellaException_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'UmbrellaException', 71), Lcom_google_gwt_event_shared_UmbrellaException_2_classLit = createForClass('com.google.gwt.event.shared.', 'UmbrellaException', 70), Lcom_google_gwt_user_client_ui_AttachDetachException_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException', 159), Lcom_google_gwt_user_client_ui_AttachDetachException$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException$1', 160), Lcom_google_gwt_user_client_ui_AttachDetachException$2_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException$2', 161), Ljava_lang_NullPointerException_2_classLit = createForClass('java.lang.', 'NullPointerException', 398), Ljava_lang_IllegalArgumentException_2_classLit = createForClass('java.lang.', 'IllegalArgumentException', 393), Ljava_lang_ArithmeticException_2_classLit = createForClass('java.lang.', 'ArithmeticException', 383), Lcom_google_gwt_core_client_impl_StringBufferImpl_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StringBufferImpl', 21), Lcom_google_gwt_logging_impl_LoggerImplRegular_2_classLit = createForClass('com.google.gwt.logging.impl.', 'LoggerImplRegular', 115), _3Ljava_util_logging_Handler_2_classLit = createForArray('[Ljava.util.logging.', 'Handler;', 478, Ljava_util_logging_Handler_2_classLit), Ljava_util_AbstractMap_2_classLit = createForClass('java.util.', 'AbstractMap', 415), Ljava_util_AbstractHashMap_2_classLit = createForClass('java.util.', 'AbstractHashMap', 414), Ljava_util_HashMap_2_classLit = createForClass('java.util.', 'HashMap', 446), Ljava_util_AbstractCollection_2_classLit = createForClass('java.util.', 'AbstractCollection', 413), Ljava_util_AbstractSet_2_classLit = createForClass('java.util.', 'AbstractSet', 417), Ljava_util_AbstractHashMap$EntrySet_2_classLit = createForClass('java.util.', 'AbstractHashMap$EntrySet', 416), Ljava_util_AbstractHashMap$EntrySetIterator_2_classLit = createForClass('java.util.', 'AbstractHashMap$EntrySetIterator', 418), Ljava_util_AbstractMapEntry_2_classLit = createForClass('java.util.', 'AbstractMapEntry', 420), Ljava_util_AbstractHashMap$MapEntryNull_2_classLit = createForClass('java.util.', 'AbstractHashMap$MapEntryNull', 419), Ljava_util_AbstractHashMap$MapEntryString_2_classLit = createForClass('java.util.', 'AbstractHashMap$MapEntryString', 421), Ljava_util_AbstractMap$1_2_classLit = createForClass('java.util.', 'AbstractMap$1', 425), Ljava_util_AbstractMap$1$1_2_classLit = createForClass('java.util.', 'AbstractMap$1$1', 426), Ljava_util_HashSet_2_classLit = createForClass('java.util.', 'HashSet', 447), Lcom_google_gwt_i18n_client_LocaleInfo_2_classLit = createForClass('com.google.gwt.i18n.client.', 'LocaleInfo', 79), Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit = createForEnum('com.google.gwt.i18n.client.', 'HasDirection$Direction', 78, values_1), _3Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit = createForArray('[Lcom.google.gwt.i18n.client.', 'HasDirection$Direction;', 479, Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit), Lcom_google_web_bindery_event_shared_Event_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'Event', 54), Lcom_google_gwt_event_shared_GwtEvent_2_classLit = createForClass('com.google.gwt.event.shared.', 'GwtEvent', 53), Lcom_google_gwt_user_client_Window$ClosingEvent_2_classLit = createForClass('com.google.gwt.user.client.', 'Window$ClosingEvent', 139), Lcom_google_gwt_event_shared_HandlerManager_2_classLit = createForClass('com.google.gwt.event.shared.', 'HandlerManager', 65), Lcom_google_gwt_user_client_Window$WindowHandlers_2_classLit = createForClass('com.google.gwt.user.client.', 'Window$WindowHandlers', 141), Lcom_google_web_bindery_event_shared_Event$Type_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'Event$Type', 57), Lcom_google_gwt_event_shared_GwtEvent$Type_2_classLit = createForClass('com.google.gwt.event.shared.', 'GwtEvent$Type', 56), Lcom_google_web_bindery_event_shared_EventBus_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'EventBus', 68), Lcom_google_web_bindery_event_shared_SimpleEventBus_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus', 67), Lcom_google_gwt_event_shared_HandlerManager$Bus_2_classLit = createForClass('com.google.gwt.event.shared.', 'HandlerManager$Bus', 66), Lcom_google_web_bindery_event_shared_SimpleEventBus$1_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$1', 220), Lcom_google_web_bindery_event_shared_SimpleEventBus$2_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$2', 221), Lcom_google_gwt_core_client_impl_StringBufferImplAppend_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StringBufferImplAppend', 22), Lcom_google_gwt_core_client_impl_SchedulerImpl_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'SchedulerImpl', 16), Ljava_util_AbstractList_2_classLit = createForClass('java.util.', 'AbstractList', 422), Ljava_util_ArrayList_2_classLit = createForClass('java.util.', 'ArrayList', 428), Ljava_util_AbstractList$IteratorImpl_2_classLit = createForClass('java.util.', 'AbstractList$IteratorImpl', 423), Ljava_util_AbstractList$ListIteratorImpl_2_classLit = createForClass('java.util.', 'AbstractList$ListIteratorImpl', 424), Ljava_util_logging_Level_2_classLit = createForClass('java.util.logging.', 'Level', 454), Ljava_util_logging_Level$LevelAll_2_classLit = createForClass('java.util.logging.', 'Level$LevelAll', 455), Ljava_util_logging_Level$LevelConfig_2_classLit = createForClass('java.util.logging.', 'Level$LevelConfig', 456), Ljava_util_logging_Level$LevelFine_2_classLit = createForClass('java.util.logging.', 'Level$LevelFine', 457), Ljava_util_logging_Level$LevelFiner_2_classLit = createForClass('java.util.logging.', 'Level$LevelFiner', 458), Ljava_util_logging_Level$LevelFinest_2_classLit = createForClass('java.util.logging.', 'Level$LevelFinest', 459), Ljava_util_logging_Level$LevelInfo_2_classLit = createForClass('java.util.logging.', 'Level$LevelInfo', 460), Ljava_util_logging_Level$LevelOff_2_classLit = createForClass('java.util.logging.', 'Level$LevelOff', 461), Ljava_util_logging_Level$LevelSevere_2_classLit = createForClass('java.util.logging.', 'Level$LevelSevere', 462), Ljava_util_logging_Level$LevelWarning_2_classLit = createForClass('java.util.logging.', 'Level$LevelWarning', 463), Lde_voot_encfsanywhere_client_controller_AlertController_2_classLit = createForClass('de.voot.encfsanywhere.client.controller.', 'AlertController', 227), Lde_voot_encfsanywhere_client_controller_AlertController$1_2_classLit = createForClass('de.voot.encfsanywhere.client.controller.', 'AlertController$1', 228), Lde_voot_encfsanywhere_client_controller_StorageConnectController_2_classLit = createForClass('de.voot.encfsanywhere.client.controller.', 'StorageConnectController', 237), Lde_voot_encfsanywhere_client_controller_StorageConnectController$1_2_classLit = createForClass('de.voot.encfsanywhere.client.controller.', 'StorageConnectController$1', 238), Lde_voot_encfsanywhere_client_controller_StorageConnectController$2_2_classLit = createForClass('de.voot.encfsanywhere.client.controller.', 'StorageConnectController$2', 239), Lde_voot_encfsanywhere_client_controller_ListController_2_classLit = createForClass('de.voot.encfsanywhere.client.controller.', 'ListController', 230), Lde_voot_encfsanywhere_client_controller_ListController$1_2_classLit = createForClass('de.voot.encfsanywhere.client.controller.', 'ListController$1', 231), Lde_voot_encfsanywhere_client_controller_ListController$2_2_classLit = createForClass('de.voot.encfsanywhere.client.controller.', 'ListController$2', 232), Lde_voot_encfsanywhere_client_controller_ListController$3_2_classLit = createForClass('de.voot.encfsanywhere.client.controller.', 'ListController$3', 233), Lde_voot_encfsanywhere_client_controller_ListController$4_2_classLit = createForClass('de.voot.encfsanywhere.client.controller.', 'ListController$4', 234), Lde_voot_encfsanywhere_client_controller_ListController$5_2_classLit = createForClass('de.voot.encfsanywhere.client.controller.', 'ListController$5', 235), Lde_voot_encfsanywhere_client_controller_ListController$6_2_classLit = createForClass('de.voot.encfsanywhere.client.controller.', 'ListController$6', 236), Lde_voot_encfsanywhere_client_controller_UISugarController_2_classLit = createForClass('de.voot.encfsanywhere.client.controller.', 'UISugarController', 240), Lde_voot_encfsanywhere_client_controller_UISugarController$1_2_classLit = createForClass('de.voot.encfsanywhere.client.controller.', 'UISugarController$1', 241), Lde_voot_encfsanywhere_client_controller_UISugarController$2_2_classLit = createForClass('de.voot.encfsanywhere.client.controller.', 'UISugarController$2', 242), Lcom_google_gwt_user_client_impl_HistoryImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'HistoryImpl', 149), Lcom_google_gwt_user_client_impl_HistoryImplTimer_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'HistoryImplTimer', 151), Lcom_google_gwt_user_client_impl_HistoryImplMozilla_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'HistoryImplMozilla', 150), Ljava_util_logging_LogManager_2_classLit = createForClass('java.util.logging.', 'LogManager', 464), Ljava_util_logging_LogManager$RootLogger_2_classLit = createForClass('java.util.logging.', 'LogManager$RootLogger', 465), Lcom_google_gwt_logging_impl_LoggerWithExposedConstructor_2_classLit = createForClass('com.google.gwt.logging.impl.', 'LoggerWithExposedConstructor', 116), Lde_voot_encfsanywhere_client_gin_de_1voot_1encfsanywhere_1client_1gin_1InjectorImpl_2_classLit = createForClass('de.voot.encfsanywhere.client.gin.', 'de_voot_encfsanywhere_client_gin_InjectorImpl', 250), Ljava_lang_UnsupportedOperationException_2_classLit = createForClass('java.lang.', 'UnsupportedOperationException', 407), Ljava_lang_StringBuffer_2_classLit = createForClass('java.lang.', 'StringBuffer', 403), Lcom_google_gwt_user_client_impl_DOMImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImpl', 142), Lcom_google_gwt_user_client_impl_DOMImpl$1_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImpl$1', 143), Lcom_google_gwt_user_client_impl_DOMImplStandard_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImplStandard', 145), Lcom_google_gwt_user_client_impl_DOMImplMozilla_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImplMozilla', 144), Lcom_google_gwt_user_client_impl_WindowImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'WindowImpl', 152), Lcom_google_gwt_user_client_impl_WindowImplMozilla_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'WindowImplMozilla', 153), Lcom_google_gwt_event_logical_shared_CloseEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'CloseEvent', 63), Ljava_lang_IllegalStateException_2_classLit = createForClass('java.lang.', 'IllegalStateException', 394), Lcom_google_gwt_event_logical_shared_ValueChangeEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'ValueChangeEvent', 64), Ljava_util_logging_LogRecord_2_classLit = createForClass('java.util.logging.', 'LogRecord', 466), Lcom_google_gwt_logging_client_ConsoleLogHandler_2_classLit = createForClass('com.google.gwt.logging.client.', 'ConsoleLogHandler', 95), Lcom_google_gwt_logging_client_DevelopmentModeLogHandler_2_classLit = createForClass('com.google.gwt.logging.client.', 'DevelopmentModeLogHandler', 97), Lcom_google_gwt_logging_client_FirebugLogHandler_2_classLit = createForClass('com.google.gwt.logging.client.', 'FirebugLogHandler', 98), Lcom_google_gwt_logging_client_SystemLogHandler_2_classLit = createForClass('com.google.gwt.logging.client.', 'SystemLogHandler', 113), Lcom_google_gwt_logging_client_NullLogHandler_2_classLit = createForClass('com.google.gwt.logging.client.', 'NullLogHandler', 111), Lcom_google_gwt_logging_client_NullLoggingPopup_2_classLit = createForClass('com.google.gwt.logging.client.', 'NullLoggingPopup', 112), Lcom_google_gwt_logging_client_HasWidgetsLogHandler_2_classLit = createForClass('com.google.gwt.logging.client.', 'HasWidgetsLogHandler', 99), Lcom_google_gwt_user_client_ui_WidgetCollection_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'WidgetCollection', 198), _3Lcom_google_gwt_user_client_ui_Widget_2_classLit = createForArray('[Lcom.google.gwt.user.client.ui.', 'Widget;', 480, Lcom_google_gwt_user_client_ui_Widget_2_classLit), Lcom_google_gwt_user_client_ui_WidgetCollection$WidgetIterator_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'WidgetCollection$WidgetIterator', 199), Ljava_util_MapEntryImpl_2_classLit = createForClass('java.util.', 'MapEntryImpl', 451), Ljava_util_Date_2_classLit = createForClass('java.util.', 'Date', 444), Lcom_google_gwt_core_shared_SerializableThrowable_2_classLit = createForClass('com.google.gwt.core.shared.', 'SerializableThrowable', 24), Ljava_util_logging_Formatter_2_classLit = createForClass('java.util.logging.', 'Formatter', 102), Lcom_google_gwt_logging_impl_FormatterImpl_2_classLit = createForClass('com.google.gwt.logging.impl.', 'FormatterImpl', 101), Lcom_google_gwt_logging_client_TextLogFormatter_2_classLit = createForClass('com.google.gwt.logging.client.', 'TextLogFormatter', 114), Ljava_io_OutputStream_2_classLit = createForClass('java.io.', 'OutputStream', 107), Ljava_io_FilterOutputStream_2_classLit = createForClass('java.io.', 'FilterOutputStream', 106), Ljava_io_PrintStream_2_classLit = createForClass('java.io.', 'PrintStream', 105), Lcom_google_gwt_logging_impl_StackTracePrintStream_2_classLit = createForClass('com.google.gwt.logging.impl.', 'StackTracePrintStream', 104), Lcom_google_gwt_logging_client_HtmlLogFormatter_2_classLit = createForClass('com.google.gwt.logging.client.', 'HtmlLogFormatter', 100), Lcom_google_gwt_logging_client_HtmlLogFormatter$1_2_classLit = createForClass('com.google.gwt.logging.client.', 'HtmlLogFormatter$1', 103), Lde_voot_encfsanywhere_client_gin_de_1voot_1encfsanywhere_1client_1gin_1Injector_1InjectorGinjector_2_classLit = createForClass('de.voot.encfsanywhere.client.gin.', 'de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector', 251), Lde_voot_encfsanywhere_client_controller_de_1voot_1encfsanywhere_1client_1gin_1Injector_1InjectorGinjector_1fragment_2_classLit = createForClass('de.voot.encfsanywhere.client.controller.', 'de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_fragment', 243), Lde_voot_encfsanywhere_client_gin_de_1voot_1encfsanywhere_1client_1gin_1Injector_1InjectorGinjector_1fragment_2_classLit = createForClass('de.voot.encfsanywhere.client.gin.', 'de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_fragment', 252), Lcom_google_gwt_event_shared_LegacyHandlerWrapper_2_classLit = createForClass('com.google.gwt.event.shared.', 'LegacyHandlerWrapper', 69), Lde_voot_encfsanywhere_client_event_AlertEvent_2_classLit = createForClass('de.voot.encfsanywhere.client.event.', 'AlertEvent', 244), Lcom_google_gwt_user_client_ui_LabelBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'LabelBase', 175), Lcom_google_gwt_user_client_ui_Label_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Label', 174), Lcom_google_gwt_user_client_ui_HTML_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTML', 173), Ljava_lang_IndexOutOfBoundsException_2_classLit = createForClass('java.lang.', 'IndexOutOfBoundsException', 385), Lde_voot_encfsanywhere_client_gin_HandlerManagerProvider_2_classLit = createForClass('de.voot.encfsanywhere.client.gin.', 'HandlerManagerProvider', 248), Ljava_util_NoSuchElementException_2_classLit = createForClass('java.util.', 'NoSuchElementException', 452), Ljava_util_Collections$EmptyList_2_classLit = createForClass('java.util.', 'Collections$EmptyList', 431), Ljava_util_Collections$UnmodifiableCollection_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableCollection', 432), Ljava_util_Collections$UnmodifiableList_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableList', 434), Ljava_util_Collections$UnmodifiableMap_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableMap', 436), Ljava_util_Collections$UnmodifiableSet_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableSet', 438), Ljava_util_Collections$UnmodifiableMap$UnmodifiableEntrySet_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableMap$UnmodifiableEntrySet', 437), Ljava_util_Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry', 440), Ljava_util_Collections$UnmodifiableRandomAccessList_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableRandomAccessList', 441), Ljava_util_Collections$UnmodifiableCollectionIterator_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableCollectionIterator', 433), Ljava_util_Collections$UnmodifiableListIterator_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableListIterator', 435), Ljava_util_Collections$UnmodifiableMap$UnmodifiableEntrySet$1_2_classLit = createForClass('java.util.', 'Collections$UnmodifiableMap$UnmodifiableEntrySet$1', 439), Lde_voot_encfsanywhere_client_presenter_de_1voot_1encfsanywhere_1client_1gin_1Injector_1InjectorGinjector_1fragment_2_classLit = createForClass('de.voot.encfsanywhere.client.presenter.', 'de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_fragment', 259), Lde_voot_encfsanywhere_client_view_de_1voot_1encfsanywhere_1client_1gin_1Injector_1InjectorGinjector_1fragment_2_classLit = createForClass('de.voot.encfsanywhere.client.view.', 'de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_fragment', 279), Lde_voot_encfsanywhere_client_widget_de_1voot_1encfsanywhere_1client_1gin_1Injector_1InjectorGinjector_1fragment_2_classLit = createForClass('de.voot.encfsanywhere.client.widget.', 'de_voot_encfsanywhere_client_gin_Injector_InjectorGinjector_fragment', 286), Lcom_google_gwt_user_client_ui_DirectionalTextHelper_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DirectionalTextHelper', 168), Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign', 38, values_0), _3Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$TextAlign;', 481, Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit), Lcom_google_gwt_dom_client_Style$TextAlign$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$1', 40, null), Lcom_google_gwt_dom_client_Style$TextAlign$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$2', 41, null), Lcom_google_gwt_dom_client_Style$TextAlign$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$3', 42, null), Lcom_google_gwt_dom_client_Style$TextAlign$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$4', 43, null), Lde_voot_encfsanywhere_client_presenter_ListPresenter_2_classLit = createForClass('de.voot.encfsanywhere.client.presenter.', 'ListPresenter', 256), _3Ljava_lang_Boolean_2_classLit = createForArray('[Ljava.lang.', 'Boolean;', 482, Ljava_lang_Boolean_2_classLit), Lde_voot_encfsanywhere_fs_shared_Path_2_classLit = createForClass('de.voot.encfsanywhere.fs.shared.', 'Path', 298), _3Lde_voot_encfsanywhere_fs_shared_Path_2_classLit = createForArray('[Lde.voot.encfsanywhere.fs.shared.', 'Path;', 483, Lde_voot_encfsanywhere_fs_shared_Path_2_classLit), Lde_voot_encfsanywhere_client_presenter_ListPresenter$1_2_classLit = createForClass('de.voot.encfsanywhere.client.presenter.', 'ListPresenter$1', 257), Ljava_util_AbstractSequentialList_2_classLit = createForClass('java.util.', 'AbstractSequentialList', 427), Ljava_util_LinkedList_2_classLit = createForClass('java.util.', 'LinkedList', 448), Ljava_util_LinkedList$ListIteratorImpl_2_classLit = createForClass('java.util.', 'LinkedList$ListIteratorImpl', 449), Ljava_util_LinkedList$Node_2_classLit = createForClass('java.util.', 'LinkedList$Node', 450), Lde_voot_encfsanywhere_client_event_DropboxConnectedEvent_2_classLit = createForClass('de.voot.encfsanywhere.client.event.', 'DropboxConnectedEvent', 247), Lde_voot_encfsanywhere_client_event_AsyncCallStartedEvent_2_classLit = createForClass('de.voot.encfsanywhere.client.event.', 'AsyncCallStartedEvent', 246), Lde_voot_encfsanywhere_client_event_AsyncCallFinishedEvent_2_classLit = createForClass('de.voot.encfsanywhere.client.event.', 'AsyncCallFinishedEvent', 245), Lcom_google_gwt_event_dom_client_DomEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DomEvent', 52), Lcom_google_gwt_event_dom_client_DomEvent$Type_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DomEvent$Type', 55), Lcom_google_gwt_event_dom_client_PrivateMap_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'PrivateMap', 61), Lde_voot_encfsanywhere_client_presenter_StorageConnectPresenter_2_classLit = createForClass('de.voot.encfsanywhere.client.presenter.', 'StorageConnectPresenter', 258), Lde_voot_encfsanywhere_fs_shared_Files_2_classLit = createForClass('de.voot.encfsanywhere.fs.shared.', 'Files', 287), Lde_voot_encfsanywhere_fs_shared_Files$PathInfo_2_classLit = createForClass('de.voot.encfsanywhere.fs.shared.', 'Files$PathInfo', 297), Lde_voot_encfsanywhere_fs_shared_Files$EncFSPath_2_classLit = createForClass('de.voot.encfsanywhere.fs.shared.', 'Files$EncFSPath', 296), Lde_voot_encfsanywhere_fs_shared_Files$1_2_classLit = createForClass('de.voot.encfsanywhere.fs.shared.', 'Files$1', 288), Lde_voot_encfsanywhere_fs_shared_Files$1$1_2_classLit = createForClass('de.voot.encfsanywhere.fs.shared.', 'Files$1$1', 289), Lde_voot_encfsanywhere_fs_shared_Files$2_2_classLit = createForClass('de.voot.encfsanywhere.fs.shared.', 'Files$2', 290), Lde_voot_encfsanywhere_fs_shared_Files$3_2_classLit = createForClass('de.voot.encfsanywhere.fs.shared.', 'Files$3', 291), Lde_voot_encfsanywhere_fs_shared_Files$4_2_classLit = createForClass('de.voot.encfsanywhere.fs.shared.', 'Files$4', 292), Lde_voot_encfsanywhere_fs_shared_Files$5_2_classLit = createForClass('de.voot.encfsanywhere.fs.shared.', 'Files$5', 293), Lde_voot_encfsanywhere_fs_shared_Files$6_2_classLit = createForClass('de.voot.encfsanywhere.fs.shared.', 'Files$6', 294), Lde_voot_encfsanywhere_fs_shared_Files$7_2_classLit = createForClass('de.voot.encfsanywhere.fs.shared.', 'Files$7', 295), Lde_voot_encfsanywhere_client_presenter_AlertPresenter_2_classLit = createForClass('de.voot.encfsanywhere.client.presenter.', 'AlertPresenter', 255), Lcom_google_gwt_safehtml_shared_SafeHtmlString_2_classLit = createForClass('com.google.gwt.safehtml.shared.', 'SafeHtmlString', 121), Lcom_google_gwt_user_client_ui_Composite_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Composite', 167), Lde_voot_encfsanywhere_client_view_ListViewImpl_2_classLit = createForClass('de.voot.encfsanywhere.client.view.', 'ListViewImpl', 263), Lde_voot_encfsanywhere_client_view_ListViewImpl$1_2_classLit = createForClass('de.voot.encfsanywhere.client.view.', 'ListViewImpl$1', 264), Lde_voot_encfsanywhere_client_view_ListViewImpl$2_2_classLit = createForClass('de.voot.encfsanywhere.client.view.', 'ListViewImpl$2', 265), Lde_voot_encfsanywhere_client_view_ListViewImpl$3_2_classLit = createForClass('de.voot.encfsanywhere.client.view.', 'ListViewImpl$3', 266), Lde_voot_encfsanywhere_client_view_ListViewImpl$4_2_classLit = createForClass('de.voot.encfsanywhere.client.view.', 'ListViewImpl$4', 267), Lde_voot_encfsanywhere_client_util_Async$1_2_classLit = createForClass('de.voot.encfsanywhere.client.util.', 'Async$1', 261), Lde_voot_dropboxgwt_client_DropboxWrapper_2_classLit = createForClass('de.voot.dropboxgwt.client.', 'DropboxWrapper', 222), Lcom_google_gwt_storage_client_Storage_2_classLit = createForClass('com.google.gwt.storage.client.', 'Storage', 123), Lcom_google_gwt_storage_client_Storage$StorageSupportDetector_2_classLit = createForClass('com.google.gwt.storage.client.', 'Storage$StorageSupportDetector', 124), Lcom_google_gwt_user_client_ui_FocusWidget_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FocusWidget', 164), Lcom_google_gwt_user_client_ui_ValueBoxBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ValueBoxBase', 187), Lcom_google_gwt_user_client_ui_TextBoxBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TextBoxBase', 186), Lcom_google_gwt_user_client_ui_TextBox_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TextBox', 185), Lcom_google_gwt_user_client_ui_PasswordTextBox_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PasswordTextBox', 184), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment', 193, values_2), _3Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit = createForArray('[Lcom.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment;', 484, Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$1_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$1', 194, null), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$2_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$2', 195, null), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$3_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$3', 196, null), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$4_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$4', 197, null), Lcom_google_gwt_i18n_client_AutoDirectionHandler_2_classLit = createForClass('com.google.gwt.i18n.client.', 'AutoDirectionHandler', 74), Lcom_google_gwt_user_client_ui_ButtonBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ButtonBase', 163), Lcom_google_gwt_user_client_ui_Button_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Button', 162), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSVolume_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSVolume', 358), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSVolume$1_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSVolume$1', 359), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSVolume$2_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSVolume$2', 360), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSVolume$2$1_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSVolume$2$1', 361), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSVolume$5_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSVolume$5', 362), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSVolume$5$1_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSVolume$5$1', 363), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSVolume$6_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSVolume$6', 364), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSVolume$6$1_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSVolume$6$1', 365), Lde_voot_encfsanywhere_client_view_ListViewImpl_1ListViewImplUiBinderImpl$Widgets_2_classLit = createForClass('de.voot.encfsanywhere.client.view.', 'ListViewImpl_ListViewImplUiBinderImpl$Widgets', 268), Lde_voot_encfsanywhere_client_view_ListViewImpl_1ListViewImplUiBinderImpl$Widgets$1_2_classLit = createForClass('de.voot.encfsanywhere.client.view.', 'ListViewImpl_ListViewImplUiBinderImpl$Widgets$1', 269), Lcom_google_gwt_event_dom_client_KeyEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'KeyEvent', 59), Lcom_google_gwt_event_dom_client_KeyCodeEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'KeyCodeEvent', 58), Lcom_google_gwt_event_dom_client_KeyDownEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'KeyDownEvent', 60), Lcom_google_gwt_event_dom_client_HumanInputEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'HumanInputEvent', 51), Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseEvent', 50), Lcom_google_gwt_event_dom_client_ClickEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'ClickEvent', 49), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSException_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSException', 340), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSCorruptDataException_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSCorruptDataException', 346), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSFile_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSFile', 348), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSFile$2_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSFile$2', 349), _3Lde_voot_encfsgwt_shared_mrpdaemon_EncFSFile_2_classLit = createForArray('[Lde.voot.encfsgwt.shared.mrpdaemon.', 'EncFSFile;', 485, Lde_voot_encfsgwt_shared_mrpdaemon_EncFSFile_2_classLit), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSFile$3_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSFile$3', 350), Ljava_io_IOException_2_classLit = createForClass('java.io.', 'IOException', 322), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSFileInfo_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSFileInfo', 351), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSFilenameEncryptionAlgorithm_2_classLit = createForEnum('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSFilenameEncryptionAlgorithm', 352, values_3), _3Lde_voot_encfsgwt_shared_mrpdaemon_EncFSFilenameEncryptionAlgorithm_2_classLit = createForArray('[Lde.voot.encfsgwt.shared.mrpdaemon.', 'EncFSFilenameEncryptionAlgorithm;', 486, Lde_voot_encfsgwt_shared_mrpdaemon_EncFSFilenameEncryptionAlgorithm_2_classLit), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSConfig_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSConfig', 341), Lde_voot_encfsgwt_shared_mrpdaemon_FilenameEncryptionStrategy_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'FilenameEncryptionStrategy', 334), Lde_voot_encfsgwt_shared_mrpdaemon_NullFilenameEncryptionStrategy_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'NullFilenameEncryptionStrategy', 375), Lde_voot_encfsgwt_shared_mrpdaemon_BasicFilenameEncryptionStrategy_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'BasicFilenameEncryptionStrategy', 333), Lde_voot_encfsgwt_shared_mrpdaemon_BlockFilenameEncryptionStrategy_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'BlockFilenameEncryptionStrategy', 337), Lde_voot_encfsgwt_shared_mrpdaemon_StreamFilenameEncryptionStrategy_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'StreamFilenameEncryptionStrategy', 378), Lde_voot_encfsgwt_shared_jre_FileNotFoundException_2_classLit = createForClass('de.voot.encfsgwt.shared.jre.', 'FileNotFoundException', 321), Lde_voot_encfsanywhere_client_view_StorageConnectViewImpl_2_classLit = createForClass('de.voot.encfsanywhere.client.view.', 'StorageConnectViewImpl', 271), Lde_voot_encfsanywhere_client_view_StorageConnectViewImpl$1_2_classLit = createForClass('de.voot.encfsanywhere.client.view.', 'StorageConnectViewImpl$1', 272), Lde_voot_encfsanywhere_client_widget_AlertWidgetImpl_2_classLit = createForClass('de.voot.encfsanywhere.client.widget.', 'AlertWidgetImpl', 282), Lde_voot_encfsanywhere_client_widget_AlertWidgetImpl$1_2_classLit = createForClass('de.voot.encfsanywhere.client.widget.', 'AlertWidgetImpl$1', 283), Lcom_google_gwt_user_client_ui_HTMLPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLPanel', 176), Lcom_google_gwt_uibinder_client_LazyDomElement_2_classLit = createForClass('com.google.gwt.uibinder.client.', 'LazyDomElement', 130), Lcom_google_gwt_user_client_ui_CheckBox_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'CheckBox', 165), Lcom_google_gwt_user_client_ui_CheckBox$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'CheckBox$1', 166), Lcom_google_gwt_uibinder_client_UiBinderUtil$TempAttachment_2_classLit = createForClass('com.google.gwt.uibinder.client.', 'UiBinderUtil$TempAttachment', 132), Lcom_google_gwt_user_client_ui_HTMLTable_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable', 170), Lcom_google_gwt_user_client_ui_FlexTable_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FlexTable', 169), Lcom_google_gwt_user_client_ui_HTMLTable$CellFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$CellFormatter', 172), Lcom_google_gwt_user_client_ui_FlexTable$FlexCellFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FlexTable$FlexCellFormatter', 171), Lcom_google_gwt_user_client_ui_HTMLTable$Cell_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$Cell', 178), Lcom_google_gwt_user_client_ui_HTMLTable$ColumnFormatter_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$ColumnFormatter', 179), Lcom_google_gwt_user_client_ui_HTMLTable$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTMLTable$1', 177), Lde_voot_encfsgwt_shared_crypto_Mac_2_classLit = createForClass('de.voot.encfsgwt.shared.crypto.', 'Mac', 315), Lde_voot_encfsgwt_shared_crypto_Mac$HmacSHA1Wrapper_2_classLit = createForClass('de.voot.encfsgwt.shared.crypto.', 'Mac$HmacSHA1Wrapper', 316), Lde_voot_encfsgwt_shared_jre_GeneralSecurityException_2_classLit = createForClass('de.voot.encfsgwt.shared.jre.', 'GeneralSecurityException', 324), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSUnsupportedException_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSUnsupportedException', 356), Lde_voot_encfsgwt_shared_jre_InputStream_2_classLit = createForClass('de.voot.encfsgwt.shared.jre.', 'InputStream', 300), Lde_voot_encfsgwt_shared_jre_FilterInputStream_2_classLit = createForClass('de.voot.encfsgwt.shared.jre.', 'FilterInputStream', 323), Lde_voot_encfsanywhere_client_view_StorageConnectViewImpl_1StorageConnectViewUiBinderImpl$Widgets_2_classLit = createForClass('de.voot.encfsanywhere.client.view.', 'StorageConnectViewImpl_StorageConnectViewUiBinderImpl$Widgets', 273), Lde_voot_encfsanywhere_client_view_StorageConnectViewImpl_1StorageConnectViewUiBinderImpl$Widgets$1_2_classLit = createForClass('de.voot.encfsanywhere.client.view.', 'StorageConnectViewImpl_StorageConnectViewUiBinderImpl$Widgets$1', 274), Lde_voot_encfsanywhere_fs_shared_providers_DropboxFileProvider_2_classLit = createForClass('de.voot.encfsanywhere.fs.shared.providers.', 'DropboxFileProvider', 301), Lde_voot_encfsanywhere_fs_shared_providers_DropboxFileProvider$2_2_classLit = createForClass('de.voot.encfsanywhere.fs.shared.providers.', 'DropboxFileProvider$2', 302), Lde_voot_encfsanywhere_fs_shared_providers_DropboxFileProvider$3_2_classLit = createForClass('de.voot.encfsanywhere.fs.shared.providers.', 'DropboxFileProvider$3', 303), Lde_voot_encfsanywhere_fs_shared_providers_DropboxFileProvider$4_2_classLit = createForClass('de.voot.encfsanywhere.fs.shared.providers.', 'DropboxFileProvider$4', 304), Lde_voot_encfsanywhere_fs_shared_providers_DropboxFileProvider$5_2_classLit = createForClass('de.voot.encfsanywhere.fs.shared.providers.', 'DropboxFileProvider$5', 305), Lde_voot_encfsanywhere_client_widget_AlertWidgetImpl_1AlertWidgetImplUiBinderImpl$Widgets_2_classLit = createForClass('de.voot.encfsanywhere.client.widget.', 'AlertWidgetImpl_AlertWidgetImplUiBinderImpl$Widgets', 284), Lcom_google_gwt_safehtml_shared_SafeHtmlBuilder_2_classLit = createForClass('com.google.gwt.safehtml.shared.', 'SafeHtmlBuilder', 120), Lde_voot_encfsgwt_shared_crypto_Cipher_2_classLit = createForClass('de.voot.encfsgwt.shared.crypto.', 'Cipher', 313), Lde_voot_encfsgwt_shared_crypto_Cipher$AES_1SJCL_1Wrapper_2_classLit = createForClass('de.voot.encfsgwt.shared.crypto.', 'Cipher$AES_SJCL_Wrapper', 314), Lcom_google_gwt_safehtml_shared_OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml_2_classLit = createForClass('com.google.gwt.safehtml.shared.', 'OnlyToBeUsedInGeneratedCodeStringBlessedAsSafeHtml', 119), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSChecksumException_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSChecksumException', 339), Ljava_math_BigInteger_2_classLit = createForClass('java.math.', 'BigInteger', 408), _3Ljava_math_BigInteger_2_classLit = createForArray('[Ljava.math.', 'BigInteger;', 487, Ljava_math_BigInteger_2_classLit), Lcom_google_gwt_user_client_ui_InlineHTML_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'InlineHTML', 183), Lde_voot_encfsgwt_shared_mrpdaemon_FilenameDecryptionStrategy_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'FilenameDecryptionStrategy', 332), Lde_voot_encfsgwt_shared_mrpdaemon_NullFilenameDecryptionStrategy_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'NullFilenameDecryptionStrategy', 374), Lde_voot_encfsgwt_shared_mrpdaemon_BasicFilenameDecryptionStrategy_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'BasicFilenameDecryptionStrategy', 331), Lde_voot_encfsgwt_shared_mrpdaemon_BlockFilenameDecryptionStrategy_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'BlockFilenameDecryptionStrategy', 336), Lde_voot_encfsgwt_shared_mrpdaemon_StreamFilenameDecryptionStrategy_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'StreamFilenameDecryptionStrategy', 377), Lcom_google_gwt_user_client_impl_ElementMapperImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'ElementMapperImpl', 146), Lcom_google_gwt_user_client_impl_ElementMapperImpl$FreeNode_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'ElementMapperImpl$FreeNode', 147), Ljava_util_Comparators$1_2_classLit = createForClass('java.util.', 'Comparators$1', 443), Lcom_google_gwt_user_client_ui_Hyperlink_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Hyperlink', 182), Lde_voot_encfsgwt_shared_jre_KeyException_2_classLit = createForClass('de.voot.encfsgwt.shared.jre.', 'KeyException', 326), Lde_voot_encfsgwt_shared_jre_InvalidKeyException_2_classLit = createForClass('de.voot.encfsgwt.shared.jre.', 'InvalidKeyException', 325), Lde_voot_encfsgwt_shared_jre_IvParameterSpec_2_classLit = createForClass('de.voot.encfsgwt.shared.jre.', 'IvParameterSpec', 327), Ljava_lang_StringIndexOutOfBoundsException_2_classLit = createForClass('java.lang.', 'StringIndexOutOfBoundsException', 405), Lde_voot_encfsanywhere_client_model_DownloadStatus_2_classLit = createForClass('de.voot.encfsanywhere.client.model.', 'DownloadStatus', 254), Lcom_google_gwt_text_shared_AbstractRenderer_2_classLit = createForClass('com.google.gwt.text.shared.', 'AbstractRenderer', 127), Lcom_google_gwt_text_shared_testing_PassthroughRenderer_2_classLit = createForClass('com.google.gwt.text.shared.testing.', 'PassthroughRenderer', 129), Lcom_google_gwt_text_shared_testing_PassthroughParser_2_classLit = createForClass('com.google.gwt.text.shared.testing.', 'PassthroughParser', 128), Lde_voot_encfsanywhere_fs_shared_providers_PathRewritingWrapper_2_classLit = createForClass('de.voot.encfsanywhere.fs.shared.providers.', 'PathRewritingWrapper', 306), Lde_voot_encfsanywhere_fs_shared_providers_PathRewritingWrapper$1_2_classLit = createForClass('de.voot.encfsanywhere.fs.shared.providers.', 'PathRewritingWrapper$1', 307), Lde_voot_encfsanywhere_fs_shared_providers_PathRewritingWrapper$2_2_classLit = createForClass('de.voot.encfsanywhere.fs.shared.providers.', 'PathRewritingWrapper$2', 308), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSVolumeBuilder$FileProviderBuilder_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSVolumeBuilder$FileProviderBuilder', 368), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSVolumeBuilder$ConfigBuilder_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSVolumeBuilder$ConfigBuilder', 366), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSVolumeBuilder$Pbkdf2ProviderBuilder_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSVolumeBuilder$Pbkdf2ProviderBuilder', 373), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSVolumeBuilder$PasswordBuilder_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSVolumeBuilder$PasswordBuilder', 371), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSVolumeBuilder$FileProviderBuilder$1_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSVolumeBuilder$FileProviderBuilder$1', 369), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSVolumeBuilder$FileProviderBuilder$2_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSVolumeBuilder$FileProviderBuilder$2', 370), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSVolumeBuilder$ConfigBuilder$1_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSVolumeBuilder$ConfigBuilder$1', 367), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSVolumeBuilder$PasswordBuilder$1_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSVolumeBuilder$PasswordBuilder$1', 372), Ljava_lang_NumberFormatException_2_classLit = createForClass('java.lang.', 'NumberFormatException', 400), Lcom_google_gwt_i18n_client_NumberFormat_2_classLit = createForClass('com.google.gwt.i18n.client.', 'NumberFormat', 80), Ljava_lang_ArrayIndexOutOfBoundsException_2_classLit = createForClass('java.lang.', 'ArrayIndexOutOfBoundsException', 384), Lde_voot_encfsanywhere_client_view_StorageConnectViewImpl_1StorageConnectViewUiBinderImpl_1GenBundle_1default_1InlineClientBundleGenerator_2_classLit = createForClass('de.voot.encfsanywhere.client.view.', 'StorageConnectViewImpl_StorageConnectViewUiBinderImpl_GenBundle_default_InlineClientBundleGenerator', 275), Lde_voot_encfsanywhere_client_view_StorageConnectViewImpl_1StorageConnectViewUiBinderImpl_1GenBundle_1default_1InlineClientBundleGenerator$1_2_classLit = createForClass('de.voot.encfsanywhere.client.view.', 'StorageConnectViewImpl_StorageConnectViewUiBinderImpl_GenBundle_default_InlineClientBundleGenerator$1', 276), Lcom_google_gwt_i18n_client_constants_NumberConstantsImpl_1_2_classLit = createForClass('com.google.gwt.i18n.client.constants.', 'NumberConstantsImpl_', 81), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSInputStream_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSInputStream', 353), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSInvalidConfigException_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSInvalidConfigException', 354), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSInvalidPasswordException_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSInvalidPasswordException', 355), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSConfigParser$1_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSConfigParser$1', 344), Lde_voot_encfsgwt_shared_mrpdaemon_EncFSConfigParser$1$1_2_classLit = createForClass('de.voot.encfsgwt.shared.mrpdaemon.', 'EncFSConfigParser$1$1', 345), Lde_voot_encfsanywhere_fs_shared_io_DropboxInputStream_2_classLit = createForClass('de.voot.encfsanywhere.fs.shared.io.', 'DropboxInputStream', 299), Lde_voot_encfsgwt_shared_jre_NoSuchAlgorithmException_2_classLit = createForClass('de.voot.encfsgwt.shared.jre.', 'NoSuchAlgorithmException', 328), Lde_voot_encfsgwt_shared_jre_PBEKeySpec_2_classLit = createForClass('de.voot.encfsgwt.shared.jre.', 'PBEKeySpec', 329), Lde_voot_encfsgwt_shared_jre_SecretKeySpec_2_classLit = createForClass('de.voot.encfsgwt.shared.jre.', 'SecretKeySpec', 330), Ljava_io_UnsupportedEncodingException_2_classLit = createForClass('java.io.', 'UnsupportedEncodingException', 382), Lde_voot_encfsgwt_shared_crypto_PBKDF2SHA1SecretKey_2_classLit = createForClass('de.voot.encfsgwt.shared.crypto.', 'PBKDF2SHA1SecretKey', 317), Lcom_google_gwt_dom_client_StyleInjector$StyleInjectorImpl_2_classLit = createForClass('com.google.gwt.dom.client.', 'StyleInjector$StyleInjectorImpl', 46), Lcom_google_gwt_dom_client_StyleInjector$1_2_classLit = createForClass('com.google.gwt.dom.client.', 'StyleInjector$1', 45), Lcom_google_gwt_xml_client_impl_XMLParserImpl_2_classLit = createForClass('com.google.gwt.xml.client.impl.', 'XMLParserImpl', 218), Lcom_google_gwt_xml_client_impl_XMLParserImplStandard_2_classLit = createForClass('com.google.gwt.xml.client.impl.', 'XMLParserImplStandard', 219), Lcom_google_gwt_xml_client_impl_DOMItem_2_classLit = createForClass('com.google.gwt.xml.client.impl.', 'DOMItem', 207), Lcom_google_gwt_xml_client_impl_NodeImpl_2_classLit = createForClass('com.google.gwt.xml.client.impl.', 'NodeImpl', 206), Lcom_google_gwt_xml_client_DOMException_2_classLit = createForClass('com.google.gwt.xml.client.', 'DOMException', 203), Lcom_google_gwt_xml_client_impl_DOMParseException_2_classLit = createForClass('com.google.gwt.xml.client.impl.', 'DOMParseException', 212), Lcom_google_gwt_xml_client_impl_AttrImpl_2_classLit = createForClass('com.google.gwt.xml.client.impl.', 'AttrImpl', 205), Lcom_google_gwt_xml_client_impl_CharacterDataImpl_2_classLit = createForClass('com.google.gwt.xml.client.impl.', 'CharacterDataImpl', 210), Lcom_google_gwt_xml_client_impl_TextImpl_2_classLit = createForClass('com.google.gwt.xml.client.impl.', 'TextImpl', 209), Lcom_google_gwt_xml_client_impl_CDATASectionImpl_2_classLit = createForClass('com.google.gwt.xml.client.impl.', 'CDATASectionImpl', 208), Lcom_google_gwt_xml_client_impl_CommentImpl_2_classLit = createForClass('com.google.gwt.xml.client.impl.', 'CommentImpl', 211), Lcom_google_gwt_xml_client_impl_DocumentFragmentImpl_2_classLit = createForClass('com.google.gwt.xml.client.impl.', 'DocumentFragmentImpl', 213), Lcom_google_gwt_xml_client_impl_DocumentImpl_2_classLit = createForClass('com.google.gwt.xml.client.impl.', 'DocumentImpl', 214), Lcom_google_gwt_xml_client_impl_ElementImpl_2_classLit = createForClass('com.google.gwt.xml.client.impl.', 'ElementImpl', 215), Lcom_google_gwt_xml_client_impl_ProcessingInstructionImpl_2_classLit = createForClass('com.google.gwt.xml.client.impl.', 'ProcessingInstructionImpl', 217), Lcom_google_gwt_xml_client_impl_NodeListImpl_2_classLit = createForClass('com.google.gwt.xml.client.impl.', 'NodeListImpl', 216);\n$sendStats('moduleStartup', 'moduleEvalEnd');\ngwtOnLoad(__gwtModuleFunction.__errFn, __gwtModuleFunction.__moduleName, __gwtModuleFunction.__moduleBase, __gwtModuleFunction.__softPermutationId,__gwtModuleFunction.__computePropValue);\n$sendStats('moduleStartup', 'end');\n//# sourceURL=EncfsAnywhere-0.js\n"]);
